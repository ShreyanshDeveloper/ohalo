import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';
export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K];
};
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]?: Maybe<T[SubKey]>;
};
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & {
  [SubKey in K]: Maybe<T[SubKey]>;
};
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  DateTime: any;
  Number: any;
  QueryArgument: any;
};

export type Address = AddressInterface &
  ElementInterface & {
    __typename?: 'Address';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** First line of the address */
    addressLine1?: Maybe<Scalars['String']>;
    /** Second line of the address */
    addressLine2?: Maybe<Scalars['String']>;
    /** Administrative area. */
    administrativeArea?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** Two-letter country code */
    countryCode: Scalars['String'];
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Dependent locality */
    dependentLocality?: Maybe<Scalars['String']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The first name on the address. */
    firstName?: Maybe<Scalars['String']>;
    /** The full name on the address. */
    fullName?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The last name on the address. */
    lastName?: Maybe<Scalars['String']>;
    /** Latitude */
    latitude?: Maybe<Scalars['String']>;
    /** Locality */
    locality?: Maybe<Scalars['String']>;
    /** Longitude */
    longitude?: Maybe<Scalars['String']>;
    /** Organization name */
    organization?: Maybe<Scalars['String']>;
    /** Organization tax ID */
    organizationTaxId?: Maybe<Scalars['String']>;
    /** Postal code */
    postalCode?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Sorting code */
    sortingCode?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Address_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all addresses. */
export type AddressInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** First line of the address */
  addressLine1?: Maybe<Scalars['String']>;
  /** Second line of the address */
  addressLine2?: Maybe<Scalars['String']>;
  /** Administrative area. */
  administrativeArea?: Maybe<Scalars['String']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** Two-letter country code */
  countryCode: Scalars['String'];
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Dependent locality */
  dependentLocality?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The first name on the address. */
  firstName?: Maybe<Scalars['String']>;
  /** The full name on the address. */
  fullName?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The last name on the address. */
  lastName?: Maybe<Scalars['String']>;
  /** Latitude */
  latitude?: Maybe<Scalars['String']>;
  /** Locality */
  locality?: Maybe<Scalars['String']>;
  /** Longitude */
  longitude?: Maybe<Scalars['String']>;
  /** Organization name */
  organization?: Maybe<Scalars['String']>;
  /** Organization tax ID */
  organizationTaxId?: Maybe<Scalars['String']>;
  /** Postal code */
  postalCode?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** Sorting code */
  sortingCode?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all addresses. */
export type AddressInterface_CountArgs = {
  field: Scalars['String'];
};

export type AssetCriteriaInput = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the assets’ files’ last-modified dates. */
  dateModified?: InputMaybe<Scalars['String']>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the assets’ filenames. */
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the folders the assets belong to, per the folders’ IDs. */
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on whether the assets have alternative text. */
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the assets’ image heights. */
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Broadens the query results to include assets from any of the subfolders of the folder specified by `folderId`. */
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the assets’ file kinds. */
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the assets’ file sizes (in bytes). */
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the user the assets were uploaded by, per the user’s ID. */
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ handles. */
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the volumes the assets belong to, per the volumes’ IDs. */
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the assets’ image widths. */
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** A list of transform handles to preload. */
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Alternative text for the asset. */
  alt?: Maybe<Scalars['String']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the asset file was last modified. */
  dateModified?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The file extension for the asset file. */
  extension: Scalars['String'];
  /** The filename of the asset file. */
  filename: Scalars['String'];
  /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
  focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
  /** The ID of the folder that the asset belongs to. */
  folderId: Scalars['Int'];
  /** Whether a user-defined focal point is set on the asset. */
  hasFocalPoint: Scalars['Boolean'];
  /** The height in pixels or null if it’s not an image. */
  height?: Maybe<Scalars['Int']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** An `<img>` tag based on this asset. */
  img?: Maybe<Scalars['String']>;
  /** The file kind. */
  kind: Scalars['String'];
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The file’s MIME type, if it can be determined. */
  mimeType?: Maybe<Scalars['String']>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<AssetInterface>;
  /** The asset’s path in the volume. */
  path: Scalars['String'];
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<AssetInterface>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The file size in bytes. */
  size?: Maybe<Scalars['String']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
  srcset?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The user who first added this asset (if known). */
  uploader?: Maybe<UserInterface>;
  /** The ID of the user who first added this asset (if known). */
  uploaderId?: Maybe<Scalars['Int']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
  url?: Maybe<Scalars['String']>;
  /** The ID of the volume that the asset belongs to. */
  volumeId?: Maybe<Scalars['Int']>;
  /** The width in pixels or null if it’s not an image. */
  width?: Maybe<Scalars['Int']>;
};

/** This is the interface implemented by all assets. */
export type AssetInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all assets. */
export type AssetInterfaceHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

/** This is the interface implemented by all assets. */
export type AssetInterfaceNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterfacePrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterfaceSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

/** This is the interface implemented by all assets. */
export type AssetInterfaceUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all assets. */
export type AssetInterfaceUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

/** This is the interface implemented by all assets. */
export type AssetInterfaceWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type CategoryCriteriaInput = {
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf?: InputMaybe<Scalars['Int']>;
  /** Whether to only return categories that the user has permission to edit. */
  editable?: InputMaybe<Scalars['Boolean']>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the category groups the categories belong to per the group’s handles. */
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the category groups the categories belong to, per the groups’ IDs. */
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level?: InputMaybe<Scalars['Int']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore?: InputMaybe<Scalars['Int']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The category’s children. */
  children: Array<CategoryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The handle of the group that contains the category. */
  groupHandle: Scalars['String'];
  /** The ID of the group that contains the category. */
  groupId: Scalars['Int'];
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized: Array<CategoryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<CategoryInterface>;
  /** The category’s parent. */
  parent?: Maybe<CategoryInterface>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<CategoryInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic?: Maybe<SeomaticInterface>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all categories. */
export type CategoryInterfaceChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterfaceLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterfaceNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterfaceParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterfacePrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all categories. */
export type CategoryInterfaceSeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type Element = ElementInterface & {
  __typename?: 'Element';
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

export type Element_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all elements. */
export type ElementInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all elements. */
export type ElementInterface_CountArgs = {
  field: Scalars['String'];
};

export type EntryCriteriaInput = {
  /** Narrows the query results to only entries that were posted on or after a certain date. */
  after?: InputMaybe<Scalars['String']>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `ancestorOf`. */
  ancestorDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are ancestors of another element in its structure, provided by its ID. */
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to. */
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the user group the entries’ authors belong to, per the groups’ IDs. */
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the entries’ authors. */
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only entries that were posted before a certain date. */
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to only elements that are up to a certain distance away from the element in its structure specified by `descendantOf`. */
  descendantDist?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only elements that are descendants of another element in its structure provided by its ID. */
  descendantOf?: InputMaybe<Scalars['Int']>;
  /** The drafts’ creator ID */
  draftCreator?: InputMaybe<Scalars['Int']>;
  /** The ID of the draft to return (from the `drafts` table) */
  draftId?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only drafts of a given element.  Set to `false` to fetch unpublished drafts. */
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  /** Whether draft elements should be returned. */
  drafts?: InputMaybe<Scalars['Boolean']>;
  /** Whether to only return entries that the user has permission to edit. */
  editable?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the entries’ expiry dates. */
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on whether the elements have any descendants in their structure. */
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on whether the elements are “leaves” in their structure (element with no descendants). */
  leaves?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ level within the structure. */
  level?: InputMaybe<Scalars['Int']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only the entry that comes immediately after another element in its structure, provided by its ID. */
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only entries that are positioned after another element in its structure, provided by its ID. */
  positionedAfter?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results to only entries that are positioned before another element in its structure, provided by its ID. */
  positionedBefore?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on the entries’ post dates. */
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only the entry that comes immediately before another element in its structure, provided by its ID. */
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  /** Whether provisional drafts should be returned. */
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Narrows the query results based on the section handles the entries belong to. */
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the sections the entries belong to, per the sections’ IDs. */
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which structure data should be joined into the query. */
  structureId?: InputMaybe<Scalars['Int']>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the entries’ entry type handles. */
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the entries’ entry types, per the types’ IDs. */
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Explicitly determines whether the query should join in the structure data. */
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
  ancestors: Array<EntryInterface>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The entry’s author. */
  author?: Maybe<UserInterface>;
  /** The ID of the author of this entry. */
  authorId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical ID. */
  canonicalId?: Maybe<Scalars['Int']>;
  /** Returns the entry’s canonical UUID. */
  canonicalUid?: Maybe<Scalars['String']>;
  /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
  children: Array<EntryInterface>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
  descendants: Array<EntryInterface>;
  /** The creator of a given draft. */
  draftCreator?: Maybe<UserInterface>;
  /** The draft ID (from the `drafts` table). */
  draftId?: Maybe<Scalars['Int']>;
  /** The name of the draft. */
  draftName?: Maybe<Scalars['String']>;
  /** The notes for the draft. */
  draftNotes?: Maybe<Scalars['String']>;
  /** The drafts for the entry. */
  drafts?: Maybe<Array<Maybe<EntryInterface>>>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The expiry date of the entry. */
  expiryDate?: Maybe<Scalars['DateTime']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Returns whether this is a draft. */
  isDraft?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is a revision. */
  isRevision?: Maybe<Scalars['Boolean']>;
  /** Returns whether this is an unpublished draft. */
  isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The same element in other locales. */
  localized: Array<EntryInterface>;
  /** Returns the next element relative to this one, from a given set of criteria. */
  next?: Maybe<EntryInterface>;
  /** The entry’s parent, if the section is a structure. */
  parent?: Maybe<EntryInterface>;
  /** The entry’s post date. */
  postDate?: Maybe<Scalars['DateTime']>;
  /** Returns the previous element relative to this one, from a given set of criteria. */
  prev?: Maybe<EntryInterface>;
  /** The revision ID (from the `revisions` table). */
  revisionId?: Maybe<Scalars['Int']>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The handle of the section that contains the entry. */
  sectionHandle: Scalars['String'];
  /** The ID of the section that contains the entry. */
  sectionId: Scalars['Int'];
  /** This query is used to query for SEOmatic meta data. */
  seomatic?: Maybe<SeomaticInterface>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /**
   * Returns the entry’s canonical ID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
   */
  sourceId?: Maybe<Scalars['Int']>;
  /**
   * Returns the entry’s canonical UUID.
   * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
   */
  sourceUid?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the entry type that contains the entry. */
  typeHandle: Scalars['String'];
  /** The ID of the entry type that contains the entry. */
  typeId: Scalars['Int'];
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The element’s full URL */
  url?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfacePrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all entries. */
export type EntryInterfaceSeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type FieldAttribute = {
  __typename?: 'FieldAttribute';
  label?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all fields. */
export type FieldInterface = {
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type FieldOption = {
  __typename?: 'FieldOption';
  /** Whether this option has been marked as a default. */
  isDefault?: Maybe<Scalars['Boolean']>;
  /** Whether this option has been marked as an `optgroup`. */
  isOptgroup?: Maybe<Scalars['Boolean']>;
  /** The label of the option. */
  label?: Maybe<Scalars['String']>;
  /** The value of the option. */
  value?: Maybe<Scalars['String']>;
};

export type Field_Agree = FieldInterface & {
  __typename?: 'Field_Agree';
  checkedValue?: Maybe<Scalars['String']>;
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  defaultState?: Maybe<Scalars['Boolean']>;
  defaultValue?: Maybe<Scalars['String']>;
  description?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  uncheckedValue?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_Categories = FieldInterface & {
  __typename?: 'Field_Categories';
  allowLimit?: Maybe<Scalars['Boolean']>;
  allowMultipleSources?: Maybe<Scalars['Boolean']>;
  branchLimit?: Maybe<Scalars['Int']>;
  categories?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  defaultCategory?: Maybe<CategoryInterface>;
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  rootCategory?: Maybe<CategoryInterface>;
  searchable?: Maybe<Scalars['Boolean']>;
  showStructure?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_CategoriesCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Field_CategoriesDefaultCategoryArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Field_CategoriesRootCategoryArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Field_Dropdown = FieldInterface & {
  __typename?: 'Field_Dropdown';
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  multi?: Maybe<Scalars['Boolean']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  options?: Maybe<Array<Maybe<FieldOption>>>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_Email = FieldInterface & {
  __typename?: 'Field_Email';
  blockedDomains?: Maybe<Array<Maybe<Scalars['String']>>>;
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  uniqueValue?: Maybe<Scalars['Boolean']>;
  validateDomain?: Maybe<Scalars['Boolean']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_Hidden = FieldInterface & {
  __typename?: 'Field_Hidden';
  columnType?: Maybe<Scalars['String']>;
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  cookieName?: Maybe<Scalars['String']>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  defaultOption?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  queryParameter?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_MultiLineText = FieldInterface & {
  __typename?: 'Field_MultiLineText';
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  limit?: Maybe<Scalars['Boolean']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  max?: Maybe<Scalars['Int']>;
  maxType?: Maybe<Scalars['String']>;
  min?: Maybe<Scalars['Int']>;
  minType?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  richTextButtons?: Maybe<Array<Maybe<Scalars['String']>>>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  useRichText?: Maybe<Scalars['Boolean']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_Phone = FieldInterface & {
  __typename?: 'Field_Phone';
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  countryAllowed?: Maybe<Scalars['String']>;
  countryCollapsed?: Maybe<Scalars['Boolean']>;
  countryDefaultValue?: Maybe<Scalars['String']>;
  countryEnabled?: Maybe<Scalars['Boolean']>;
  countryOptions?: Maybe<Array<Maybe<FieldAttribute>>>;
  countryShowDialCode?: Maybe<Scalars['Boolean']>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

export type Field_SingleLineText = FieldInterface & {
  __typename?: 'Field_SingleLineText';
  /** The field’s conditions as a JSON string. */
  conditions?: Maybe<Scalars['String']>;
  /** The field’s container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** The field’s default value as a string. Some fields have different fields for their default value. */
  defaultValue?: Maybe<Scalars['String']>;
  /** The field’s display name (last portion of the class). */
  displayName?: Maybe<Scalars['String']>;
  /** Whether the field has conditions enabled. */
  enableConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the field has content encryption enabled. */
  enableContentEncryption?: Maybe<Scalars['Boolean']>;
  /** The field’s error message. */
  errorMessage?: Maybe<Scalars['String']>;
  /** The field’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** Whether the field should be included in email content. */
  includeInEmail?: Maybe<Scalars['Boolean']>;
  /** The field’s input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The field’s full GQL input type. Useful for mutations. */
  inputTypeName?: Maybe<Scalars['String']>;
  /** The field’s instructions. */
  instructions?: Maybe<Scalars['String']>;
  /** The field’s instructions position. This will be a `verbb\formie\positions` class name. */
  instructionsPosition?: Maybe<Scalars['String']>;
  /** The field’s label position. This will be a `verbb\formie\positions` class name. */
  labelPosition?: Maybe<Scalars['String']>;
  limit?: Maybe<Scalars['Boolean']>;
  /** The field handle for another field that this value should match exactly. */
  matchField?: Maybe<Scalars['String']>;
  max?: Maybe<Scalars['Int']>;
  maxType?: Maybe<Scalars['String']>;
  min?: Maybe<Scalars['Int']>;
  minType?: Maybe<Scalars['String']>;
  /** The field’s name. */
  name?: Maybe<Scalars['String']>;
  /** The field’s placeholder. */
  placeholder?: Maybe<Scalars['String']>;
  /** The field’s pre-populated value extracted from the query string. */
  prePopulate?: Maybe<Scalars['String']>;
  /** Whether the field is required. */
  required?: Maybe<Scalars['Boolean']>;
  /** The field’s type. */
  type?: Maybe<Scalars['String']>;
  /** The field’s full GQL type. */
  typeName?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The field’s visibility. */
  visibility?: Maybe<Scalars['String']>;
};

/** Contents of a file */
export type FileContents = {
  __typename?: 'FileContents';
  contents?: Maybe<Scalars['String']>;
  filename: Scalars['String'];
};

export type FormIntegrationsType = {
  __typename?: 'FormIntegrationsType';
  /** Whether the integration is enabled. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The integration’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The integration’s name. */
  name?: Maybe<Scalars['String']>;
  /** The integration’s settings as a JSON string. */
  settings?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all forms. */
export type FormInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** A list of captcha values (name and value) to assist with spam protection. */
  captchas?: Maybe<Array<Maybe<FormieCaptchaType>>>;
  /** The form’s config as JSON. */
  configJson?: Maybe<Scalars['String']>;
  /** A CSRF token (name and value). */
  csrfToken?: Maybe<FormieCsrfTokenType>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The form’s fields. */
  formFields?: Maybe<Array<Maybe<FieldInterface>>>;
  /** The form’s handle. */
  handle?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The form’s pages. */
  pages?: Maybe<Array<Maybe<PageInterface>>>;
  /** The form’s rows. */
  rows?: Maybe<Array<Maybe<RowInterface>>>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The form’s settings. */
  settings?: Maybe<FormSettingsType>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The form’s endpoint for sending submissions to, if using POST requests. */
  submissionEndpoint?: Maybe<Scalars['String']>;
  /** The form’s GQL mutation name for submissions to use. */
  submissionMutationName?: Maybe<Scalars['String']>;
  /** The form’s rendered HTML. */
  templateHtml?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all forms. */
export type FormInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all forms. */
export type FormInterfaceFormFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all forms. */
export type FormInterfaceTemplateHtmlArgs = {
  options?: InputMaybe<Scalars['String']>;
  populateFormValues?: InputMaybe<Scalars['String']>;
};

export type FormSettingsType = {
  __typename?: 'FormSettingsType';
  /** The form’s default instructions position for fields. This will be a `verbb\formie\positions` class name. */
  defaultInstructionsPosition?: Maybe<Scalars['String']>;
  /** The form’s default label position for fields. This will be a `verbb\formie\positions` class name. */
  defaultLabelPosition?: Maybe<Scalars['String']>;
  /** Whether to show the form’s current page title. */
  displayCurrentPageTitle?: Maybe<Scalars['Boolean']>;
  /** Whether to show the form’s title. */
  displayFormTitle?: Maybe<Scalars['Boolean']>;
  /** Whether to show the form’s page progress. */
  displayPageProgress?: Maybe<Scalars['Boolean']>;
  /** Whether to show the form’s page tabs. */
  displayPageTabs?: Maybe<Scalars['Boolean']>;
  /** The form’s submit error message. */
  errorMessageHtml?: Maybe<Scalars['String']>;
  /** The form’s error message position. Either `null`, `top-form` or `bottom-form`. */
  errorMessagePosition?: Maybe<Scalars['String']>;
  /** The form’s enabled integrations. */
  integrations?: Maybe<Array<Maybe<FormIntegrationsType>>>;
  /** The type of loading indicator to use. Either `spinner` or `text`. */
  loadingIndicator?: Maybe<Scalars['String']>;
  /** The form’s loading indicator text. */
  loadingIndicatorText?: Maybe<Scalars['String']>;
  /** The form’s progress bar position. Either `start` or `end`. */
  progressPosition?: Maybe<Scalars['String']>;
  /** The form’s submit action entry (for redirection), if `submitAction` is `entry`. */
  redirectEntry?: Maybe<EntryInterface>;
  /** The form’s submit action redirect URL, resolved depending on `submitAction` being `entry` or `url`. */
  redirectUrl?: Maybe<Scalars['String']>;
  /** Whether to the form should scroll to the top of the page when submitted. */
  scrollToTop?: Maybe<Scalars['Boolean']>;
  /** The form’s submit action. Either `message`, `entry`, `url`, `reload`. */
  submitAction?: Maybe<Scalars['String']>;
  /** Whether to hide the form’s success message. */
  submitActionFormHide?: Maybe<Scalars['Boolean']>;
  /** The form’s submit success message. */
  submitActionMessageHtml?: Maybe<Scalars['String']>;
  /** The form’s submit message position. Either `top-form` or `bottom-form`. */
  submitActionMessagePosition?: Maybe<Scalars['String']>;
  /** The form’s submit success message timeout in seconds. */
  submitActionMessageTimeout?: Maybe<Scalars['Int']>;
  /** The form’s submit redirect option (if in new tab or same tab). Either `same-tab` or `new-tab`. */
  submitActionTab?: Maybe<Scalars['String']>;
  /** The form’s submit method. Either `page-reload` or `ajax`. */
  submitMethod?: Maybe<Scalars['String']>;
  /** Whether to validate the form’s on focus. */
  validationOnFocus?: Maybe<Scalars['Boolean']>;
  /** Whether to validate the form’s on submit. */
  validationOnSubmit?: Maybe<Scalars['Boolean']>;
};

export type FormSettingsTypeRedirectEntryArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type FormieCaptchaType = {
  __typename?: 'FormieCaptchaType';
  /** The captcha handle. */
  handle?: Maybe<Scalars['String']>;
  /** The captcha name. */
  name?: Maybe<Scalars['String']>;
  /** The catpcha value. */
  value?: Maybe<Scalars['String']>;
};

export type FormieCsrfTokenType = {
  __typename?: 'FormieCsrfTokenType';
  /** The CSRF name. */
  name?: Maybe<Scalars['String']>;
  /** The CSRF token. */
  value?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all global sets. */
export type GlobalSetInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The handle of the global set. */
  handle: Scalars['String'];
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The name of the global set. */
  name: Scalars['String'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all global sets. */
export type GlobalSetInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the matrix block. */
  fieldId: Scalars['Int'];
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the primary owner of the Matrix block. */
  primaryOwnerId: Scalars['Int'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the matrix block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The handle of the matrix block’s type. */
  typeHandle: Scalars['String'];
  /** The ID of the matrix block’s type. */
  typeId: Scalars['Int'];
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all matrix blocks. */
export type MatrixBlockInterface_CountArgs = {
  field: Scalars['String'];
};

export type Mutation = {
  __typename?: 'Mutation';
  ping?: Maybe<Scalars['String']>;
  /** Save the “Enquiry Form” submission. */
  save_enquiryForm_Submission?: Maybe<EnquiryForm_Submission>;
  /** Save the “Product Guide” submission. */
  save_productGuide_Submission?: Maybe<ProductGuide_Submission>;
  /** Save the “Resources Search Form [Admin use only - Do not change]” submission. */
  save_resourcesSearchForm_Submission?: Maybe<ResourcesSearchForm_Submission>;
};

export type MutationSave_EnquiryForm_SubmissionArgs = {
  agree?: InputMaybe<Scalars['String']>;
  companyName?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Scalars['String']>;
  iAmInterestedIn?: InputMaybe<Scalars['String']>;
  iWorkIn?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isIncomplete?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  officialEmail?: InputMaybe<Scalars['String']>;
  phoneNumber?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  statusId?: InputMaybe<Scalars['Int']>;
  termsAndConditions?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  uid?: InputMaybe<Scalars['String']>;
};

export type MutationSave_ProductGuide_SubmissionArgs = {
  companyName?: InputMaybe<Scalars['String']>;
  enabled?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['ID']>;
  isIncomplete?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  officialEmail?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  statusId?: InputMaybe<Scalars['Int']>;
  termsAndConditions?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  uid?: InputMaybe<Scalars['String']>;
};

export type MutationSave_ResourcesSearchForm_SubmissionArgs = {
  enabled?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['ID']>;
  isIncomplete?: InputMaybe<Scalars['Boolean']>;
  search?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  status?: InputMaybe<Scalars['String']>;
  statusId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Scalars['String']>;
  topic?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  uid?: InputMaybe<Scalars['String']>;
};

export type NodeCustomAttribute = {
  __typename?: 'NodeCustomAttribute';
  attribute?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all nodes. */
export type NodeInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The node’s children. Accepts the same arguments as the `nodes` query. */
  children?: Maybe<Array<Maybe<NodeInterface>>>;
  /** Any additional classes for the node. */
  classes?: Maybe<Scalars['String']>;
  /** Any additional custom attributes for the node. */
  customAttributes?: Maybe<Array<Maybe<NodeCustomAttribute>>>;
  /** Any additional data for the node. */
  data?: Maybe<Scalars['String']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The element the node links to. */
  element?: Maybe<ElementInterface>;
  /** The ID of the element this node is linked to. */
  elementId?: Maybe<Scalars['Int']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s level within its structure */
  level?: Maybe<Scalars['Int']>;
  /** The element’s left position within its structure. */
  lft?: Maybe<Scalars['Int']>;
  /** The handle of the navigation this node belongs to. */
  navHandle?: Maybe<Scalars['String']>;
  /** The ID of the navigation this node belongs to. */
  navId?: Maybe<Scalars['Int']>;
  /** The name of the navigation this node belongs to. */
  navName?: Maybe<Scalars['String']>;
  /** Whether this node should open in a new window. */
  newWindow?: Maybe<Scalars['String']>;
  /** The node’s URI */
  nodeUri?: Maybe<Scalars['String']>;
  /** The node’s parent. */
  parent?: Maybe<NodeInterface>;
  /** The element’s right position within its structure. */
  rgt?: Maybe<Scalars['Int']>;
  /** The element’s structure’s root ID */
  root?: Maybe<Scalars['Int']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s structure ID. */
  structureId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The type of node this is. */
  type?: Maybe<Scalars['String']>;
  /** The display name for the type of node this is. */
  typeLabel?: Maybe<Scalars['String']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The node’s full URL */
  url?: Maybe<Scalars['String']>;
  /** The URL for this navigation item. */
  urlSuffix?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all nodes. */
export type NodeInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all nodes. */
export type NodeInterfaceChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nav?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  navHandle?: InputMaybe<Scalars['String']>;
  navId?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all pages. */
export type PageInterface = {
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The page’s name. */
  name?: Maybe<Scalars['String']>;
  /** The page’s fields. */
  pageFields?: Maybe<Array<Maybe<FieldInterface>>>;
  /** The page’s rows. */
  rows?: Maybe<Array<Maybe<RowInterface>>>;
  /** The page’s settings, including buttons. */
  settings?: Maybe<PageSettingsInterface>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all pages. */
export type PageInterfacePageFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

/** This is the interface implemented by all pages. */
export type PageSettingsInterface = {
  /** The page’s back button label. */
  backButtonLabel?: Maybe<Scalars['String']>;
  /** The page’s button (back and submit) positions. */
  buttonsPosition?: Maybe<Scalars['String']>;
  /** The page’s button (back and submit) container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The page’s button (back and submit) CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** Whether the page’s next button has conditions enabled, for multi-page forms. */
  enableNextButtonConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the page has conditions enabled. */
  enablePageConditions?: Maybe<Scalars['Boolean']>;
  /** The page’s button (back and submit) input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The page’s conditions for whether to show the next button, for multi-page forms as a JSON string. */
  nextButtonConditions?: Maybe<Scalars['String']>;
  /** The page’s conditions as a JSON string. */
  pageConditions?: Maybe<Scalars['String']>;
  /** The page’s draft button label. */
  saveButtonLabel?: Maybe<Scalars['String']>;
  /** Whether to show the page’s back button. */
  showBackButton?: Maybe<Scalars['Boolean']>;
  /** Whether to show the page’s draft button. */
  showSaveButton?: Maybe<Scalars['Boolean']>;
  /** The page’s submit button label. */
  submitButtonLabel?: Maybe<Scalars['String']>;
};

export type PageSettingsType = PageSettingsInterface & {
  __typename?: 'PageSettingsType';
  /** The page’s back button label. */
  backButtonLabel?: Maybe<Scalars['String']>;
  /** The page’s button (back and submit) positions. */
  buttonsPosition?: Maybe<Scalars['String']>;
  /** The page’s button (back and submit) container attributes. */
  containerAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The page’s button (back and submit) CSS classes. */
  cssClasses?: Maybe<Scalars['String']>;
  /** Whether the page’s next button has conditions enabled, for multi-page forms. */
  enableNextButtonConditions?: Maybe<Scalars['Boolean']>;
  /** Whether the page has conditions enabled. */
  enablePageConditions?: Maybe<Scalars['Boolean']>;
  /** The page’s button (back and submit) input attributes. */
  inputAttributes?: Maybe<Array<Maybe<FieldAttribute>>>;
  /** The page’s conditions for whether to show the next button, for multi-page forms as a JSON string. */
  nextButtonConditions?: Maybe<Scalars['String']>;
  /** The page’s conditions as a JSON string. */
  pageConditions?: Maybe<Scalars['String']>;
  /** The page’s draft button label. */
  saveButtonLabel?: Maybe<Scalars['String']>;
  /** Whether to show the page’s back button. */
  showBackButton?: Maybe<Scalars['Boolean']>;
  /** Whether to show the page’s draft button. */
  showSaveButton?: Maybe<Scalars['Boolean']>;
  /** The page’s submit button label. */
  submitButtonLabel?: Maybe<Scalars['String']>;
};

export type PageType = PageInterface & {
  __typename?: 'PageType';
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The page’s name. */
  name?: Maybe<Scalars['String']>;
  /** The page’s fields. */
  pageFields?: Maybe<Array<Maybe<FieldInterface>>>;
  /** The page’s rows. */
  rows?: Maybe<Array<Maybe<RowInterface>>>;
  /** The page’s settings, including buttons. */
  settings?: Maybe<PageSettingsInterface>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
};

export type PageTypePageFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

export type Query = {
  __typename?: 'Query';
  /** This query is used to query for a single address. */
  address?: Maybe<AddressInterface>;
  /** This query is used to return the number of addresses. */
  addressCount: Scalars['Int'];
  /** This query is used to query for addresses. */
  addresses?: Maybe<Array<Maybe<AddressInterface>>>;
  /** Entries within the articles section. */
  articlesEntries?: Maybe<Array<Maybe<ArticlesSectionEntryUnion>>>;
  /** This query is used to query for a single asset. */
  asset?: Maybe<AssetInterface>;
  /** This query is used to return the number of assets. */
  assetCount: Scalars['Int'];
  /** This query is used to query for assets. */
  assets?: Maybe<Array<Maybe<AssetInterface>>>;
  /** Entries within the caseStudies section. */
  caseStudiesEntries?: Maybe<Array<Maybe<CaseStudiesSectionEntryUnion>>>;
  /** This query is used to query for categories. */
  categories?: Maybe<Array<Maybe<CategoryInterface>>>;
  /** This query is used to query for a single category. */
  category?: Maybe<CategoryInterface>;
  /** This query is used to return the number of categories. */
  categoryCount: Scalars['Int'];
  /** Entries within the columnSectionLayouts section. */
  columnSectionLayoutsEntries?: Maybe<
    Array<Maybe<ColumnSectionLayoutsSectionEntryUnion>>
  >;
  /** This query is used to query for entries. */
  entries?: Maybe<Array<Maybe<EntryInterface>>>;
  /** This query is used to query for a single entry. */
  entry?: Maybe<EntryInterface>;
  /** This query is used to return the number of entries. */
  entryCount: Scalars['Int'];
  /** Entries within the faqs section. */
  faqsEntries?: Maybe<Array<Maybe<FaqsSectionEntryUnion>>>;
  /** This query is used to query for a single form. */
  formieForm?: Maybe<FormInterface>;
  /** This query is used to return the number of forms. */
  formieFormCount: Scalars['Int'];
  /** This query is used to query for forms. */
  formieForms?: Maybe<Array<Maybe<FormInterface>>>;
  /** This query is used to query for a single global set. */
  globalSet?: Maybe<GlobalSetInterface>;
  /** This query is used to query for global sets. */
  globalSets?: Maybe<Array<Maybe<GlobalSetInterface>>>;
  /** Entries within the homepage section. */
  homepageEntries?: Maybe<Array<Maybe<HomepageSectionEntryUnion>>>;
  /** Entries within the informationGridLayouts section. */
  informationGridLayoutsEntries?: Maybe<
    Array<Maybe<InformationGridLayoutsSectionEntryUnion>>
  >;
  /** Entries within the linkList section. */
  linkListEntries?: Maybe<Array<Maybe<LinkListSectionEntryUnion>>>;
  /** Entries within the navigationBlocks section. */
  navigationBlocksEntries?: Maybe<
    Array<Maybe<NavigationBlocksSectionEntryUnion>>
  >;
  /** This query is used to query for a single node. */
  navigationNode?: Maybe<NodeInterface>;
  /** This query is used to query for nodes. */
  navigationNodes?: Maybe<Array<Maybe<NodeInterface>>>;
  /** Entries within the pages section. */
  pagesEntries?: Maybe<Array<Maybe<PagesSectionEntryUnion>>>;
  ping?: Maybe<Scalars['String']>;
  /** Entries within the resources section. */
  resourcesEntries?: Maybe<Array<Maybe<ResourcesSectionEntryUnion>>>;
  /** This query is used to query for SEOmatic meta data. */
  seomatic?: Maybe<SeomaticInterface>;
  /** This query is used to query for a single tag. */
  tag?: Maybe<TagInterface>;
  /** This query is used to return the number of tags. */
  tagCount: Scalars['Int'];
  /** This query is used to query for tags. */
  tags?: Maybe<Array<Maybe<TagInterface>>>;
  /** Entries within the testimonials section. */
  testimonialsEntries?: Maybe<Array<Maybe<TestimonialsSectionEntryUnion>>>;
  /** This query is used to query for a single user. */
  user?: Maybe<UserInterface>;
  /** This query is used to return the number of users. */
  userCount: Scalars['Int'];
  /** This query is used to query for users. */
  users?: Maybe<Array<Maybe<UserInterface>>>;
};

export type QueryAddressArgs = {
  administrativeArea?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  countryCode?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryAddressCountArgs = {
  administrativeArea?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  countryCode?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryAddressesArgs = {
  administrativeArea?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  countryCode?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryArticlesEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryAssetArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryAssetCountArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryAssetsArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryCaseStudiesEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryCategoryArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryCategoryCountArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryColumnSectionLayoutsEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryEntryArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryEntryCountArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryFaqsEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryFormieFormArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryFormieFormCountArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryFormieFormsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryGlobalSetArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  logo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  navigationType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryGlobalSetsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  logo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  navigationType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryHomepageEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryInformationGridLayoutsEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryLinkListEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryNavigationBlocksEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryNavigationNodeArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nav?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  navHandle?: InputMaybe<Scalars['String']>;
  navId?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryNavigationNodesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nav?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  navHandle?: InputMaybe<Scalars['String']>;
  navId?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryPagesEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryResourcesEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QuerySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type QueryTagArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryTagCountArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryTagsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryTestimonialsEntriesArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type QueryUserArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryUserCountArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type QueryUsersArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all rows. */
export type RowInterface = {
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The row’s fields. */
  rowFields?: Maybe<Array<Maybe<FieldInterface>>>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all rows. */
export type RowInterfaceRowFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

export type RowType = RowInterface & {
  __typename?: 'RowType';
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The row’s fields. */
  rowFields?: Maybe<Array<Maybe<FieldInterface>>>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
};

export type RowTypeRowFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

/** Optional - The SEOmatic environment that should be used */
export enum SeomaticEnvironment {
  /** Live production environment, with indexing enabled */
  Live = 'live',
  /** Local Development environment, with debugging enabled and indexing disabled */
  Local = 'local',
  /** Staging environment, with indexing disabled */
  Staging = 'staging',
}

export enum SeomaticFrontendTemplate {
  /** The ads.txt file */
  Ads = 'ads',
  /** The humans.txt file */
  Humans = 'humans',
  /** The robots.txt file */
  Robots = 'robots',
  /** The security.txt file */
  Security = 'security',
}

/** This is the interface implemented by SEOmatic. */
export type SeomaticInterface = {
  /**
   * The FrontendTemplateContainer SEOmatic container.
   * @deprecated This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.
   */
  frontendTemplateContainer?: Maybe<Scalars['String']>;
  frontendTemplates?: Maybe<Array<Maybe<FileContents>>>;
  /** The MetaJsonLdContainer SEOmatic container. */
  metaJsonLdContainer?: Maybe<Scalars['String']>;
  /** The MetaLinkContainer SEOmatic container. */
  metaLinkContainer?: Maybe<Scalars['String']>;
  /** The MetaScriptContainer SEOmatic container. */
  metaScriptContainer?: Maybe<Scalars['String']>;
  /** The MetaSiteVarsContainer SEOmatic container. */
  metaSiteVarsContainer?: Maybe<Scalars['String']>;
  /** The MetaTagContainer SEOmatic container. */
  metaTagContainer?: Maybe<Scalars['String']>;
  /** The MetaTitleContainer SEOmatic container. */
  metaTitleContainer?: Maybe<Scalars['String']>;
  sitemapIndexes?: Maybe<Array<Maybe<FileContents>>>;
  sitemapStyles?: Maybe<FileContents>;
  sitemaps?: Maybe<Array<Maybe<FileContents>>>;
};

/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceFrontendTemplatesArgs = {
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<SeomaticFrontendTemplate>;
};

/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceSitemapIndexesArgs = {
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
};

/** This is the interface implemented by SEOmatic. */
export type SeomaticInterfaceSitemapsArgs = {
  filename?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  sourceBundleHandle?: InputMaybe<Scalars['String']>;
  sourceBundleType?: InputMaybe<Scalars['String']>;
};

/** This entity has all the SEOmatic fields */
export type SeomaticType = SeomaticInterface & {
  __typename?: 'SeomaticType';
  /**
   * The FrontendTemplateContainer SEOmatic container.
   * @deprecated This query is deprecated and will be removed in the future. You should use `frontendTemplates` instead.
   */
  frontendTemplateContainer?: Maybe<Scalars['String']>;
  frontendTemplates?: Maybe<Array<Maybe<FileContents>>>;
  /** The MetaJsonLdContainer SEOmatic container. */
  metaJsonLdContainer?: Maybe<Scalars['String']>;
  /** The MetaLinkContainer SEOmatic container. */
  metaLinkContainer?: Maybe<Scalars['String']>;
  /** The MetaScriptContainer SEOmatic container. */
  metaScriptContainer?: Maybe<Scalars['String']>;
  /** The MetaSiteVarsContainer SEOmatic container. */
  metaSiteVarsContainer?: Maybe<Scalars['String']>;
  /** The MetaTagContainer SEOmatic container. */
  metaTagContainer?: Maybe<Scalars['String']>;
  /** The MetaTitleContainer SEOmatic container. */
  metaTitleContainer?: Maybe<Scalars['String']>;
  sitemapIndexes?: Maybe<Array<Maybe<FileContents>>>;
  sitemapStyles?: Maybe<FileContents>;
  sitemaps?: Maybe<Array<Maybe<FileContents>>>;
};

/** This entity has all the SEOmatic fields */
export type SeomaticTypeFrontendTemplatesArgs = {
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  type?: InputMaybe<SeomaticFrontendTemplate>;
};

/** This entity has all the SEOmatic fields */
export type SeomaticTypeSitemapIndexesArgs = {
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
};

/** This entity has all the SEOmatic fields */
export type SeomaticTypeSitemapsArgs = {
  filename?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  sourceBundleHandle?: InputMaybe<Scalars['String']>;
  sourceBundleType?: InputMaybe<Scalars['String']>;
};

/** This is the interface implemented by all submissions. */
export type SubmissionInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The submission’s IP Address. */
  ipAddress?: Maybe<Scalars['String']>;
  /** Whether the submission is incomplete. */
  isIncomplete?: Maybe<Scalars['Boolean']>;
  /** Whether the submission is spam. */
  isSpam?: Maybe<Scalars['Boolean']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The submission’s spam type. */
  spamClass?: Maybe<Scalars['String']>;
  /** The submission’s spam reason. */
  spamReason?: Maybe<Scalars['String']>;
  /** The submission’s status. */
  status?: Maybe<Scalars['String']>;
  /** The submission’s status ID. */
  statusId?: Maybe<Scalars['Int']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all submissions. */
export type SubmissionInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The ID of the field that owns the Super Table block. */
  fieldId: Scalars['Int'];
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The ID of the primary owner of the Super Table block. */
  primaryOwnerId: Scalars['Int'];
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The sort order of the Super Table block within the owner element field. */
  sortOrder?: Maybe<Scalars['Int']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The ID of the Super Table block‘s type. */
  typeId: Scalars['Int'];
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all Super Table blocks. */
export type SuperTableBlockInterface_CountArgs = {
  field: Scalars['String'];
};

export type TagCriteriaInput = {
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the tag groups the tags belong to per the group’s handles. */
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the tag groups the tags belong to, per the groups’ IDs. */
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all tags. */
export type TagInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The handle of the group that contains the tag. */
  groupHandle: Scalars['String'];
  /** The ID of the group that contains the tag. */
  groupId: Scalars['Int'];
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all tags. */
export type TagInterface_CountArgs = {
  field: Scalars['String'];
};

export type User = ElementInterface &
  UserInterface & {
    __typename?: 'User';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The user’s addresses. */
    addresses?: Maybe<Array<Maybe<AddressInterface>>>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The user’s email. */
    email?: Maybe<Scalars['String']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The user’s first name. */
    firstName?: Maybe<Scalars['String']>;
    /** The user’s first name or username. */
    friendlyName?: Maybe<Scalars['String']>;
    /** The user’s full name. */
    fullName?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The user’s last name. */
    lastName?: Maybe<Scalars['String']>;
    /** The user’s full name or username. */
    name: Scalars['String'];
    /** The user’s preferences. */
    preferences: Scalars['String'];
    /** The user’s preferred language. */
    preferredLanguage?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The username. */
    username?: Maybe<Scalars['String']>;
  };

export type User_CountArgs = {
  field: Scalars['String'];
};

export type UserAddressesArgs = {
  administrativeArea?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  countryCode?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type UserCriteriaInput = {
  /** Narrows the query results based on whether the users have uploaded any assets. */
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on whether the users are listed as the author of any entries. */
  authors?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ creation dates. */
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ last-updated dates. */
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the users’ email addresses. */
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the users’ first names. */
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Causes the query results to be returned in the order specified by the `id` argument. */
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the users’ full names. */
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the user group the users belong to. */
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the user group the users belong to, per the groups’ IDs. */
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to only users that have (or don’t have) a user photo. */
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ IDs. */
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Causes the query results to be returned in reverse order. */
  inReverse?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the users’ last names. */
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Sets the limit for paginated results. */
  limit?: InputMaybe<Scalars['Int']>;
  /** Sets the offset for paginated results. */
  offset?: InputMaybe<Scalars['Int']>;
  /** Sets the field the returned elements should be ordered by. */
  orderBy?: InputMaybe<Scalars['String']>;
  /** Determines which site should be selected when querying multi-site elements. */
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on a reference string. */
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results to elements that relate to the provided element IDs. This argument is ignored, if `relatedToAll` is also used. */
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to *all* of the provided element IDs. Using this argument will cause `relatedTo` argument to be ignored. **This argument is deprecated.** `relatedTo: ["and", ...ids]` should be used instead. */
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results to elements that relate to an asset list defined with this argument. */
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a category list defined with this argument. */
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to an entry list defined with this argument. */
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a tag list defined with this argument. */
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  /** Narrows the query results to elements that relate to a use list defined with this argument. */
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  /** Narrows the query results to only elements that match a search query. */
  search?: InputMaybe<Scalars['String']>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines which site(s) the elements should be queried in. Defaults to the current (requested) site. */
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the unique identifier for an element-site relation. */
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  /** Narrows the query results based on the elements’ slugs. */
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ titles. */
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the elements’ UIDs. */
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Determines whether only elements with unique IDs should be returned by the query. */
  unique?: InputMaybe<Scalars['Boolean']>;
  /** Narrows the query results based on the elements’ URIs. */
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  /** Narrows the query results based on the users’ usernames. */
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

/** This is the interface implemented by all users. */
export type UserInterface = {
  /** Return a number of related elements for a field. */
  _count?: Maybe<Scalars['Int']>;
  /** The user’s addresses. */
  addresses?: Maybe<Array<Maybe<AddressInterface>>>;
  /** Whether the element is archived or not. */
  archived?: Maybe<Scalars['Boolean']>;
  /** The date the element was created. */
  dateCreated?: Maybe<Scalars['DateTime']>;
  /** The date the element was last updated. */
  dateUpdated?: Maybe<Scalars['DateTime']>;
  /** The user’s email. */
  email?: Maybe<Scalars['String']>;
  /** Whether the element is enabled or not. */
  enabled?: Maybe<Scalars['Boolean']>;
  /** The user’s first name. */
  firstName?: Maybe<Scalars['String']>;
  /** The user’s first name or username. */
  friendlyName?: Maybe<Scalars['String']>;
  /** The user’s full name. */
  fullName?: Maybe<Scalars['String']>;
  /** The ID of the entity */
  id?: Maybe<Scalars['ID']>;
  /** The language of the site element is associated with. */
  language?: Maybe<Scalars['String']>;
  /** The user’s last name. */
  lastName?: Maybe<Scalars['String']>;
  /** The user’s full name or username. */
  name: Scalars['String'];
  /** The user’s preferences. */
  preferences: Scalars['String'];
  /** The user’s preferred language. */
  preferredLanguage?: Maybe<Scalars['String']>;
  /** The element’s search score, if the `search` parameter was used when querying for the element. */
  searchScore?: Maybe<Scalars['Int']>;
  /** The ID of the site the element is associated with. */
  siteId?: Maybe<Scalars['Int']>;
  /** The unique identifier for an element-site relation. */
  siteSettingsId?: Maybe<Scalars['ID']>;
  /** The element’s slug. */
  slug?: Maybe<Scalars['String']>;
  /** The element’s status. */
  status?: Maybe<Scalars['String']>;
  /** The element’s title. */
  title?: Maybe<Scalars['String']>;
  /** Whether the element has been soft-deleted or not. */
  trashed?: Maybe<Scalars['Boolean']>;
  /** The UID of the entity */
  uid?: Maybe<Scalars['String']>;
  /** The element’s URI. */
  uri?: Maybe<Scalars['String']>;
  /** The username. */
  username?: Maybe<Scalars['String']>;
};

/** This is the interface implemented by all users. */
export type UserInterface_CountArgs = {
  field: Scalars['String'];
};

/** This is the interface implemented by all users. */
export type UserInterfaceAddressesArgs = {
  administrativeArea?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  countryCode?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  ownerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ArticleHero_MatrixField = ArticleHero_Hero_BlockType;

export type ArticleHero_Hero_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'articleHero_hero_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    heroContent?: Maybe<Scalars['String']>;
    heroContentImage: Array<Maybe<AssetInterface>>;
    heroLabel?: Maybe<Scalars['String']>;
    heroTitle?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ArticleHero_Hero_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ArticleHero_Hero_BlockTypeHeroContentImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ArticleTags_Tag = ElementInterface &
  TagInterface & {
    __typename?: 'articleTags_Tag';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The handle of the group that contains the tag. */
    groupHandle: Scalars['String'];
    /** The ID of the group that contains the tag. */
    groupId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ArticleTags_Tag_CountArgs = {
  field: Scalars['String'];
};

export type ArticlesSectionEntryUnion = Articles_Default_Entry;

export type Articles_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'articles_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    articleAuthor?: Maybe<Scalars['String']>;
    articleHero: Array<Maybe<ArticleHero_MatrixField>>;
    articleTags: Array<Maybe<TagInterface>>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    contentBlocks: Array<Maybe<ContentBlocks_MatrixField>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    featureImage: Array<Maybe<AssetInterface>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    seo?: Maybe<Scalars['String']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    shortDescription?: Maybe<Scalars['String']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    socialSharing: Array<Maybe<SocialSharing_SuperTableField>>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    topics: Array<Maybe<CategoryInterface>>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    types: Array<Maybe<CategoryInterface>>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Articles_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type Articles_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryArticleHeroArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Articles_Default_EntryArticleTagsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Articles_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryContentBlocksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Articles_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryFeatureImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Articles_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type Articles_Default_EntrySocialSharingArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Articles_Default_EntryTopicsArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Articles_Default_EntryTypesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ButtonGroup_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'buttonGroup_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    button?: Maybe<LinkField_Link>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ButtonGroup_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ButtonGroup_SuperTableField = ButtonGroup_BlockType;

export type Buttons_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'buttons_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    button?: Maybe<LinkField_Link>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Buttons_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Buttons_SuperTableField = Buttons_BlockType;

export type CaseStudiesSectionEntryUnion = CaseStudies_Default_Entry;

export type CaseStudies_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'caseStudies_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    contentBlocks: Array<Maybe<ContentBlocks_MatrixField>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    featureImage: Array<Maybe<AssetInterface>>;
    hero: Array<Maybe<Hero_MatrixField>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    seo?: Maybe<Scalars['String']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    shortDescription?: Maybe<Scalars['String']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    topics: Array<Maybe<CategoryInterface>>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type CaseStudies_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type CaseStudies_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryContentBlocksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type CaseStudies_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryFeatureImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type CaseStudies_Default_EntryHeroArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type CaseStudies_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type CaseStudies_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type CaseStudies_Default_EntryTopicsArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnBlocks_MatrixField =
  | ColumnBlocks_Asset_BlockType
  | ColumnBlocks_Data_BlockType
  | ColumnBlocks_Faqs_BlockType
  | ColumnBlocks_Form_BlockType
  | ColumnBlocks_Quote_BlockType
  | ColumnBlocks_Redactor_BlockType;

export type ColumnBlocks_Asset_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'columnBlocks_asset_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    image: Array<Maybe<AssetInterface>>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ColumnBlocks_Asset_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ColumnBlocks_Asset_BlockTypeImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnBlocks_Data_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'columnBlocks_data_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    dataValue?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    indicatorWidth?: Maybe<Scalars['Number']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    statistic?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ColumnBlocks_Data_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ColumnBlocks_Faqs_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'columnBlocks_faqs_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    faqs: Array<Maybe<EntryInterface>>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ColumnBlocks_Faqs_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ColumnBlocks_Faqs_BlockTypeFaqsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnBlocks_Form_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'columnBlocks_form_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    form?: Maybe<Array<Maybe<FormInterface>>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ColumnBlocks_Form_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ColumnBlocks_Form_BlockTypeFormArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnBlocks_Form_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnBlocks_Quote_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'columnBlocks_quote_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    quote?: Maybe<Scalars['String']>;
    reference?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ColumnBlocks_Quote_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ColumnBlocks_Quote_BlockTypeSizeArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnBlocks_Redactor_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'columnBlocks_redactor_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    buttons: Array<Maybe<Buttons_SuperTableField>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    label?: Maybe<Scalars['String']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    redactor?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ColumnBlocks_Redactor_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ColumnBlocks_Redactor_BlockTypeButtonsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnBlocks_Redactor_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnSectionLayoutsSectionEntryUnion =
  ColumnSectionLayouts_Default_Entry;

export type ColumnSectionLayouts_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'columnSectionLayouts_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    buttonGroup: Array<Maybe<ButtonGroup_SuperTableField>>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    columnAlignment?: Maybe<Scalars['String']>;
    columnBlocks: Array<Maybe<ColumnBlocks_MatrixField>>;
    columnNumber?: Maybe<Scalars['String']>;
    columnRatio?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type ColumnSectionLayouts_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type ColumnSectionLayouts_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryButtonGroupArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnSectionLayouts_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryColumnAlignmentArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryColumnBlocksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ColumnSectionLayouts_Default_EntryColumnNumberArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryColumnRatioArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ColumnSectionLayouts_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type ContentBlocks_MatrixField =
  | ContentBlocks_Calculator_BlockType
  | ContentBlocks_ColumnLayout_BlockType
  | ContentBlocks_EntriesCarousel_BlockType
  | ContentBlocks_Faqs_BlockType
  | ContentBlocks_Form_BlockType
  | ContentBlocks_FullWidthSection_BlockType
  | ContentBlocks_InformationGridLayout_BlockType
  | ContentBlocks_LargeImage_BlockType
  | ContentBlocks_LogoCarousel_BlockType
  | ContentBlocks_Quote_BlockType
  | ContentBlocks_Redactor_BlockType
  | ContentBlocks_TabbedContent_BlockType
  | ContentBlocks_TestimonialsCarousel_BlockType;

export type ContentBlocks_Calculator_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_calculator_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    inputText?: Maybe<Scalars['String']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_Calculator_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Calculator_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_ColumnLayout_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_columnLayout_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    columnSectionLayout: Array<Maybe<EntryInterface>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    showDivider?: Maybe<Scalars['Boolean']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_ColumnLayout_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_ColumnLayout_BlockTypeColumnSectionLayoutArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_ColumnLayout_BlockTypeSectionBackgroundArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_ColumnLayout_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_EntriesCarousel_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_entriesCarousel_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    categories: Array<Maybe<CategoryInterface>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    sectionType?: Maybe<Array<Maybe<Scalars['String']>>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_EntriesCarousel_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_EntriesCarousel_BlockTypeCategoriesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_EntriesCarousel_BlockTypeSectionBackgroundArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_EntriesCarousel_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_EntriesCarousel_BlockTypeSectionTypeArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Faqs_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_faqs_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    faqs: Array<Maybe<EntryInterface>>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_Faqs_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Faqs_BlockTypeFaqsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Faqs_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_Form_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_form_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    form?: Maybe<Array<Maybe<FormInterface>>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    sectionContent?: Maybe<Scalars['String']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_Form_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Form_BlockTypeFormArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  handle?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_Form_BlockTypeSectionBackgroundArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Form_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_FullWidthSection_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_fullWidthSection_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    fullWidthContent: Array<Maybe<EntryInterface>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    showDivider?: Maybe<Scalars['Boolean']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_FullWidthSection_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_FullWidthSection_BlockTypeFullWidthContentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_FullWidthSection_BlockTypeSectionBackgroundArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_FullWidthSection_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_InformationGridLayout_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_informationGridLayout_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    asCards?: Maybe<Scalars['Boolean']>;
    asSlider?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    informationGridLayout: Array<Maybe<EntryInterface>>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    sectionTitles: Array<Maybe<SectionTitles_SuperTableField>>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_InformationGridLayout_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_InformationGridLayout_BlockTypeInformationGridLayoutArgs =
  {
    after?: InputMaybe<Scalars['String']>;
    ancestorDist?: InputMaybe<Scalars['Int']>;
    ancestorOf?: InputMaybe<Scalars['Int']>;
    articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    before?: InputMaybe<Scalars['String']>;
    columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    descendantDist?: InputMaybe<Scalars['Int']>;
    descendantOf?: InputMaybe<Scalars['Int']>;
    draftCreator?: InputMaybe<Scalars['Int']>;
    draftId?: InputMaybe<Scalars['Int']>;
    draftOf?: InputMaybe<Scalars['QueryArgument']>;
    drafts?: InputMaybe<Scalars['Boolean']>;
    editable?: InputMaybe<Scalars['Boolean']>;
    expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    fixedOrder?: InputMaybe<Scalars['Boolean']>;
    hasDescendants?: InputMaybe<Scalars['Boolean']>;
    id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    inReverse?: InputMaybe<Scalars['Boolean']>;
    leaves?: InputMaybe<Scalars['Boolean']>;
    level?: InputMaybe<Scalars['Int']>;
    limit?: InputMaybe<Scalars['Int']>;
    linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    nextSiblingOf?: InputMaybe<Scalars['Int']>;
    offset?: InputMaybe<Scalars['Int']>;
    orderBy?: InputMaybe<Scalars['String']>;
    plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    positionedAfter?: InputMaybe<Scalars['Int']>;
    positionedBefore?: InputMaybe<Scalars['Int']>;
    postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    prevSiblingOf?: InputMaybe<Scalars['Int']>;
    provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
    redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
    relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
    relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
    relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
    relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
    search?: InputMaybe<Scalars['String']>;
    section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    structureId?: InputMaybe<Scalars['Int']>;
    title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
    uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    unique?: InputMaybe<Scalars['Boolean']>;
    uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
    withStructure?: InputMaybe<Scalars['Boolean']>;
  };

export type ContentBlocks_InformationGridLayout_BlockTypeSectionBackgroundArgs =
  {
    label?: InputMaybe<Scalars['Boolean']>;
  };

export type ContentBlocks_InformationGridLayout_BlockTypeSectionTitlesArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_LargeImage_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_largeImage_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    image: Array<Maybe<AssetInterface>>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_LargeImage_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_LargeImage_BlockTypeImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_LogoCarousel_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_logoCarousel_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    images: Array<Maybe<AssetInterface>>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionTitle?: Maybe<Scalars['String']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_LogoCarousel_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_LogoCarousel_BlockTypeImagesArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_Quote_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_quote_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    quote?: Maybe<Scalars['String']>;
    reference?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_Quote_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Quote_BlockTypeSizeArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Redactor_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_redactor_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    contentWidth?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    redactorContent?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    sectionLabel?: Maybe<Scalars['String']>;
    sectionLogo: Array<Maybe<AssetInterface>>;
    showDivider?: Maybe<Scalars['Boolean']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_Redactor_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_Redactor_BlockTypeContentWidthArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Redactor_BlockTypeSectionBackgroundArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type ContentBlocks_Redactor_BlockTypeSectionLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_TabbedContent_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_tabbedContent_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    tabs: Array<Maybe<Tabs_SuperTableField>>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_TabbedContent_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_TabbedContent_BlockTypeTabsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentBlocks_TestimonialsCarousel_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    testimonials: Array<Maybe<EntryInterface>>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ContentBlocks_TestimonialsCarousel_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type ContentBlocks_TestimonialsCarousel_BlockTypeTestimonialsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ContentImages_Asset = AssetInterface &
  ElementInterface & {
    __typename?: 'contentImages_Asset';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Alternative text for the asset. */
    alt?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the asset file was last modified. */
    dateModified?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The file extension for the asset file. */
    extension: Scalars['String'];
    /** The filename of the asset file. */
    filename: Scalars['String'];
    /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
    focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
    /** The ID of the folder that the asset belongs to. */
    folderId: Scalars['Int'];
    /** Whether a user-defined focal point is set on the asset. */
    hasFocalPoint: Scalars['Boolean'];
    /** The height in pixels or null if it’s not an image. */
    height?: Maybe<Scalars['Int']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** An `<img>` tag based on this asset. */
    img?: Maybe<Scalars['String']>;
    /** The file kind. */
    kind: Scalars['String'];
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The file’s MIME type, if it can be determined. */
    mimeType?: Maybe<Scalars['String']>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<AssetInterface>;
    /** The asset’s path in the volume. */
    path: Scalars['String'];
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<AssetInterface>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The file size in bytes. */
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
    srcset?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The user who first added this asset (if known). */
    uploader?: Maybe<UserInterface>;
    /** The ID of the user who first added this asset (if known). */
    uploaderId?: Maybe<Scalars['Int']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
    url?: Maybe<Scalars['String']>;
    /** The ID of the volume that the asset belongs to. */
    volumeId?: Maybe<Scalars['Int']>;
    /** The width in pixels or null if it’s not an image. */
    width?: Maybe<Scalars['Int']>;
  };

export type ContentImages_Asset_CountArgs = {
  field: Scalars['String'];
};

export type ContentImages_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type ContentImages_AssetNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentImages_AssetPrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

export type ContentImages_AssetUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type ContentImages_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type ContentImages_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type EnquiryForm_Form = ElementInterface &
  FormInterface & {
    __typename?: 'enquiryForm_Form';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** A list of captcha values (name and value) to assist with spam protection. */
    captchas?: Maybe<Array<Maybe<FormieCaptchaType>>>;
    /** The form’s config as JSON. */
    configJson?: Maybe<Scalars['String']>;
    /** A CSRF token (name and value). */
    csrfToken?: Maybe<FormieCsrfTokenType>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The form’s fields. */
    formFields?: Maybe<Array<Maybe<FieldInterface>>>;
    /** The form’s handle. */
    handle?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The form’s pages. */
    pages?: Maybe<Array<Maybe<PageInterface>>>;
    /** The form’s rows. */
    rows?: Maybe<Array<Maybe<RowInterface>>>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The form’s settings. */
    settings?: Maybe<FormSettingsType>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The form’s endpoint for sending submissions to, if using POST requests. */
    submissionEndpoint?: Maybe<Scalars['String']>;
    /** The form’s GQL mutation name for submissions to use. */
    submissionMutationName?: Maybe<Scalars['String']>;
    /** The form’s rendered HTML. */
    templateHtml?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type EnquiryForm_Form_CountArgs = {
  field: Scalars['String'];
};

export type EnquiryForm_FormFormFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

export type EnquiryForm_FormTemplateHtmlArgs = {
  options?: InputMaybe<Scalars['String']>;
  populateFormValues?: InputMaybe<Scalars['String']>;
};

export type EnquiryForm_Submission = ElementInterface &
  SubmissionInterface & {
    __typename?: 'enquiryForm_Submission';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    agree?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    companyName?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    fullName?: Maybe<Scalars['String']>;
    iAmInterestedIn?: Maybe<Scalars['String']>;
    iWorkIn?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The submission’s IP Address. */
    ipAddress?: Maybe<Scalars['String']>;
    /** Whether the submission is incomplete. */
    isIncomplete?: Maybe<Scalars['Boolean']>;
    /** Whether the submission is spam. */
    isSpam?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    message?: Maybe<Scalars['String']>;
    officialEmail?: Maybe<Scalars['String']>;
    phoneNumber?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The submission’s spam type. */
    spamClass?: Maybe<Scalars['String']>;
    /** The submission’s spam reason. */
    spamReason?: Maybe<Scalars['String']>;
    /** The submission’s status. */
    status?: Maybe<Scalars['String']>;
    /** The submission’s status ID. */
    statusId?: Maybe<Scalars['Int']>;
    termsAndConditions?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type EnquiryForm_Submission_CountArgs = {
  field: Scalars['String'];
};

export type EnquiryForm_SubmissionIAmInterestedInArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type EnquiryForm_SubmissionIWorkInArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type FaqsSectionEntryUnion = Faqs_Default_Entry;

export type Faqs_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'faqs_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    plainText?: Maybe<Scalars['String']>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    redactor?: Maybe<Scalars['String']>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Faqs_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type Faqs_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Faqs_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type FeatureImages_Asset = AssetInterface &
  ElementInterface & {
    __typename?: 'featureImages_Asset';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Alternative text for the asset. */
    alt?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the asset file was last modified. */
    dateModified?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The file extension for the asset file. */
    extension: Scalars['String'];
    /** The filename of the asset file. */
    filename: Scalars['String'];
    /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
    focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
    /** The ID of the folder that the asset belongs to. */
    folderId: Scalars['Int'];
    /** Whether a user-defined focal point is set on the asset. */
    hasFocalPoint: Scalars['Boolean'];
    /** The height in pixels or null if it’s not an image. */
    height?: Maybe<Scalars['Int']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** An `<img>` tag based on this asset. */
    img?: Maybe<Scalars['String']>;
    /** The file kind. */
    kind: Scalars['String'];
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The file’s MIME type, if it can be determined. */
    mimeType?: Maybe<Scalars['String']>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<AssetInterface>;
    /** The asset’s path in the volume. */
    path: Scalars['String'];
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<AssetInterface>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The file size in bytes. */
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
    srcset?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The user who first added this asset (if known). */
    uploader?: Maybe<UserInterface>;
    /** The ID of the user who first added this asset (if known). */
    uploaderId?: Maybe<Scalars['Int']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
    url?: Maybe<Scalars['String']>;
    /** The ID of the volume that the asset belongs to. */
    volumeId?: Maybe<Scalars['Int']>;
    /** The width in pixels or null if it’s not an image. */
    width?: Maybe<Scalars['Int']>;
  };

export type FeatureImages_Asset_CountArgs = {
  field: Scalars['String'];
};

export type FeatureImages_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type FeatureImages_AssetNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type FeatureImages_AssetPrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type FeatureImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

export type FeatureImages_AssetUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type FeatureImages_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type FeatureImages_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type FooterNavigation_Node = ElementInterface &
  NodeInterface & {
    __typename?: 'footerNavigation_Node';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The node’s children. Accepts the same arguments as the `nodes` query. */
    children?: Maybe<Array<Maybe<NodeInterface>>>;
    /** Any additional classes for the node. */
    classes?: Maybe<Scalars['String']>;
    /** Any additional custom attributes for the node. */
    customAttributes?: Maybe<Array<Maybe<NodeCustomAttribute>>>;
    /** Any additional data for the node. */
    data?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The element the node links to. */
    element?: Maybe<ElementInterface>;
    /** The ID of the element this node is linked to. */
    elementId?: Maybe<Scalars['Int']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The handle of the navigation this node belongs to. */
    navHandle?: Maybe<Scalars['String']>;
    /** The ID of the navigation this node belongs to. */
    navId?: Maybe<Scalars['Int']>;
    /** The name of the navigation this node belongs to. */
    navName?: Maybe<Scalars['String']>;
    /** Whether this node should open in a new window. */
    newWindow?: Maybe<Scalars['String']>;
    /** The node’s URI */
    nodeUri?: Maybe<Scalars['String']>;
    /** The node’s parent. */
    parent?: Maybe<NodeInterface>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The type of node this is. */
    type?: Maybe<Scalars['String']>;
    /** The display name for the type of node this is. */
    typeLabel?: Maybe<Scalars['String']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The node’s full URL */
    url?: Maybe<Scalars['String']>;
    /** The URL for this navigation item. */
    urlSuffix?: Maybe<Scalars['String']>;
  };

export type FooterNavigation_Node_CountArgs = {
  field: Scalars['String'];
};

export type FooterNavigation_NodeChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nav?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  navHandle?: InputMaybe<Scalars['String']>;
  navId?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type FooterSubNavigation_Node = ElementInterface &
  NodeInterface & {
    __typename?: 'footerSubNavigation_Node';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The node’s children. Accepts the same arguments as the `nodes` query. */
    children?: Maybe<Array<Maybe<NodeInterface>>>;
    /** Any additional classes for the node. */
    classes?: Maybe<Scalars['String']>;
    /** Any additional custom attributes for the node. */
    customAttributes?: Maybe<Array<Maybe<NodeCustomAttribute>>>;
    /** Any additional data for the node. */
    data?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The element the node links to. */
    element?: Maybe<ElementInterface>;
    /** The ID of the element this node is linked to. */
    elementId?: Maybe<Scalars['Int']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The handle of the navigation this node belongs to. */
    navHandle?: Maybe<Scalars['String']>;
    /** The ID of the navigation this node belongs to. */
    navId?: Maybe<Scalars['Int']>;
    /** The name of the navigation this node belongs to. */
    navName?: Maybe<Scalars['String']>;
    /** Whether this node should open in a new window. */
    newWindow?: Maybe<Scalars['String']>;
    /** The node’s URI */
    nodeUri?: Maybe<Scalars['String']>;
    /** The node’s parent. */
    parent?: Maybe<NodeInterface>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The type of node this is. */
    type?: Maybe<Scalars['String']>;
    /** The display name for the type of node this is. */
    typeLabel?: Maybe<Scalars['String']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The node’s full URL */
    url?: Maybe<Scalars['String']>;
    /** The URL for this navigation item. */
    urlSuffix?: Maybe<Scalars['String']>;
  };

export type FooterSubNavigation_Node_CountArgs = {
  field: Scalars['String'];
};

export type FooterSubNavigation_NodeChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nav?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  navHandle?: InputMaybe<Scalars['String']>;
  navId?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Footer_GlobalSet = ElementInterface &
  GlobalSetInterface & {
    __typename?: 'footer_GlobalSet';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The handle of the global set. */
    handle: Scalars['String'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    logo: Array<Maybe<AssetInterface>>;
    /** The name of the global set. */
    name: Scalars['String'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    socialLinks: Array<Maybe<SocialLinks_SuperTableField>>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Footer_GlobalSet_CountArgs = {
  field: Scalars['String'];
};

export type Footer_GlobalSetLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Footer_GlobalSetSocialLinksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Header_GlobalSet = ElementInterface &
  GlobalSetInterface & {
    __typename?: 'header_GlobalSet';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The handle of the global set. */
    handle: Scalars['String'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    logo: Array<Maybe<AssetInterface>>;
    /** The name of the global set. */
    name: Scalars['String'];
    navigationType?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Header_GlobalSet_CountArgs = {
  field: Scalars['String'];
};

export type Header_GlobalSetLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Header_GlobalSetNavigationTypeArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type HeroButtons_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'heroButtons_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    button?: Maybe<LinkField_Link>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type HeroButtons_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type HeroButtons_SuperTableField = HeroButtons_BlockType;

export type Hero_MatrixField = Hero_Hero_BlockType;

export type Hero_Hero_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'hero_hero_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    heroButtons: Array<Maybe<HeroButtons_SuperTableField>>;
    heroContent?: Maybe<Scalars['String']>;
    heroContentImage: Array<Maybe<AssetInterface>>;
    heroImage: Array<Maybe<AssetInterface>>;
    heroLabel?: Maybe<Scalars['String']>;
    heroLogo: Array<Maybe<AssetInterface>>;
    heroMobileImage: Array<Maybe<AssetInterface>>;
    heroTitle?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionBackground?: Maybe<Scalars['String']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Hero_Hero_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Hero_Hero_BlockTypeHeroButtonsArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Hero_Hero_BlockTypeHeroContentImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Hero_Hero_BlockTypeHeroImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Hero_Hero_BlockTypeHeroLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Hero_Hero_BlockTypeHeroMobileImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Hero_Hero_BlockTypeSectionBackgroundArgs = {
  label?: InputMaybe<Scalars['Boolean']>;
};

export type HomepageSectionEntryUnion = Homepage_Homepage_Entry;

export type Homepage_Homepage_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'homepage_homepage_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    contentBlocks: Array<Maybe<ContentBlocks_MatrixField>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    hero: Array<Maybe<Hero_MatrixField>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    seo?: Maybe<Scalars['String']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Homepage_Homepage_Entry_CountArgs = {
  field: Scalars['String'];
};

export type Homepage_Homepage_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryContentBlocksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Homepage_Homepage_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryHeroArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Homepage_Homepage_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Homepage_Homepage_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type InformationGridBlocks_MatrixField =
  InformationGridBlocks_Block_BlockType;

export type InformationGridBlocks_Block_BlockType = ElementInterface &
  MatrixBlockInterface & {
    __typename?: 'informationGridBlocks_block_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    blockContent?: Maybe<Scalars['String']>;
    blockLink?: Maybe<LinkField_Link>;
    blockSubtitle?: Maybe<Scalars['String']>;
    blockTitle?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the matrix block. */
    fieldId: Scalars['Int'];
    icon: Array<Maybe<AssetInterface>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Matrix block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the matrix block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the matrix block’s type. */
    typeHandle: Scalars['String'];
    /** The ID of the matrix block’s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type InformationGridBlocks_Block_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type InformationGridBlocks_Block_BlockTypeIconArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type InformationGridLayoutsSectionEntryUnion =
  InformationGridLayouts_Default_Entry;

export type InformationGridLayouts_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'informationGridLayouts_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    buttonGroup: Array<Maybe<ButtonGroup_SuperTableField>>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    informationGridBlocks: Array<Maybe<InformationGridBlocks_MatrixField>>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type InformationGridLayouts_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type InformationGridLayouts_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryButtonGroupArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type InformationGridLayouts_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryInformationGridBlocksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type InformationGridLayouts_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type InformationGridLayouts_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type LargeImages_Asset = AssetInterface &
  ElementInterface & {
    __typename?: 'largeImages_Asset';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Alternative text for the asset. */
    alt?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the asset file was last modified. */
    dateModified?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The file extension for the asset file. */
    extension: Scalars['String'];
    /** The filename of the asset file. */
    filename: Scalars['String'];
    /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
    focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
    /** The ID of the folder that the asset belongs to. */
    folderId: Scalars['Int'];
    /** Whether a user-defined focal point is set on the asset. */
    hasFocalPoint: Scalars['Boolean'];
    /** The height in pixels or null if it’s not an image. */
    height?: Maybe<Scalars['Int']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** An `<img>` tag based on this asset. */
    img?: Maybe<Scalars['String']>;
    /** The file kind. */
    kind: Scalars['String'];
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The file’s MIME type, if it can be determined. */
    mimeType?: Maybe<Scalars['String']>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<AssetInterface>;
    /** The asset’s path in the volume. */
    path: Scalars['String'];
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<AssetInterface>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The file size in bytes. */
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
    srcset?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The user who first added this asset (if known). */
    uploader?: Maybe<UserInterface>;
    /** The ID of the user who first added this asset (if known). */
    uploaderId?: Maybe<Scalars['Int']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
    url?: Maybe<Scalars['String']>;
    /** The ID of the volume that the asset belongs to. */
    volumeId?: Maybe<Scalars['Int']>;
    /** The width in pixels or null if it’s not an image. */
    width?: Maybe<Scalars['Int']>;
  };

export type LargeImages_Asset_CountArgs = {
  field: Scalars['String'];
};

export type LargeImages_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type LargeImages_AssetNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type LargeImages_AssetPrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type LargeImages_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

export type LargeImages_AssetUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type LargeImages_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type LargeImages_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

/** This is the interface implemented by all links. */
export type LinkField_Link = {
  __typename?: 'linkField_Link';
  ariaLabel?: Maybe<Scalars['String']>;
  customText?: Maybe<Scalars['String']>;
  element?: Maybe<ElementInterface>;
  target?: Maybe<Scalars['String']>;
  text?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  url?: Maybe<Scalars['String']>;
};

export type LinkListSectionEntryUnion = LinkList_Default_Entry;

export type LinkList_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'linkList_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    links?: Maybe<LinkField_Link>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type LinkList_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type LinkList_SuperTableField = LinkList_BlockType;

export type LinkList_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'linkList_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    linkList: Array<Maybe<LinkList_SuperTableField>>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type LinkList_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type LinkList_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryLinkListArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type LinkList_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type LinkList_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type Logos_Asset = AssetInterface &
  ElementInterface & {
    __typename?: 'logos_Asset';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Alternative text for the asset. */
    alt?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    ariaHidden?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the asset file was last modified. */
    dateModified?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The file extension for the asset file. */
    extension: Scalars['String'];
    /** The filename of the asset file. */
    filename: Scalars['String'];
    /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
    focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
    /** The ID of the folder that the asset belongs to. */
    folderId: Scalars['Int'];
    /** Whether a user-defined focal point is set on the asset. */
    hasFocalPoint: Scalars['Boolean'];
    /** The height in pixels or null if it’s not an image. */
    height?: Maybe<Scalars['Int']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** An `<img>` tag based on this asset. */
    img?: Maybe<Scalars['String']>;
    /** The file kind. */
    kind: Scalars['String'];
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The file’s MIME type, if it can be determined. */
    mimeType?: Maybe<Scalars['String']>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<AssetInterface>;
    /** The asset’s path in the volume. */
    path: Scalars['String'];
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<AssetInterface>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The file size in bytes. */
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
    srcset?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The user who first added this asset (if known). */
    uploader?: Maybe<UserInterface>;
    /** The ID of the user who first added this asset (if known). */
    uploaderId?: Maybe<Scalars['Int']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
    url?: Maybe<Scalars['String']>;
    /** The ID of the volume that the asset belongs to. */
    volumeId?: Maybe<Scalars['Int']>;
    /** The width in pixels or null if it’s not an image. */
    width?: Maybe<Scalars['Int']>;
  };

export type Logos_Asset_CountArgs = {
  field: Scalars['String'];
};

export type Logos_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type Logos_AssetNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Logos_AssetPrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Logos_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

export type Logos_AssetUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Logos_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type Logos_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type MainNavigation_Node = ElementInterface &
  NodeInterface & {
    __typename?: 'mainNavigation_Node';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The node’s children. Accepts the same arguments as the `nodes` query. */
    children?: Maybe<Array<Maybe<NodeInterface>>>;
    /** Any additional classes for the node. */
    classes?: Maybe<Scalars['String']>;
    /** Any additional custom attributes for the node. */
    customAttributes?: Maybe<Array<Maybe<NodeCustomAttribute>>>;
    /** Any additional data for the node. */
    data?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The element the node links to. */
    element?: Maybe<ElementInterface>;
    /** The ID of the element this node is linked to. */
    elementId?: Maybe<Scalars['Int']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The handle of the navigation this node belongs to. */
    navHandle?: Maybe<Scalars['String']>;
    /** The ID of the navigation this node belongs to. */
    navId?: Maybe<Scalars['Int']>;
    /** The name of the navigation this node belongs to. */
    navName?: Maybe<Scalars['String']>;
    /** Whether this node should open in a new window. */
    newWindow?: Maybe<Scalars['String']>;
    /** The node’s URI */
    nodeUri?: Maybe<Scalars['String']>;
    /** The node’s parent. */
    parent?: Maybe<NodeInterface>;
    plainText?: Maybe<Scalars['String']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The type of node this is. */
    type?: Maybe<Scalars['String']>;
    /** The display name for the type of node this is. */
    typeLabel?: Maybe<Scalars['String']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The node’s full URL */
    url?: Maybe<Scalars['String']>;
    /** The URL for this navigation item. */
    urlSuffix?: Maybe<Scalars['String']>;
  };

export type MainNavigation_Node_CountArgs = {
  field: Scalars['String'];
};

export type MainNavigation_NodeChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nav?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  navHandle?: InputMaybe<Scalars['String']>;
  navId?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocksSectionEntryUnion = NavigationBlocks_Default_Entry;

export type NavigationBlocks_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'navigationBlocks_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    linkType?: Maybe<LinkField_Link>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    plainText?: Maybe<Scalars['String']>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type NavigationBlocks_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type NavigationBlocks_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type NavigationBlocks_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type PagesSectionEntryUnion = Pages_Default_Entry;

export type Pages_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'pages_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    contentBlocks: Array<Maybe<ContentBlocks_MatrixField>>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    hero: Array<Maybe<Hero_MatrixField>>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    seo?: Maybe<Scalars['String']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Pages_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type Pages_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryContentBlocksArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Pages_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryHeroArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Pages_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Pages_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type ProductGuide_Form = ElementInterface &
  FormInterface & {
    __typename?: 'productGuide_Form';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** A list of captcha values (name and value) to assist with spam protection. */
    captchas?: Maybe<Array<Maybe<FormieCaptchaType>>>;
    /** The form’s config as JSON. */
    configJson?: Maybe<Scalars['String']>;
    /** A CSRF token (name and value). */
    csrfToken?: Maybe<FormieCsrfTokenType>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The form’s fields. */
    formFields?: Maybe<Array<Maybe<FieldInterface>>>;
    /** The form’s handle. */
    handle?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The form’s pages. */
    pages?: Maybe<Array<Maybe<PageInterface>>>;
    /** The form’s rows. */
    rows?: Maybe<Array<Maybe<RowInterface>>>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The form’s settings. */
    settings?: Maybe<FormSettingsType>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The form’s endpoint for sending submissions to, if using POST requests. */
    submissionEndpoint?: Maybe<Scalars['String']>;
    /** The form’s GQL mutation name for submissions to use. */
    submissionMutationName?: Maybe<Scalars['String']>;
    /** The form’s rendered HTML. */
    templateHtml?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ProductGuide_Form_CountArgs = {
  field: Scalars['String'];
};

export type ProductGuide_FormFormFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

export type ProductGuide_FormTemplateHtmlArgs = {
  options?: InputMaybe<Scalars['String']>;
  populateFormValues?: InputMaybe<Scalars['String']>;
};

export type ProductGuide_Submission = ElementInterface &
  SubmissionInterface & {
    __typename?: 'productGuide_Submission';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    companyName?: Maybe<Scalars['String']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    fullName?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The submission’s IP Address. */
    ipAddress?: Maybe<Scalars['String']>;
    /** Whether the submission is incomplete. */
    isIncomplete?: Maybe<Scalars['Boolean']>;
    /** Whether the submission is spam. */
    isSpam?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    message?: Maybe<Scalars['String']>;
    officialEmail?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The submission’s spam type. */
    spamClass?: Maybe<Scalars['String']>;
    /** The submission’s spam reason. */
    spamReason?: Maybe<Scalars['String']>;
    /** The submission’s status. */
    status?: Maybe<Scalars['String']>;
    /** The submission’s status ID. */
    statusId?: Maybe<Scalars['Int']>;
    termsAndConditions?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ProductGuide_Submission_CountArgs = {
  field: Scalars['String'];
};

export type ResourcesSearchForm_Form = ElementInterface &
  FormInterface & {
    __typename?: 'resourcesSearchForm_Form';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** A list of captcha values (name and value) to assist with spam protection. */
    captchas?: Maybe<Array<Maybe<FormieCaptchaType>>>;
    /** The form’s config as JSON. */
    configJson?: Maybe<Scalars['String']>;
    /** A CSRF token (name and value). */
    csrfToken?: Maybe<FormieCsrfTokenType>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The form’s fields. */
    formFields?: Maybe<Array<Maybe<FieldInterface>>>;
    /** The form’s handle. */
    handle?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The form’s pages. */
    pages?: Maybe<Array<Maybe<PageInterface>>>;
    /** The form’s rows. */
    rows?: Maybe<Array<Maybe<RowInterface>>>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The form’s settings. */
    settings?: Maybe<FormSettingsType>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The form’s endpoint for sending submissions to, if using POST requests. */
    submissionEndpoint?: Maybe<Scalars['String']>;
    /** The form’s GQL mutation name for submissions to use. */
    submissionMutationName?: Maybe<Scalars['String']>;
    /** The form’s rendered HTML. */
    templateHtml?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ResourcesSearchForm_Form_CountArgs = {
  field: Scalars['String'];
};

export type ResourcesSearchForm_FormFormFieldsArgs = {
  includeDisabled?: InputMaybe<Scalars['Boolean']>;
};

export type ResourcesSearchForm_FormTemplateHtmlArgs = {
  options?: InputMaybe<Scalars['String']>;
  populateFormValues?: InputMaybe<Scalars['String']>;
};

export type ResourcesSearchForm_Submission = ElementInterface &
  SubmissionInterface & {
    __typename?: 'resourcesSearchForm_Submission';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The submission’s IP Address. */
    ipAddress?: Maybe<Scalars['String']>;
    /** Whether the submission is incomplete. */
    isIncomplete?: Maybe<Scalars['Boolean']>;
    /** Whether the submission is spam. */
    isSpam?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    search?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The submission’s spam type. */
    spamClass?: Maybe<Scalars['String']>;
    /** The submission’s spam reason. */
    spamReason?: Maybe<Scalars['String']>;
    /** The submission’s status. */
    status?: Maybe<Scalars['String']>;
    /** The submission’s status ID. */
    statusId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    topic: Array<Maybe<CategoryInterface>>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    types: Array<Maybe<CategoryInterface>>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type ResourcesSearchForm_Submission_CountArgs = {
  field: Scalars['String'];
};

export type ResourcesSearchForm_SubmissionTopicArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ResourcesSearchForm_SubmissionTypesArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type ResourcesSectionEntryUnion = Resources_Resources_Entry;

export type Resources_Resources_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'resources_resources_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    articleHero: Array<Maybe<ArticleHero_MatrixField>>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    seo?: Maybe<Scalars['String']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Resources_Resources_Entry_CountArgs = {
  field: Scalars['String'];
};

export type Resources_Resources_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryArticleHeroArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Resources_Resources_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Resources_Resources_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type SectionTitles_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'sectionTitles_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    sectionLabel?: Maybe<Scalars['String']>;
    sectionLogo: Array<Maybe<AssetInterface>>;
    sectionSubtitle?: Maybe<Scalars['String']>;
    sectionTitle?: Maybe<Scalars['String']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type SectionTitles_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type SectionTitles_BlockTypeSectionLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type SectionTitles_SuperTableField = SectionTitles_BlockType;

export type SocialLinks_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'socialLinks_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    facebook?: Maybe<Scalars['String']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    github?: Maybe<Scalars['String']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    linkedin?: Maybe<Scalars['String']>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    twitter?: Maybe<Scalars['String']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    youtube?: Maybe<Scalars['String']>;
  };

export type SocialLinks_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type SocialLinks_SuperTableField = SocialLinks_BlockType;

export type SocialSharing_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'socialSharing_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    email?: Maybe<Scalars['Boolean']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    facebook?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    linkedin?: Maybe<Scalars['Boolean']>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    twitter?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type SocialSharing_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type SocialSharing_SuperTableField = SocialSharing_BlockType;

export type SvgIcons_Asset = AssetInterface &
  ElementInterface & {
    __typename?: 'svgIcons_Asset';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Alternative text for the asset. */
    alt?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    ariaHidden?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the asset file was last modified. */
    dateModified?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The file extension for the asset file. */
    extension: Scalars['String'];
    /** The filename of the asset file. */
    filename: Scalars['String'];
    /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
    focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
    /** The ID of the folder that the asset belongs to. */
    folderId: Scalars['Int'];
    /** Whether a user-defined focal point is set on the asset. */
    hasFocalPoint: Scalars['Boolean'];
    /** The height in pixels or null if it’s not an image. */
    height?: Maybe<Scalars['Int']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** An `<img>` tag based on this asset. */
    img?: Maybe<Scalars['String']>;
    /** The file kind. */
    kind: Scalars['String'];
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The file’s MIME type, if it can be determined. */
    mimeType?: Maybe<Scalars['String']>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<AssetInterface>;
    /** The asset’s path in the volume. */
    path: Scalars['String'];
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<AssetInterface>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The file size in bytes. */
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
    srcset?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The user who first added this asset (if known). */
    uploader?: Maybe<UserInterface>;
    /** The ID of the user who first added this asset (if known). */
    uploaderId?: Maybe<Scalars['Int']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
    url?: Maybe<Scalars['String']>;
    /** The ID of the volume that the asset belongs to. */
    volumeId?: Maybe<Scalars['Int']>;
    /** The width in pixels or null if it’s not an image. */
    width?: Maybe<Scalars['Int']>;
  };

export type SvgIcons_Asset_CountArgs = {
  field: Scalars['String'];
};

export type SvgIcons_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type SvgIcons_AssetNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type SvgIcons_AssetPrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type SvgIcons_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

export type SvgIcons_AssetUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type SvgIcons_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type SvgIcons_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type Tabs_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'tabs_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    button?: Maybe<LinkField_Link>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    image: Array<Maybe<AssetInterface>>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    logo: Array<Maybe<AssetInterface>>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    tabContent?: Maybe<Scalars['String']>;
    tabLabel?: Maybe<Scalars['String']>;
    tabTitle?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Tabs_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Tabs_BlockTypeImageArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Tabs_BlockTypeLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Tabs_SuperTableField = Tabs_BlockType;

export type Testimonial_BlockType = ElementInterface &
  SuperTableBlockInterface & {
    __typename?: 'testimonial_BlockType';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    button?: Maybe<LinkField_Link>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The ID of the field that owns the Super Table block. */
    fieldId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    logo: Array<Maybe<AssetInterface>>;
    /** The ID of the primary owner of the Super Table block. */
    primaryOwnerId: Scalars['Int'];
    quote?: Maybe<Scalars['String']>;
    reference?: Maybe<Scalars['String']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The sort order of the Super Table block within the owner element field. */
    sortOrder?: Maybe<Scalars['Int']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The ID of the Super Table block‘s type. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
  };

export type Testimonial_BlockType_CountArgs = {
  field: Scalars['String'];
};

export type Testimonial_BlockTypeLogoArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Testimonial_SuperTableField = Testimonial_BlockType;

export type TestimonialsSectionEntryUnion = Testimonials_Default_Entry;

export type Testimonials_Default_Entry = ElementInterface &
  EntryInterface & {
    __typename?: 'testimonials_default_Entry';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** The entry’s ancestors, if the section is a structure. Accepts the same arguments as the `entries` query. */
    ancestors: Array<EntryInterface>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The entry’s author. */
    author?: Maybe<UserInterface>;
    /** The ID of the author of this entry. */
    authorId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical ID. */
    canonicalId?: Maybe<Scalars['Int']>;
    /** Returns the entry’s canonical UUID. */
    canonicalUid?: Maybe<Scalars['String']>;
    /** The entry’s children, if the section is a structure. Accepts the same arguments as the `entries` query. */
    children: Array<EntryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** The entry’s descendants, if the section is a structure. Accepts the same arguments as the `entries` query. */
    descendants: Array<EntryInterface>;
    /** The creator of a given draft. */
    draftCreator?: Maybe<UserInterface>;
    /** The draft ID (from the `drafts` table). */
    draftId?: Maybe<Scalars['Int']>;
    /** The name of the draft. */
    draftName?: Maybe<Scalars['String']>;
    /** The notes for the draft. */
    draftNotes?: Maybe<Scalars['String']>;
    /** The drafts for the entry. */
    drafts?: Maybe<Array<Maybe<EntryInterface>>>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The expiry date of the entry. */
    expiryDate?: Maybe<Scalars['DateTime']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** Returns whether this is a draft. */
    isDraft?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is a revision. */
    isRevision?: Maybe<Scalars['Boolean']>;
    /** Returns whether this is an unpublished draft. */
    isUnpublishedDraft?: Maybe<Scalars['Boolean']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<EntryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<EntryInterface>;
    /** The entry’s parent, if the section is a structure. */
    parent?: Maybe<EntryInterface>;
    /** The entry’s post date. */
    postDate?: Maybe<Scalars['DateTime']>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<EntryInterface>;
    /** The revision ID (from the `revisions` table). */
    revisionId?: Maybe<Scalars['Int']>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The handle of the section that contains the entry. */
    sectionHandle: Scalars['String'];
    /** The ID of the section that contains the entry. */
    sectionId: Scalars['Int'];
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /**
     * Returns the entry’s canonical ID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalId` instead.
     */
    sourceId?: Maybe<Scalars['Int']>;
    /**
     * Returns the entry’s canonical UUID.
     * @deprecated this field has been deprecated since Craft 3.7.7. Use `canonicalUid` instead.
     */
    sourceUid?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    testimonial: Array<Maybe<Testimonial_SuperTableField>>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The handle of the entry type that contains the entry. */
    typeHandle: Scalars['String'];
    /** The ID of the entry type that contains the entry. */
    typeId: Scalars['Int'];
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Testimonials_Default_Entry_CountArgs = {
  field: Scalars['String'];
};

export type Testimonials_Default_EntryAncestorsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryChildrenArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryDescendantsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryDraftsArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryLocalizedArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryNextArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryParentArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntryPrevArgs = {
  after?: InputMaybe<Scalars['String']>;
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  articleAuthor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  articleTags?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorGroup?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  authorGroupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  authorId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  before?: InputMaybe<Scalars['String']>;
  columnAlignment?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnNumber?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  columnRatio?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  draftCreator?: InputMaybe<Scalars['Int']>;
  draftId?: InputMaybe<Scalars['Int']>;
  draftOf?: InputMaybe<Scalars['QueryArgument']>;
  drafts?: InputMaybe<Scalars['Boolean']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  expiryDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  featureImage?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  linkType?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  plainText?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  postDate?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  provisionalDrafts?: InputMaybe<Scalars['Boolean']>;
  redactor?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  section?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  sectionId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  seo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  shortDescription?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  topics?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  type?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  types?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Testimonials_Default_EntrySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type Testimonials_Default_EntryTestimonialArgs = {
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fieldId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  primaryOwnerId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  typeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Topics_Category = CategoryInterface &
  ElementInterface & {
    __typename?: 'topics_Category';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The category’s children. */
    children: Array<CategoryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The handle of the group that contains the category. */
    groupHandle: Scalars['String'];
    /** The ID of the group that contains the category. */
    groupId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<CategoryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<CategoryInterface>;
    /** The category’s parent. */
    parent?: Maybe<CategoryInterface>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<CategoryInterface>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Topics_Category_CountArgs = {
  field: Scalars['String'];
};

export type Topics_CategoryChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Topics_CategoryLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Topics_CategoryNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Topics_CategoryParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Topics_CategoryPrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Topics_CategorySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type Types_Category = CategoryInterface &
  ElementInterface & {
    __typename?: 'types_Category';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The category’s children. */
    children: Array<CategoryInterface>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The handle of the group that contains the category. */
    groupHandle: Scalars['String'];
    /** The ID of the group that contains the category. */
    groupId: Scalars['Int'];
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The element’s level within its structure */
    level?: Maybe<Scalars['Int']>;
    /** The element’s left position within its structure. */
    lft?: Maybe<Scalars['Int']>;
    /** The same element in other locales. */
    localized: Array<CategoryInterface>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<CategoryInterface>;
    /** The category’s parent. */
    parent?: Maybe<CategoryInterface>;
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<CategoryInterface>;
    /** The element’s right position within its structure. */
    rgt?: Maybe<Scalars['Int']>;
    /** The element’s structure’s root ID */
    root?: Maybe<Scalars['Int']>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** This query is used to query for SEOmatic meta data. */
    seomatic?: Maybe<SeomaticInterface>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s structure ID. */
    structureId?: Maybe<Scalars['Int']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The element’s full URL */
    url?: Maybe<Scalars['String']>;
  };

export type Types_Category_CountArgs = {
  field: Scalars['String'];
};

export type Types_CategoryChildrenArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Types_CategoryLocalizedArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Types_CategoryNextArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Types_CategoryParentArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Types_CategoryPrevArgs = {
  ancestorDist?: InputMaybe<Scalars['Int']>;
  ancestorOf?: InputMaybe<Scalars['Int']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  descendantDist?: InputMaybe<Scalars['Int']>;
  descendantOf?: InputMaybe<Scalars['Int']>;
  editable?: InputMaybe<Scalars['Boolean']>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  group?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasDescendants?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  leaves?: InputMaybe<Scalars['Boolean']>;
  level?: InputMaybe<Scalars['Int']>;
  limit?: InputMaybe<Scalars['Int']>;
  nextSiblingOf?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  positionedAfter?: InputMaybe<Scalars['Int']>;
  positionedBefore?: InputMaybe<Scalars['Int']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  prevSiblingOf?: InputMaybe<Scalars['Int']>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  structureId?: InputMaybe<Scalars['Int']>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withStructure?: InputMaybe<Scalars['Boolean']>;
};

export type Types_CategorySeomaticArgs = {
  asArray?: InputMaybe<Scalars['Boolean']>;
  environment?: InputMaybe<SeomaticEnvironment>;
  site?: InputMaybe<Scalars['String']>;
  siteId?: InputMaybe<Scalars['Int']>;
  uri?: InputMaybe<Scalars['String']>;
};

export type Videos_Asset = AssetInterface &
  ElementInterface & {
    __typename?: 'videos_Asset';
    /** Return a number of related elements for a field. */
    _count?: Maybe<Scalars['Int']>;
    /** Alternative text for the asset. */
    alt?: Maybe<Scalars['String']>;
    /** Whether the element is archived or not. */
    archived?: Maybe<Scalars['Boolean']>;
    /** The date the element was created. */
    dateCreated?: Maybe<Scalars['DateTime']>;
    /** The date the asset file was last modified. */
    dateModified?: Maybe<Scalars['DateTime']>;
    /** The date the element was last updated. */
    dateUpdated?: Maybe<Scalars['DateTime']>;
    /** Whether the element is enabled or not. */
    enabled?: Maybe<Scalars['Boolean']>;
    /** The file extension for the asset file. */
    extension: Scalars['String'];
    /** The filename of the asset file. */
    filename: Scalars['String'];
    /** The focal point represented as an array with `x` and `y` keys, or null if it’s not an image. */
    focalPoint?: Maybe<Array<Maybe<Scalars['Float']>>>;
    /** The ID of the folder that the asset belongs to. */
    folderId: Scalars['Int'];
    /** Whether a user-defined focal point is set on the asset. */
    hasFocalPoint: Scalars['Boolean'];
    /** The height in pixels or null if it’s not an image. */
    height?: Maybe<Scalars['Int']>;
    /** The ID of the entity */
    id?: Maybe<Scalars['ID']>;
    /** An `<img>` tag based on this asset. */
    img?: Maybe<Scalars['String']>;
    /** The file kind. */
    kind: Scalars['String'];
    /** The language of the site element is associated with. */
    language?: Maybe<Scalars['String']>;
    /** The file’s MIME type, if it can be determined. */
    mimeType?: Maybe<Scalars['String']>;
    /** Returns the next element relative to this one, from a given set of criteria. */
    next?: Maybe<AssetInterface>;
    /** The asset’s path in the volume. */
    path: Scalars['String'];
    /** Returns the previous element relative to this one, from a given set of criteria. */
    prev?: Maybe<AssetInterface>;
    /** The element’s search score, if the `search` parameter was used when querying for the element. */
    searchScore?: Maybe<Scalars['Int']>;
    /** The ID of the site the element is associated with. */
    siteId?: Maybe<Scalars['Int']>;
    /** The unique identifier for an element-site relation. */
    siteSettingsId?: Maybe<Scalars['ID']>;
    /** The file size in bytes. */
    size?: Maybe<Scalars['String']>;
    /** The element’s slug. */
    slug?: Maybe<Scalars['String']>;
    /** Returns a `srcset` attribute value based on the given widths or x-descriptors. */
    srcset?: Maybe<Scalars['String']>;
    /** The element’s status. */
    status?: Maybe<Scalars['String']>;
    /** The element’s title. */
    title?: Maybe<Scalars['String']>;
    /** Whether the element has been soft-deleted or not. */
    trashed?: Maybe<Scalars['Boolean']>;
    /** The UID of the entity */
    uid?: Maybe<Scalars['String']>;
    /** The user who first added this asset (if known). */
    uploader?: Maybe<UserInterface>;
    /** The ID of the user who first added this asset (if known). */
    uploaderId?: Maybe<Scalars['Int']>;
    /** The element’s URI. */
    uri?: Maybe<Scalars['String']>;
    /** The full URL of the asset. This field accepts the same fields as the `transform` directive. */
    url?: Maybe<Scalars['String']>;
    /** The ID of the volume that the asset belongs to. */
    volumeId?: Maybe<Scalars['Int']>;
    /** The width in pixels or null if it’s not an image. */
    width?: Maybe<Scalars['Int']>;
  };

export type Videos_Asset_CountArgs = {
  field: Scalars['String'];
};

export type Videos_AssetHeightArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type Videos_AssetNextArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Videos_AssetPrevArgs = {
  ariaHidden?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateModified?: InputMaybe<Scalars['String']>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  filename?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  folderId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasAlt?: InputMaybe<Scalars['Boolean']>;
  height?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  includeSubfolders?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  size?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uploader?: InputMaybe<Scalars['QueryArgument']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volume?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  volumeId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  width?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  withTransforms?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Videos_AssetSrcsetArgs = {
  sizes: Array<Scalars['String']>;
};

export type Videos_AssetUploaderArgs = {
  assetUploaders?: InputMaybe<Scalars['Boolean']>;
  authors?: InputMaybe<Scalars['Boolean']>;
  dateCreated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  dateUpdated?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  email?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  firstName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fixedOrder?: InputMaybe<Scalars['Boolean']>;
  fullName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  group?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  groupId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  hasPhoto?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  inReverse?: InputMaybe<Scalars['Boolean']>;
  lastName?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  limit?: InputMaybe<Scalars['Int']>;
  offset?: InputMaybe<Scalars['Int']>;
  orderBy?: InputMaybe<Scalars['String']>;
  preferSites?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  ref?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  relatedTo?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAll?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  relatedToAssets?: InputMaybe<Array<InputMaybe<AssetCriteriaInput>>>;
  relatedToCategories?: InputMaybe<Array<InputMaybe<CategoryCriteriaInput>>>;
  relatedToEntries?: InputMaybe<Array<InputMaybe<EntryCriteriaInput>>>;
  relatedToTags?: InputMaybe<Array<InputMaybe<TagCriteriaInput>>>;
  relatedToUsers?: InputMaybe<Array<InputMaybe<UserCriteriaInput>>>;
  search?: InputMaybe<Scalars['String']>;
  site?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  siteId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  siteSettingsId?: InputMaybe<Array<InputMaybe<Scalars['QueryArgument']>>>;
  slug?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  title?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  uid?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  unique?: InputMaybe<Scalars['Boolean']>;
  uri?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  username?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type Videos_AssetUrlArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type Videos_AssetWidthArgs = {
  format?: InputMaybe<Scalars['String']>;
  handle?: InputMaybe<Scalars['String']>;
  height?: InputMaybe<Scalars['Int']>;
  immediately?: InputMaybe<Scalars['Boolean']>;
  interlace?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<Scalars['String']>;
  position?: InputMaybe<Scalars['String']>;
  quality?: InputMaybe<Scalars['Int']>;
  transform?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Int']>;
};

export type ArticleHeroFragment = {
  __typename?: 'articleHero_hero_BlockType';
  label?: string | null;
  title?: string | null;
  redactor?: string | null;
  contentImage: Array<
    | {
        __typename?: 'contentImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | { __typename?: 'logos_Asset' }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

export type AssetFragment = {
  __typename?: 'columnBlocks_asset_BlockType';
  id?: string | null;
  image: Array<
    | {
        __typename?: 'contentImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | { __typename?: 'logos_Asset' }
    | { __typename?: 'svgIcons_Asset' }
    | {
        __typename?: 'videos_Asset';
        title?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | null
  >;
};

export type DataFragment = {
  __typename?: 'columnBlocks_data_BlockType';
  id?: string | null;
  dataValue?: string | null;
  indicatorWidth?: any | null;
  statistic?: string | null;
};

export type FaqsFragment = {
  __typename?: 'columnBlocks_faqs_BlockType';
  id?: string | null;
  items: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | {
        __typename?: 'faqs_default_Entry';
        title?: string | null;
        content?: string | null;
      }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

export type ColumnFormFragment = {
  __typename?: 'columnBlocks_form_BlockType';
  id?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  form?: Array<
    | { __typename?: 'enquiryForm_Form'; handle?: string | null }
    | { __typename?: 'productGuide_Form'; handle?: string | null }
    | { __typename?: 'resourcesSearchForm_Form'; handle?: string | null }
    | null
  > | null;
};

export type ColumnQuoteFragment = {
  __typename?: 'columnBlocks_quote_BlockType';
  id?: string | null;
  quote?: string | null;
  reference?: string | null;
  size?: string | null;
};

export type RedactorFragment = {
  __typename?: 'columnBlocks_redactor_BlockType';
  id?: string | null;
  label?: string | null;
  redactor?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  buttons: Array<{
    __typename?: 'buttons_BlockType';
    button?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      title?: string | null;
      type?: string | null;
      label?: string | null;
      href?: string | null;
    } | null;
  } | null>;
};

export type SectionTitlesFragment = {
  __typename?: 'sectionTitles_BlockType';
  label?: string | null;
  title?: string | null;
  subtitle?: string | null;
  logo: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | {
        __typename?: 'logos_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

type FieldFragment_Field_Agree_Fragment = {
  __typename?: 'Field_Agree';
  defaultState?: boolean | null;
  checkedValue?: string | null;
  uncheckedValue?: string | null;
  description?: string | null;
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_Categories_Fragment = {
  __typename?: 'Field_Categories';
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  categories?: Array<
    | {
        __typename?: 'topics_Category';
        id?: string | null;
        title?: string | null;
        slug?: string | null;
      }
    | {
        __typename?: 'types_Category';
        id?: string | null;
        title?: string | null;
        slug?: string | null;
      }
    | null
  > | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_Dropdown_Fragment = {
  __typename?: 'Field_Dropdown';
  multi?: boolean | null;
  defaultValue?: string | null;
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  options?: Array<{
    __typename?: 'FieldOption';
    label?: string | null;
    value?: string | null;
  } | null> | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_Email_Fragment = {
  __typename?: 'Field_Email';
  defaultValue?: string | null;
  blockedDomains?: Array<string | null> | null;
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_Hidden_Fragment = {
  __typename?: 'Field_Hidden';
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_MultiLineText_Fragment = {
  __typename?: 'Field_MultiLineText';
  defaultValue?: string | null;
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_Phone_Fragment = {
  __typename?: 'Field_Phone';
  defaultValue?: string | null;
  countryEnabled?: boolean | null;
  countryDefaultValue?: string | null;
  countryShowDialCode?: boolean | null;
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  countryOptions?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

type FieldFragment_Field_SingleLineText_Fragment = {
  __typename?: 'Field_SingleLineText';
  defaultValue?: string | null;
  id?: string | null;
  name?: string | null;
  handle?: string | null;
  instructions?: string | null;
  required?: boolean | null;
  type?: string | null;
  displayName?: string | null;
  typeName?: string | null;
  placeholder?: string | null;
  errorMessage?: string | null;
  labelPosition?: string | null;
  instructionsPosition?: string | null;
  cssClasses?: string | null;
  enableConditions?: boolean | null;
  conditions?: string | null;
  enableContentEncryption?: boolean | null;
  visibility?: string | null;
  inputAttributes?: Array<{
    __typename?: 'FieldAttribute';
    label?: string | null;
    value?: string | null;
  } | null> | null;
};

export type FieldFragmentFragment =
  | FieldFragment_Field_Agree_Fragment
  | FieldFragment_Field_Categories_Fragment
  | FieldFragment_Field_Dropdown_Fragment
  | FieldFragment_Field_Email_Fragment
  | FieldFragment_Field_Hidden_Fragment
  | FieldFragment_Field_MultiLineText_Fragment
  | FieldFragment_Field_Phone_Fragment
  | FieldFragment_Field_SingleLineText_Fragment;

type FormFragment_EnquiryForm_Form_Fragment = {
  __typename?: 'enquiryForm_Form';
  id?: string | null;
  title?: string | null;
  handle?: string | null;
  siteId?: number | null;
  csrfToken?: {
    __typename?: 'FormieCsrfTokenType';
    name?: string | null;
    value?: string | null;
  } | null;
  captchas?: Array<{
    __typename?: 'FormieCaptchaType';
    handle?: string | null;
    name?: string | null;
    value?: string | null;
  } | null> | null;
  settings?: {
    __typename?: 'FormSettingsType';
    submitAction?: string | null;
    submitActionTab?: string | null;
    submitActionMessageHtml?: string | null;
    redirectUrl?: string | null;
    errorMessageHtml?: string | null;
    redirectEntry?:
      | {
          __typename?: 'articles_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'caseStudies_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'columnSectionLayouts_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'faqs_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'homepage_homepage_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'informationGridLayouts_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'linkList_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'navigationBlocks_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'pages_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'resources_resources_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'testimonials_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | null;
  } | null;
  pages?: Array<{
    __typename?: 'PageType';
    name?: string | null;
    id?: string | null;
    settings?: {
      __typename?: 'PageSettingsType';
      submitButtonLabel?: string | null;
      backButtonLabel?: string | null;
      showBackButton?: boolean | null;
      buttonsPosition?: string | null;
    } | null;
    rows?: Array<{
      __typename?: 'RowType';
      rowFields?: Array<
        | {
            __typename?: 'Field_Agree';
            defaultState?: boolean | null;
            checkedValue?: string | null;
            uncheckedValue?: string | null;
            description?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Categories';
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            categories?: Array<
              | {
                  __typename?: 'topics_Category';
                  id?: string | null;
                  title?: string | null;
                  slug?: string | null;
                }
              | {
                  __typename?: 'types_Category';
                  id?: string | null;
                  title?: string | null;
                  slug?: string | null;
                }
              | null
            > | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Dropdown';
            multi?: boolean | null;
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            options?: Array<{
              __typename?: 'FieldOption';
              label?: string | null;
              value?: string | null;
            } | null> | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Email';
            defaultValue?: string | null;
            blockedDomains?: Array<string | null> | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Hidden';
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_MultiLineText';
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Phone';
            defaultValue?: string | null;
            countryEnabled?: boolean | null;
            countryDefaultValue?: string | null;
            countryShowDialCode?: boolean | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            countryOptions?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_SingleLineText';
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | null
      > | null;
    } | null> | null;
  } | null> | null;
};

type FormFragment_ProductGuide_Form_Fragment = {
  __typename?: 'productGuide_Form';
  id?: string | null;
  title?: string | null;
  handle?: string | null;
  siteId?: number | null;
  csrfToken?: {
    __typename?: 'FormieCsrfTokenType';
    name?: string | null;
    value?: string | null;
  } | null;
  captchas?: Array<{
    __typename?: 'FormieCaptchaType';
    handle?: string | null;
    name?: string | null;
    value?: string | null;
  } | null> | null;
  settings?: {
    __typename?: 'FormSettingsType';
    submitAction?: string | null;
    submitActionTab?: string | null;
    submitActionMessageHtml?: string | null;
    redirectUrl?: string | null;
    errorMessageHtml?: string | null;
    redirectEntry?:
      | {
          __typename?: 'articles_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'caseStudies_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'columnSectionLayouts_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'faqs_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'homepage_homepage_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'informationGridLayouts_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'linkList_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'navigationBlocks_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'pages_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'resources_resources_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'testimonials_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | null;
  } | null;
  pages?: Array<{
    __typename?: 'PageType';
    name?: string | null;
    id?: string | null;
    settings?: {
      __typename?: 'PageSettingsType';
      submitButtonLabel?: string | null;
      backButtonLabel?: string | null;
      showBackButton?: boolean | null;
      buttonsPosition?: string | null;
    } | null;
    rows?: Array<{
      __typename?: 'RowType';
      rowFields?: Array<
        | {
            __typename?: 'Field_Agree';
            defaultState?: boolean | null;
            checkedValue?: string | null;
            uncheckedValue?: string | null;
            description?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Categories';
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            categories?: Array<
              | {
                  __typename?: 'topics_Category';
                  id?: string | null;
                  title?: string | null;
                  slug?: string | null;
                }
              | {
                  __typename?: 'types_Category';
                  id?: string | null;
                  title?: string | null;
                  slug?: string | null;
                }
              | null
            > | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Dropdown';
            multi?: boolean | null;
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            options?: Array<{
              __typename?: 'FieldOption';
              label?: string | null;
              value?: string | null;
            } | null> | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Email';
            defaultValue?: string | null;
            blockedDomains?: Array<string | null> | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Hidden';
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_MultiLineText';
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Phone';
            defaultValue?: string | null;
            countryEnabled?: boolean | null;
            countryDefaultValue?: string | null;
            countryShowDialCode?: boolean | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            countryOptions?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_SingleLineText';
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | null
      > | null;
    } | null> | null;
  } | null> | null;
};

type FormFragment_ResourcesSearchForm_Form_Fragment = {
  __typename?: 'resourcesSearchForm_Form';
  id?: string | null;
  title?: string | null;
  handle?: string | null;
  siteId?: number | null;
  csrfToken?: {
    __typename?: 'FormieCsrfTokenType';
    name?: string | null;
    value?: string | null;
  } | null;
  captchas?: Array<{
    __typename?: 'FormieCaptchaType';
    handle?: string | null;
    name?: string | null;
    value?: string | null;
  } | null> | null;
  settings?: {
    __typename?: 'FormSettingsType';
    submitAction?: string | null;
    submitActionTab?: string | null;
    submitActionMessageHtml?: string | null;
    redirectUrl?: string | null;
    errorMessageHtml?: string | null;
    redirectEntry?:
      | {
          __typename?: 'articles_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'caseStudies_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'columnSectionLayouts_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'faqs_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'homepage_homepage_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'informationGridLayouts_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'linkList_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'navigationBlocks_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'pages_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'resources_resources_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | {
          __typename?: 'testimonials_default_Entry';
          id?: string | null;
          uri?: string | null;
          slug?: string | null;
          sectionHandle: string;
        }
      | null;
  } | null;
  pages?: Array<{
    __typename?: 'PageType';
    name?: string | null;
    id?: string | null;
    settings?: {
      __typename?: 'PageSettingsType';
      submitButtonLabel?: string | null;
      backButtonLabel?: string | null;
      showBackButton?: boolean | null;
      buttonsPosition?: string | null;
    } | null;
    rows?: Array<{
      __typename?: 'RowType';
      rowFields?: Array<
        | {
            __typename?: 'Field_Agree';
            defaultState?: boolean | null;
            checkedValue?: string | null;
            uncheckedValue?: string | null;
            description?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Categories';
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            categories?: Array<
              | {
                  __typename?: 'topics_Category';
                  id?: string | null;
                  title?: string | null;
                  slug?: string | null;
                }
              | {
                  __typename?: 'types_Category';
                  id?: string | null;
                  title?: string | null;
                  slug?: string | null;
                }
              | null
            > | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Dropdown';
            multi?: boolean | null;
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            options?: Array<{
              __typename?: 'FieldOption';
              label?: string | null;
              value?: string | null;
            } | null> | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Email';
            defaultValue?: string | null;
            blockedDomains?: Array<string | null> | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Hidden';
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_MultiLineText';
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_Phone';
            defaultValue?: string | null;
            countryEnabled?: boolean | null;
            countryDefaultValue?: string | null;
            countryShowDialCode?: boolean | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            countryOptions?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | {
            __typename?: 'Field_SingleLineText';
            defaultValue?: string | null;
            id?: string | null;
            name?: string | null;
            handle?: string | null;
            instructions?: string | null;
            required?: boolean | null;
            type?: string | null;
            displayName?: string | null;
            typeName?: string | null;
            placeholder?: string | null;
            errorMessage?: string | null;
            labelPosition?: string | null;
            instructionsPosition?: string | null;
            cssClasses?: string | null;
            enableConditions?: boolean | null;
            conditions?: string | null;
            enableContentEncryption?: boolean | null;
            visibility?: string | null;
            inputAttributes?: Array<{
              __typename?: 'FieldAttribute';
              label?: string | null;
              value?: string | null;
            } | null> | null;
          }
        | null
      > | null;
    } | null> | null;
  } | null> | null;
};

export type FormFragmentFragment =
  | FormFragment_EnquiryForm_Form_Fragment
  | FormFragment_ProductGuide_Form_Fragment
  | FormFragment_ResourcesSearchForm_Form_Fragment;

export type HeroFragment = {
  __typename?: 'hero_hero_BlockType';
  sectionBackground?: string | null;
  label?: string | null;
  title?: string | null;
  redactor?: string | null;
  logo: Array<
    | { __typename?: 'contentImages_Asset'; id?: string | null }
    | { __typename?: 'featureImages_Asset'; id?: string | null }
    | { __typename?: 'largeImages_Asset'; id?: string | null }
    | {
        __typename?: 'logos_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        id?: string | null;
        src?: string | null;
      }
    | { __typename?: 'svgIcons_Asset'; id?: string | null }
    | { __typename?: 'videos_Asset'; id?: string | null }
    | null
  >;
  buttons: Array<{
    __typename?: 'heroButtons_BlockType';
    button?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      title?: string | null;
      type?: string | null;
      label?: string | null;
      href?: string | null;
    } | null;
  } | null>;
  contentImage: Array<
    | {
        __typename?: 'contentImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | { __typename?: 'logos_Asset' }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
  image: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | {
        __typename?: 'largeImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        focalPoint?: Array<number | null> | null;
        src?: string | null;
      }
    | { __typename?: 'logos_Asset' }
    | { __typename?: 'svgIcons_Asset' }
    | {
        __typename?: 'videos_Asset';
        title?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | null
  >;
  mobileImage: Array<
    | {
        __typename?: 'contentImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | {
        __typename?: 'featureImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | {
        __typename?: 'largeImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | {
        __typename?: 'logos_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | {
        __typename?: 'svgIcons_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | {
        __typename?: 'videos_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | null
  >;
};

export type InformationGridLayoutsFragment = {
  __typename?: 'informationGridLayouts_default_Entry';
  id?: string | null;
  informationGridBlocks: Array<{
    __typename?: 'informationGridBlocks_block_BlockType';
    id?: string | null;
    blockTitle?: string | null;
    blockSubtitle?: string | null;
    blockContent?: string | null;
    icon: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | { __typename?: 'logos_Asset' }
      | {
          __typename?: 'svgIcons_Asset';
          title?: string | null;
          url?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          ariaHidden?: boolean | null;
        }
      | { __typename?: 'videos_Asset' }
      | null
    >;
    blockLink?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      text?: string | null;
      title?: string | null;
      type?: string | null;
      url?: string | null;
    } | null;
  } | null>;
  buttonGroup: Array<{
    __typename?: 'buttonGroup_BlockType';
    button?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      text?: string | null;
      title?: string | null;
      type?: string | null;
      url?: string | null;
    } | null;
  } | null>;
};

export type CalculatorFragment = {
  __typename?: 'contentBlocks_calculator_BlockType';
  id?: string | null;
  inputText?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
};

export type ColumnLayoutFragment = {
  __typename?: 'contentBlocks_columnLayout_BlockType';
  id?: string | null;
  showDivider?: boolean | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  columnSectionLayout: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | {
        __typename?: 'columnSectionLayouts_default_Entry';
        id?: string | null;
        columnRatio?: string | null;
        columnNumber?: string | null;
        columnAlignment?: string | null;
        columnBlocks: Array<
          | {
              __typename?: 'columnBlocks_asset_BlockType';
              id?: string | null;
              image: Array<
                | {
                    __typename?: 'contentImages_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | { __typename?: 'logos_Asset' }
                | { __typename?: 'svgIcons_Asset' }
                | {
                    __typename?: 'videos_Asset';
                    title?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | null
              >;
            }
          | {
              __typename?: 'columnBlocks_data_BlockType';
              id?: string | null;
              dataValue?: string | null;
              indicatorWidth?: any | null;
              statistic?: string | null;
            }
          | {
              __typename?: 'columnBlocks_faqs_BlockType';
              id?: string | null;
              items: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | {
                    __typename?: 'faqs_default_Entry';
                    title?: string | null;
                    content?: string | null;
                  }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'columnBlocks_form_BlockType';
              id?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              form?: Array<
                | { __typename?: 'enquiryForm_Form'; handle?: string | null }
                | { __typename?: 'productGuide_Form'; handle?: string | null }
                | {
                    __typename?: 'resourcesSearchForm_Form';
                    handle?: string | null;
                  }
                | null
              > | null;
            }
          | {
              __typename?: 'columnBlocks_quote_BlockType';
              id?: string | null;
              quote?: string | null;
              reference?: string | null;
              size?: string | null;
            }
          | {
              __typename?: 'columnBlocks_redactor_BlockType';
              id?: string | null;
              label?: string | null;
              redactor?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              buttons: Array<{
                __typename?: 'buttons_BlockType';
                button?: {
                  __typename?: 'linkField_Link';
                  ariaLabel?: string | null;
                  target?: string | null;
                  title?: string | null;
                  type?: string | null;
                  label?: string | null;
                  href?: string | null;
                } | null;
              } | null>;
            }
          | null
        >;
        buttonGroup: Array<{
          __typename?: 'buttonGroup_BlockType';
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            title?: string | null;
            type?: string | null;
            label?: string | null;
            href?: string | null;
          } | null;
        } | null>;
      }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

export type EntriesCarouselFragment = {
  __typename?: 'contentBlocks_entriesCarousel_BlockType';
  id?: string | null;
  sectionType?: Array<string | null> | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  categories: Array<
    | { __typename?: 'topics_Category'; id?: string | null }
    | { __typename?: 'types_Category'; id?: string | null }
    | null
  >;
};

export type FaqsSectionFragment = {
  __typename?: 'contentBlocks_faqs_BlockType';
  id?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  items: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | {
        __typename?: 'faqs_default_Entry';
        title?: string | null;
        content?: string | null;
      }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

export type FormFragment = {
  __typename?: 'contentBlocks_form_BlockType';
  id?: string | null;
  sectionBackground?: string | null;
  redactor?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  form?: Array<
    | { __typename?: 'enquiryForm_Form'; handle?: string | null }
    | { __typename?: 'productGuide_Form'; handle?: string | null }
    | { __typename?: 'resourcesSearchForm_Form'; handle?: string | null }
    | null
  > | null;
};

export type FullWidthSectionFragment = {
  __typename?: 'contentBlocks_fullWidthSection_BlockType';
  id?: string | null;
  showDivider?: boolean | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  content: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | {
        __typename?: 'linkList_default_Entry';
        id?: string | null;
        linkList: Array<{
          __typename?: 'linkList_BlockType';
          link?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            text?: string | null;
            title?: string | null;
            type?: string | null;
            url?: string | null;
          } | null;
        } | null>;
      }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

export type InformationGridLayoutFragment = {
  __typename?: 'contentBlocks_informationGridLayout_BlockType';
  id?: string | null;
  asCards?: boolean | null;
  asSlider?: boolean | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  informationGridLayout: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        id?: string | null;
        informationGridBlocks: Array<{
          __typename?: 'informationGridBlocks_block_BlockType';
          id?: string | null;
          blockTitle?: string | null;
          blockSubtitle?: string | null;
          blockContent?: string | null;
          icon: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | {
                __typename?: 'svgIcons_Asset';
                title?: string | null;
                url?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                ariaHidden?: boolean | null;
              }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          blockLink?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            text?: string | null;
            title?: string | null;
            type?: string | null;
            url?: string | null;
          } | null;
        } | null>;
        buttonGroup: Array<{
          __typename?: 'buttonGroup_BlockType';
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            text?: string | null;
            title?: string | null;
            type?: string | null;
            url?: string | null;
          } | null;
        } | null>;
      }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

export type LargeImageSectionFragment = {
  __typename?: 'contentBlocks_largeImage_BlockType';
  id?: string | null;
  image: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | {
        __typename?: 'largeImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'logos_Asset' }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

export type LogoCarouselSectionFragment = {
  __typename?: 'contentBlocks_logoCarousel_BlockType';
  id?: string | null;
  title?: string | null;
  images: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | {
        __typename?: 'logos_Asset';
        id?: string | null;
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        ariaHidden?: boolean | null;
        src?: string | null;
      }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

export type QuoteSectionFragment = {
  __typename?: 'contentBlocks_quote_BlockType';
  id?: string | null;
  quote?: string | null;
  reference?: string | null;
  size?: string | null;
};

export type RedactorSectionFragment = {
  __typename?: 'contentBlocks_redactor_BlockType';
  id?: string | null;
  showDivider?: boolean | null;
  contentWidth?: string | null;
  sectionBackground?: string | null;
  label?: string | null;
  redactor?: string | null;
  logo: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | {
        __typename?: 'logos_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

export type TabbedContentFragment = {
  __typename?: 'contentBlocks_tabbedContent_BlockType';
  id?: string | null;
  tabs: Array<{
    __typename?: 'tabs_BlockType';
    id?: string | null;
    tabLabel?: string | null;
    title?: string | null;
    content?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          alt?: string | null;
          title?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
    button?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      text?: string | null;
      title?: string | null;
      type?: string | null;
      href?: string | null;
    } | null;
    image: Array<
      | {
          __typename?: 'contentImages_Asset';
          alt?: string | null;
          title?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | { __typename?: 'logos_Asset' }
      | { __typename?: 'svgIcons_Asset' }
      | {
          __typename?: 'videos_Asset';
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | null
    >;
  } | null>;
};

export type TestimonialsCarouselFragment = {
  __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
  id?: string | null;
  testimonials: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | {
        __typename?: 'testimonials_default_Entry';
        testimonial: Array<{
          __typename?: 'testimonial_BlockType';
          id?: string | null;
          quote?: string | null;
          reference?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            title?: string | null;
            type?: string | null;
            href?: string | null;
            label?: string | null;
          } | null;
        } | null>;
      }
    | null
  >;
};

type MatrixBlocks_ArticleHero_Hero_BlockType_Fragment = {
  __typename?: 'articleHero_hero_BlockType';
};

type MatrixBlocks_ColumnBlocks_Asset_BlockType_Fragment = {
  __typename?: 'columnBlocks_asset_BlockType';
};

type MatrixBlocks_ColumnBlocks_Data_BlockType_Fragment = {
  __typename?: 'columnBlocks_data_BlockType';
};

type MatrixBlocks_ColumnBlocks_Faqs_BlockType_Fragment = {
  __typename?: 'columnBlocks_faqs_BlockType';
};

type MatrixBlocks_ColumnBlocks_Form_BlockType_Fragment = {
  __typename?: 'columnBlocks_form_BlockType';
};

type MatrixBlocks_ColumnBlocks_Quote_BlockType_Fragment = {
  __typename?: 'columnBlocks_quote_BlockType';
};

type MatrixBlocks_ColumnBlocks_Redactor_BlockType_Fragment = {
  __typename?: 'columnBlocks_redactor_BlockType';
};

type MatrixBlocks_ContentBlocks_Calculator_BlockType_Fragment = {
  __typename?: 'contentBlocks_calculator_BlockType';
  id?: string | null;
  inputText?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
};

type MatrixBlocks_ContentBlocks_ColumnLayout_BlockType_Fragment = {
  __typename?: 'contentBlocks_columnLayout_BlockType';
  id?: string | null;
  showDivider?: boolean | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  columnSectionLayout: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | {
        __typename?: 'columnSectionLayouts_default_Entry';
        id?: string | null;
        columnRatio?: string | null;
        columnNumber?: string | null;
        columnAlignment?: string | null;
        columnBlocks: Array<
          | {
              __typename?: 'columnBlocks_asset_BlockType';
              id?: string | null;
              image: Array<
                | {
                    __typename?: 'contentImages_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | { __typename?: 'logos_Asset' }
                | { __typename?: 'svgIcons_Asset' }
                | {
                    __typename?: 'videos_Asset';
                    title?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | null
              >;
            }
          | {
              __typename?: 'columnBlocks_data_BlockType';
              id?: string | null;
              dataValue?: string | null;
              indicatorWidth?: any | null;
              statistic?: string | null;
            }
          | {
              __typename?: 'columnBlocks_faqs_BlockType';
              id?: string | null;
              items: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | {
                    __typename?: 'faqs_default_Entry';
                    title?: string | null;
                    content?: string | null;
                  }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'columnBlocks_form_BlockType';
              id?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              form?: Array<
                | { __typename?: 'enquiryForm_Form'; handle?: string | null }
                | { __typename?: 'productGuide_Form'; handle?: string | null }
                | {
                    __typename?: 'resourcesSearchForm_Form';
                    handle?: string | null;
                  }
                | null
              > | null;
            }
          | {
              __typename?: 'columnBlocks_quote_BlockType';
              id?: string | null;
              quote?: string | null;
              reference?: string | null;
              size?: string | null;
            }
          | {
              __typename?: 'columnBlocks_redactor_BlockType';
              id?: string | null;
              label?: string | null;
              redactor?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              buttons: Array<{
                __typename?: 'buttons_BlockType';
                button?: {
                  __typename?: 'linkField_Link';
                  ariaLabel?: string | null;
                  target?: string | null;
                  title?: string | null;
                  type?: string | null;
                  label?: string | null;
                  href?: string | null;
                } | null;
              } | null>;
            }
          | null
        >;
        buttonGroup: Array<{
          __typename?: 'buttonGroup_BlockType';
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            title?: string | null;
            type?: string | null;
            label?: string | null;
            href?: string | null;
          } | null;
        } | null>;
      }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_EntriesCarousel_BlockType_Fragment = {
  __typename?: 'contentBlocks_entriesCarousel_BlockType';
  id?: string | null;
  sectionType?: Array<string | null> | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  categories: Array<
    | { __typename?: 'topics_Category'; id?: string | null }
    | { __typename?: 'types_Category'; id?: string | null }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_Faqs_BlockType_Fragment = {
  __typename?: 'contentBlocks_faqs_BlockType';
  id?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  items: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | {
        __typename?: 'faqs_default_Entry';
        title?: string | null;
        content?: string | null;
      }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_Form_BlockType_Fragment = {
  __typename?: 'contentBlocks_form_BlockType';
  id?: string | null;
  sectionBackground?: string | null;
  redactor?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  form?: Array<
    | { __typename?: 'enquiryForm_Form'; handle?: string | null }
    | { __typename?: 'productGuide_Form'; handle?: string | null }
    | { __typename?: 'resourcesSearchForm_Form'; handle?: string | null }
    | null
  > | null;
};

type MatrixBlocks_ContentBlocks_FullWidthSection_BlockType_Fragment = {
  __typename?: 'contentBlocks_fullWidthSection_BlockType';
  id?: string | null;
  showDivider?: boolean | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  content: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | {
        __typename?: 'linkList_default_Entry';
        id?: string | null;
        linkList: Array<{
          __typename?: 'linkList_BlockType';
          link?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            text?: string | null;
            title?: string | null;
            type?: string | null;
            url?: string | null;
          } | null;
        } | null>;
      }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_InformationGridLayout_BlockType_Fragment = {
  __typename?: 'contentBlocks_informationGridLayout_BlockType';
  id?: string | null;
  asCards?: boolean | null;
  asSlider?: boolean | null;
  sectionBackground?: string | null;
  sectionTitles: Array<{
    __typename?: 'sectionTitles_BlockType';
    label?: string | null;
    title?: string | null;
    subtitle?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          title?: string | null;
          alt?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
  } | null>;
  informationGridLayout: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        id?: string | null;
        informationGridBlocks: Array<{
          __typename?: 'informationGridBlocks_block_BlockType';
          id?: string | null;
          blockTitle?: string | null;
          blockSubtitle?: string | null;
          blockContent?: string | null;
          icon: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | {
                __typename?: 'svgIcons_Asset';
                title?: string | null;
                url?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                ariaHidden?: boolean | null;
              }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          blockLink?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            text?: string | null;
            title?: string | null;
            type?: string | null;
            url?: string | null;
          } | null;
        } | null>;
        buttonGroup: Array<{
          __typename?: 'buttonGroup_BlockType';
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            text?: string | null;
            title?: string | null;
            type?: string | null;
            url?: string | null;
          } | null;
        } | null>;
      }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_LargeImage_BlockType_Fragment = {
  __typename?: 'contentBlocks_largeImage_BlockType';
  id?: string | null;
  image: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | {
        __typename?: 'largeImages_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'logos_Asset' }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_LogoCarousel_BlockType_Fragment = {
  __typename?: 'contentBlocks_logoCarousel_BlockType';
  id?: string | null;
  title?: string | null;
  images: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | {
        __typename?: 'logos_Asset';
        id?: string | null;
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        ariaHidden?: boolean | null;
        src?: string | null;
      }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_Quote_BlockType_Fragment = {
  __typename?: 'contentBlocks_quote_BlockType';
  id?: string | null;
  quote?: string | null;
  reference?: string | null;
  size?: string | null;
};

type MatrixBlocks_ContentBlocks_Redactor_BlockType_Fragment = {
  __typename?: 'contentBlocks_redactor_BlockType';
  id?: string | null;
  showDivider?: boolean | null;
  contentWidth?: string | null;
  sectionBackground?: string | null;
  label?: string | null;
  redactor?: string | null;
  logo: Array<
    | { __typename?: 'contentImages_Asset' }
    | { __typename?: 'featureImages_Asset' }
    | { __typename?: 'largeImages_Asset' }
    | {
        __typename?: 'logos_Asset';
        title?: string | null;
        alt?: string | null;
        width?: number | null;
        height?: number | null;
        src?: string | null;
      }
    | { __typename?: 'svgIcons_Asset' }
    | { __typename?: 'videos_Asset' }
    | null
  >;
};

type MatrixBlocks_ContentBlocks_TabbedContent_BlockType_Fragment = {
  __typename?: 'contentBlocks_tabbedContent_BlockType';
  id?: string | null;
  tabs: Array<{
    __typename?: 'tabs_BlockType';
    id?: string | null;
    tabLabel?: string | null;
    title?: string | null;
    content?: string | null;
    logo: Array<
      | { __typename?: 'contentImages_Asset' }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | {
          __typename?: 'logos_Asset';
          alt?: string | null;
          title?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'svgIcons_Asset' }
      | { __typename?: 'videos_Asset' }
      | null
    >;
    button?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      text?: string | null;
      title?: string | null;
      type?: string | null;
      href?: string | null;
    } | null;
    image: Array<
      | {
          __typename?: 'contentImages_Asset';
          alt?: string | null;
          title?: string | null;
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | { __typename?: 'featureImages_Asset' }
      | { __typename?: 'largeImages_Asset' }
      | { __typename?: 'logos_Asset' }
      | { __typename?: 'svgIcons_Asset' }
      | {
          __typename?: 'videos_Asset';
          width?: number | null;
          height?: number | null;
          src?: string | null;
        }
      | null
    >;
  } | null>;
};

type MatrixBlocks_ContentBlocks_TestimonialsCarousel_BlockType_Fragment = {
  __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
  id?: string | null;
  testimonials: Array<
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | {
        __typename?: 'testimonials_default_Entry';
        testimonial: Array<{
          __typename?: 'testimonial_BlockType';
          id?: string | null;
          quote?: string | null;
          reference?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            title?: string | null;
            type?: string | null;
            href?: string | null;
            label?: string | null;
          } | null;
        } | null>;
      }
    | null
  >;
};

type MatrixBlocks_Hero_Hero_BlockType_Fragment = {
  __typename?: 'hero_hero_BlockType';
};

type MatrixBlocks_InformationGridBlocks_Block_BlockType_Fragment = {
  __typename?: 'informationGridBlocks_block_BlockType';
};

export type MatrixBlocksFragment =
  | MatrixBlocks_ArticleHero_Hero_BlockType_Fragment
  | MatrixBlocks_ColumnBlocks_Asset_BlockType_Fragment
  | MatrixBlocks_ColumnBlocks_Data_BlockType_Fragment
  | MatrixBlocks_ColumnBlocks_Faqs_BlockType_Fragment
  | MatrixBlocks_ColumnBlocks_Form_BlockType_Fragment
  | MatrixBlocks_ColumnBlocks_Quote_BlockType_Fragment
  | MatrixBlocks_ColumnBlocks_Redactor_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_Calculator_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_ColumnLayout_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_EntriesCarousel_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_Faqs_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_Form_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_FullWidthSection_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_InformationGridLayout_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_LargeImage_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_LogoCarousel_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_Quote_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_Redactor_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_TabbedContent_BlockType_Fragment
  | MatrixBlocks_ContentBlocks_TestimonialsCarousel_BlockType_Fragment
  | MatrixBlocks_Hero_Hero_BlockType_Fragment
  | MatrixBlocks_InformationGridBlocks_Block_BlockType_Fragment;

export type ColumnSectionLayoutsFragment = {
  __typename?: 'columnSectionLayouts_default_Entry';
  id?: string | null;
  columnRatio?: string | null;
  columnNumber?: string | null;
  columnAlignment?: string | null;
  columnBlocks: Array<
    | {
        __typename?: 'columnBlocks_asset_BlockType';
        id?: string | null;
        image: Array<
          | {
              __typename?: 'contentImages_Asset';
              title?: string | null;
              alt?: string | null;
              width?: number | null;
              height?: number | null;
              src?: string | null;
            }
          | { __typename?: 'featureImages_Asset' }
          | { __typename?: 'largeImages_Asset' }
          | { __typename?: 'logos_Asset' }
          | { __typename?: 'svgIcons_Asset' }
          | {
              __typename?: 'videos_Asset';
              title?: string | null;
              width?: number | null;
              height?: number | null;
              src?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'columnBlocks_data_BlockType';
        id?: string | null;
        dataValue?: string | null;
        indicatorWidth?: any | null;
        statistic?: string | null;
      }
    | {
        __typename?: 'columnBlocks_faqs_BlockType';
        id?: string | null;
        items: Array<
          | { __typename?: 'articles_default_Entry' }
          | { __typename?: 'caseStudies_default_Entry' }
          | { __typename?: 'columnSectionLayouts_default_Entry' }
          | {
              __typename?: 'faqs_default_Entry';
              title?: string | null;
              content?: string | null;
            }
          | { __typename?: 'homepage_homepage_Entry' }
          | { __typename?: 'informationGridLayouts_default_Entry' }
          | { __typename?: 'linkList_default_Entry' }
          | { __typename?: 'navigationBlocks_default_Entry' }
          | { __typename?: 'pages_default_Entry' }
          | { __typename?: 'resources_resources_Entry' }
          | { __typename?: 'testimonials_default_Entry' }
          | null
        >;
      }
    | {
        __typename?: 'columnBlocks_form_BlockType';
        id?: string | null;
        sectionTitles: Array<{
          __typename?: 'sectionTitles_BlockType';
          label?: string | null;
          title?: string | null;
          subtitle?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
        } | null>;
        form?: Array<
          | { __typename?: 'enquiryForm_Form'; handle?: string | null }
          | { __typename?: 'productGuide_Form'; handle?: string | null }
          | { __typename?: 'resourcesSearchForm_Form'; handle?: string | null }
          | null
        > | null;
      }
    | {
        __typename?: 'columnBlocks_quote_BlockType';
        id?: string | null;
        quote?: string | null;
        reference?: string | null;
        size?: string | null;
      }
    | {
        __typename?: 'columnBlocks_redactor_BlockType';
        id?: string | null;
        label?: string | null;
        redactor?: string | null;
        sectionTitles: Array<{
          __typename?: 'sectionTitles_BlockType';
          label?: string | null;
          title?: string | null;
          subtitle?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
        } | null>;
        buttons: Array<{
          __typename?: 'buttons_BlockType';
          button?: {
            __typename?: 'linkField_Link';
            ariaLabel?: string | null;
            target?: string | null;
            title?: string | null;
            type?: string | null;
            label?: string | null;
            href?: string | null;
          } | null;
        } | null>;
      }
    | null
  >;
  buttonGroup: Array<{
    __typename?: 'buttonGroup_BlockType';
    button?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      title?: string | null;
      type?: string | null;
      label?: string | null;
      href?: string | null;
    } | null;
  } | null>;
};

export type LinkListFragment = {
  __typename?: 'linkList_default_Entry';
  id?: string | null;
  linkList: Array<{
    __typename?: 'linkList_BlockType';
    link?: {
      __typename?: 'linkField_Link';
      ariaLabel?: string | null;
      target?: string | null;
      text?: string | null;
      title?: string | null;
      type?: string | null;
      url?: string | null;
    } | null;
  } | null>;
};

export type EnquiryFormSubmissionMutationVariables = Exact<{
  fullName?: InputMaybe<Scalars['String']>;
  officialEmail?: InputMaybe<Scalars['String']>;
  companyName: Scalars['String'];
  phoneNumber: Scalars['String'];
  iAmInterestedIn: Scalars['String'];
  iWorkIn: Scalars['String'];
  message: Scalars['String'];
  termsAndConditions: Scalars['String'];
}>;

export type EnquiryFormSubmissionMutation = {
  __typename?: 'Mutation';
  save_enquiryForm_Submission?: {
    __typename?: 'enquiryForm_Submission';
    fullName?: string | null;
    officialEmail?: string | null;
    companyName?: string | null;
    phoneNumber?: string | null;
    iAmInterestedIn?: string | null;
    iWorkIn?: string | null;
    message?: string | null;
    termsAndConditions?: string | null;
  } | null;
};

export type GetArticleContentQueryVariables = Exact<{
  uri?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
}>;

export type GetArticleContentQuery = {
  __typename?: 'Query';
  entry?:
    | {
        __typename?: 'articles_default_Entry';
        title?: string | null;
        postDate?: any | null;
        articleAuthor?: string | null;
        articleTags: Array<{
          __typename?: 'articleTags_Tag';
          id?: string | null;
          title?: string | null;
        } | null>;
        types: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
            }
          | null
        >;
        articleHero: Array<{
          __typename?: 'articleHero_hero_BlockType';
          label?: string | null;
          title?: string | null;
          redactor?: string | null;
          contentImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
        } | null>;
        contentBlocks: Array<
          | {
              __typename?: 'contentBlocks_calculator_BlockType';
              id?: string | null;
              inputText?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_columnLayout_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              columnSectionLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | {
                    __typename?: 'columnSectionLayouts_default_Entry';
                    id?: string | null;
                    columnRatio?: string | null;
                    columnNumber?: string | null;
                    columnAlignment?: string | null;
                    columnBlocks: Array<
                      | {
                          __typename?: 'columnBlocks_asset_BlockType';
                          id?: string | null;
                          image: Array<
                            | {
                                __typename?: 'contentImages_Asset';
                                title?: string | null;
                                alt?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | { __typename?: 'featureImages_Asset' }
                            | { __typename?: 'largeImages_Asset' }
                            | { __typename?: 'logos_Asset' }
                            | { __typename?: 'svgIcons_Asset' }
                            | {
                                __typename?: 'videos_Asset';
                                title?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_data_BlockType';
                          id?: string | null;
                          dataValue?: string | null;
                          indicatorWidth?: any | null;
                          statistic?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_faqs_BlockType';
                          id?: string | null;
                          items: Array<
                            | { __typename?: 'articles_default_Entry' }
                            | { __typename?: 'caseStudies_default_Entry' }
                            | {
                                __typename?: 'columnSectionLayouts_default_Entry';
                              }
                            | {
                                __typename?: 'faqs_default_Entry';
                                title?: string | null;
                                content?: string | null;
                              }
                            | { __typename?: 'homepage_homepage_Entry' }
                            | {
                                __typename?: 'informationGridLayouts_default_Entry';
                              }
                            | { __typename?: 'linkList_default_Entry' }
                            | { __typename?: 'navigationBlocks_default_Entry' }
                            | { __typename?: 'pages_default_Entry' }
                            | { __typename?: 'resources_resources_Entry' }
                            | { __typename?: 'testimonials_default_Entry' }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_form_BlockType';
                          id?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          form?: Array<
                            | {
                                __typename?: 'enquiryForm_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'productGuide_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'resourcesSearchForm_Form';
                                handle?: string | null;
                              }
                            | null
                          > | null;
                        }
                      | {
                          __typename?: 'columnBlocks_quote_BlockType';
                          id?: string | null;
                          quote?: string | null;
                          reference?: string | null;
                          size?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_redactor_BlockType';
                          id?: string | null;
                          label?: string | null;
                          redactor?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          buttons: Array<{
                            __typename?: 'buttons_BlockType';
                            button?: {
                              __typename?: 'linkField_Link';
                              ariaLabel?: string | null;
                              target?: string | null;
                              title?: string | null;
                              type?: string | null;
                              label?: string | null;
                              href?: string | null;
                            } | null;
                          } | null>;
                        }
                      | null
                    >;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        label?: string | null;
                        href?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_entriesCarousel_BlockType';
              id?: string | null;
              sectionType?: Array<string | null> | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              categories: Array<
                | { __typename?: 'topics_Category'; id?: string | null }
                | { __typename?: 'types_Category'; id?: string | null }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_faqs_BlockType';
              id?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              items: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | {
                    __typename?: 'faqs_default_Entry';
                    title?: string | null;
                    content?: string | null;
                  }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_form_BlockType';
              id?: string | null;
              sectionBackground?: string | null;
              redactor?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              form?: Array<
                | { __typename?: 'enquiryForm_Form'; handle?: string | null }
                | { __typename?: 'productGuide_Form'; handle?: string | null }
                | {
                    __typename?: 'resourcesSearchForm_Form';
                    handle?: string | null;
                  }
                | null
              > | null;
            }
          | {
              __typename?: 'contentBlocks_fullWidthSection_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              content: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | {
                    __typename?: 'linkList_default_Entry';
                    id?: string | null;
                    linkList: Array<{
                      __typename?: 'linkList_BlockType';
                      link?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_informationGridLayout_BlockType';
              id?: string | null;
              asCards?: boolean | null;
              asSlider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              informationGridLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | {
                    __typename?: 'informationGridLayouts_default_Entry';
                    id?: string | null;
                    informationGridBlocks: Array<{
                      __typename?: 'informationGridBlocks_block_BlockType';
                      id?: string | null;
                      blockTitle?: string | null;
                      blockSubtitle?: string | null;
                      blockContent?: string | null;
                      icon: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | { __typename?: 'logos_Asset' }
                        | {
                            __typename?: 'svgIcons_Asset';
                            title?: string | null;
                            url?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            ariaHidden?: boolean | null;
                          }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      blockLink?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_largeImage_BlockType';
              id?: string | null;
              image: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | {
                    __typename?: 'largeImages_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'logos_Asset' }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_logoCarousel_BlockType';
              id?: string | null;
              title?: string | null;
              images: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    id?: string | null;
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    ariaHidden?: boolean | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_quote_BlockType';
              id?: string | null;
              quote?: string | null;
              reference?: string | null;
              size?: string | null;
            }
          | {
              __typename?: 'contentBlocks_redactor_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              contentWidth?: string | null;
              sectionBackground?: string | null;
              label?: string | null;
              redactor?: string | null;
              logo: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_tabbedContent_BlockType';
              id?: string | null;
              tabs: Array<{
                __typename?: 'tabs_BlockType';
                id?: string | null;
                tabLabel?: string | null;
                title?: string | null;
                content?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
                button?: {
                  __typename?: 'linkField_Link';
                  ariaLabel?: string | null;
                  target?: string | null;
                  text?: string | null;
                  title?: string | null;
                  type?: string | null;
                  href?: string | null;
                } | null;
                image: Array<
                  | {
                      __typename?: 'contentImages_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | { __typename?: 'logos_Asset' }
                  | { __typename?: 'svgIcons_Asset' }
                  | {
                      __typename?: 'videos_Asset';
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
              id?: string | null;
              testimonials: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | {
                    __typename?: 'testimonials_default_Entry';
                    testimonial: Array<{
                      __typename?: 'testimonial_BlockType';
                      id?: string | null;
                      quote?: string | null;
                      reference?: string | null;
                      logo: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | {
                            __typename?: 'logos_Asset';
                            title?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            src?: string | null;
                          }
                        | { __typename?: 'svgIcons_Asset' }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        href?: string | null;
                        label?: string | null;
                      } | null;
                    } | null>;
                  }
                | null
              >;
            }
          | null
        >;
      }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null;
};

export type GetEntriesBySectionQueryVariables = Exact<{
  section?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
  limit?: InputMaybe<Scalars['Int']>;
}>;

export type GetEntriesBySectionQuery = {
  __typename?: 'Query';
  entries?: Array<
    | {
        __typename?: 'articles_default_Entry';
        shortDescription?: string | null;
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
        featureImage: Array<
          | {
              __typename?: 'contentImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'featureImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'largeImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'logos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'svgIcons_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'videos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | null
        >;
        topics: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | null
        >;
        types: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'caseStudies_default_Entry';
        shortDescription?: string | null;
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
        featureImage: Array<
          | {
              __typename?: 'contentImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'featureImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'largeImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'logos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'svgIcons_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'videos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | null
        >;
        topics: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'columnSectionLayouts_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'faqs_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'homepage_homepage_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'linkList_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'navigationBlocks_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'pages_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'resources_resources_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'testimonials_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | null
  > | null;
};

export type GetEntriesBySectionAndCategoriesQueryVariables = Exact<{
  section?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
  categories?: InputMaybe<
    Array<InputMaybe<CategoryCriteriaInput>> | InputMaybe<CategoryCriteriaInput>
  >;
  limit?: InputMaybe<Scalars['Int']>;
}>;

export type GetEntriesBySectionAndCategoriesQuery = {
  __typename?: 'Query';
  entries?: Array<
    | {
        __typename?: 'articles_default_Entry';
        shortDescription?: string | null;
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
        featureImage: Array<
          | {
              __typename?: 'contentImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'featureImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'largeImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'logos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'svgIcons_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'videos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | null
        >;
        topics: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
            }
          | null
        >;
        types: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'caseStudies_default_Entry';
        shortDescription?: string | null;
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
        featureImage: Array<
          | {
              __typename?: 'contentImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'featureImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'largeImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'logos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'svgIcons_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'videos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | null
        >;
        topics: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'columnSectionLayouts_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'faqs_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'homepage_homepage_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'linkList_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'navigationBlocks_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'pages_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'resources_resources_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'testimonials_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | null
  > | null;
};

export type GetEntriesBySectionAndCategoriesAndSearchQueryVariables = Exact<{
  section?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
  search?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<
    Array<InputMaybe<CategoryCriteriaInput>> | InputMaybe<CategoryCriteriaInput>
  >;
  limit?: InputMaybe<Scalars['Int']>;
}>;

export type GetEntriesBySectionAndCategoriesAndSearchQuery = {
  __typename?: 'Query';
  entries?: Array<
    | {
        __typename?: 'articles_default_Entry';
        shortDescription?: string | null;
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
        featureImage: Array<
          | {
              __typename?: 'contentImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'featureImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'largeImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'logos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'svgIcons_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'videos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | null
        >;
        topics: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
            }
          | null
        >;
        types: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
              slug?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'caseStudies_default_Entry';
        shortDescription?: string | null;
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
        featureImage: Array<
          | {
              __typename?: 'contentImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'featureImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'largeImages_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'logos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'svgIcons_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | {
              __typename?: 'videos_Asset';
              id?: string | null;
              alt?: string | null;
              title?: string | null;
              url?: string | null;
              width?: number | null;
              height?: number | null;
            }
          | null
        >;
        topics: Array<
          | {
              __typename?: 'topics_Category';
              id?: string | null;
              title?: string | null;
            }
          | {
              __typename?: 'types_Category';
              id?: string | null;
              title?: string | null;
            }
          | null
        >;
      }
    | {
        __typename?: 'columnSectionLayouts_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'faqs_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'homepage_homepage_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'linkList_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'navigationBlocks_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'pages_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'resources_resources_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | {
        __typename?: 'testimonials_default_Entry';
        id?: string | null;
        uri?: string | null;
        title?: string | null;
        sectionHandle: string;
      }
    | null
  > | null;
};

export type GetFooterNavigationQueryVariables = Exact<{ [key: string]: never }>;

export type GetFooterNavigationQuery = {
  __typename?: 'Query';
  navigationNodes?: Array<
    | {
        __typename?: 'footerNavigation_Node';
        id?: string | null;
        title?: string | null;
        children?: Array<
          | {
              __typename?: 'footerNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | {
              __typename?: 'footerSubNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | {
              __typename?: 'mainNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | null
        > | null;
      }
    | {
        __typename?: 'footerSubNavigation_Node';
        id?: string | null;
        title?: string | null;
        children?: Array<
          | {
              __typename?: 'footerNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | {
              __typename?: 'footerSubNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | {
              __typename?: 'mainNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | null
        > | null;
      }
    | {
        __typename?: 'mainNavigation_Node';
        id?: string | null;
        title?: string | null;
        children?: Array<
          | {
              __typename?: 'footerNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | {
              __typename?: 'footerSubNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | {
              __typename?: 'mainNavigation_Node';
              id?: string | null;
              title?: string | null;
              newWindow?: string | null;
              href?: string | null;
            }
          | null
        > | null;
      }
    | null
  > | null;
};

export type GetFooterSubNavigationQueryVariables = Exact<{
  [key: string]: never;
}>;

export type GetFooterSubNavigationQuery = {
  __typename?: 'Query';
  navigationNodes?: Array<
    | {
        __typename?: 'footerNavigation_Node';
        id?: string | null;
        title?: string | null;
        newWindow?: string | null;
        href?: string | null;
      }
    | {
        __typename?: 'footerSubNavigation_Node';
        id?: string | null;
        title?: string | null;
        newWindow?: string | null;
        href?: string | null;
      }
    | {
        __typename?: 'mainNavigation_Node';
        id?: string | null;
        title?: string | null;
        newWindow?: string | null;
        href?: string | null;
      }
    | null
  > | null;
};

export type GetFormieQueryVariables = Exact<{
  handle?: InputMaybe<
    Array<InputMaybe<Scalars['String']>> | InputMaybe<Scalars['String']>
  >;
}>;

export type GetFormieQuery = {
  __typename?: 'Query';
  form?:
    | {
        __typename?: 'enquiryForm_Form';
        id?: string | null;
        title?: string | null;
        handle?: string | null;
        siteId?: number | null;
        csrfToken?: {
          __typename?: 'FormieCsrfTokenType';
          name?: string | null;
          value?: string | null;
        } | null;
        captchas?: Array<{
          __typename?: 'FormieCaptchaType';
          handle?: string | null;
          name?: string | null;
          value?: string | null;
        } | null> | null;
        settings?: {
          __typename?: 'FormSettingsType';
          submitAction?: string | null;
          submitActionTab?: string | null;
          submitActionMessageHtml?: string | null;
          redirectUrl?: string | null;
          errorMessageHtml?: string | null;
          redirectEntry?:
            | {
                __typename?: 'articles_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'caseStudies_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'columnSectionLayouts_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'faqs_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'homepage_homepage_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'informationGridLayouts_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'linkList_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'navigationBlocks_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'pages_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'resources_resources_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'testimonials_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | null;
        } | null;
        pages?: Array<{
          __typename?: 'PageType';
          name?: string | null;
          id?: string | null;
          settings?: {
            __typename?: 'PageSettingsType';
            submitButtonLabel?: string | null;
            backButtonLabel?: string | null;
            showBackButton?: boolean | null;
            buttonsPosition?: string | null;
          } | null;
          rows?: Array<{
            __typename?: 'RowType';
            rowFields?: Array<
              | {
                  __typename?: 'Field_Agree';
                  defaultState?: boolean | null;
                  checkedValue?: string | null;
                  uncheckedValue?: string | null;
                  description?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Categories';
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  categories?: Array<
                    | {
                        __typename?: 'topics_Category';
                        id?: string | null;
                        title?: string | null;
                        slug?: string | null;
                      }
                    | {
                        __typename?: 'types_Category';
                        id?: string | null;
                        title?: string | null;
                        slug?: string | null;
                      }
                    | null
                  > | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Dropdown';
                  multi?: boolean | null;
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  options?: Array<{
                    __typename?: 'FieldOption';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Email';
                  defaultValue?: string | null;
                  blockedDomains?: Array<string | null> | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Hidden';
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_MultiLineText';
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Phone';
                  defaultValue?: string | null;
                  countryEnabled?: boolean | null;
                  countryDefaultValue?: string | null;
                  countryShowDialCode?: boolean | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  countryOptions?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_SingleLineText';
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | null
            > | null;
          } | null> | null;
        } | null> | null;
      }
    | {
        __typename?: 'productGuide_Form';
        id?: string | null;
        title?: string | null;
        handle?: string | null;
        siteId?: number | null;
        csrfToken?: {
          __typename?: 'FormieCsrfTokenType';
          name?: string | null;
          value?: string | null;
        } | null;
        captchas?: Array<{
          __typename?: 'FormieCaptchaType';
          handle?: string | null;
          name?: string | null;
          value?: string | null;
        } | null> | null;
        settings?: {
          __typename?: 'FormSettingsType';
          submitAction?: string | null;
          submitActionTab?: string | null;
          submitActionMessageHtml?: string | null;
          redirectUrl?: string | null;
          errorMessageHtml?: string | null;
          redirectEntry?:
            | {
                __typename?: 'articles_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'caseStudies_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'columnSectionLayouts_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'faqs_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'homepage_homepage_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'informationGridLayouts_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'linkList_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'navigationBlocks_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'pages_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'resources_resources_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'testimonials_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | null;
        } | null;
        pages?: Array<{
          __typename?: 'PageType';
          name?: string | null;
          id?: string | null;
          settings?: {
            __typename?: 'PageSettingsType';
            submitButtonLabel?: string | null;
            backButtonLabel?: string | null;
            showBackButton?: boolean | null;
            buttonsPosition?: string | null;
          } | null;
          rows?: Array<{
            __typename?: 'RowType';
            rowFields?: Array<
              | {
                  __typename?: 'Field_Agree';
                  defaultState?: boolean | null;
                  checkedValue?: string | null;
                  uncheckedValue?: string | null;
                  description?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Categories';
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  categories?: Array<
                    | {
                        __typename?: 'topics_Category';
                        id?: string | null;
                        title?: string | null;
                        slug?: string | null;
                      }
                    | {
                        __typename?: 'types_Category';
                        id?: string | null;
                        title?: string | null;
                        slug?: string | null;
                      }
                    | null
                  > | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Dropdown';
                  multi?: boolean | null;
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  options?: Array<{
                    __typename?: 'FieldOption';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Email';
                  defaultValue?: string | null;
                  blockedDomains?: Array<string | null> | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Hidden';
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_MultiLineText';
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Phone';
                  defaultValue?: string | null;
                  countryEnabled?: boolean | null;
                  countryDefaultValue?: string | null;
                  countryShowDialCode?: boolean | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  countryOptions?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_SingleLineText';
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | null
            > | null;
          } | null> | null;
        } | null> | null;
      }
    | {
        __typename?: 'resourcesSearchForm_Form';
        id?: string | null;
        title?: string | null;
        handle?: string | null;
        siteId?: number | null;
        csrfToken?: {
          __typename?: 'FormieCsrfTokenType';
          name?: string | null;
          value?: string | null;
        } | null;
        captchas?: Array<{
          __typename?: 'FormieCaptchaType';
          handle?: string | null;
          name?: string | null;
          value?: string | null;
        } | null> | null;
        settings?: {
          __typename?: 'FormSettingsType';
          submitAction?: string | null;
          submitActionTab?: string | null;
          submitActionMessageHtml?: string | null;
          redirectUrl?: string | null;
          errorMessageHtml?: string | null;
          redirectEntry?:
            | {
                __typename?: 'articles_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'caseStudies_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'columnSectionLayouts_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'faqs_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'homepage_homepage_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'informationGridLayouts_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'linkList_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'navigationBlocks_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'pages_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'resources_resources_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | {
                __typename?: 'testimonials_default_Entry';
                id?: string | null;
                uri?: string | null;
                slug?: string | null;
                sectionHandle: string;
              }
            | null;
        } | null;
        pages?: Array<{
          __typename?: 'PageType';
          name?: string | null;
          id?: string | null;
          settings?: {
            __typename?: 'PageSettingsType';
            submitButtonLabel?: string | null;
            backButtonLabel?: string | null;
            showBackButton?: boolean | null;
            buttonsPosition?: string | null;
          } | null;
          rows?: Array<{
            __typename?: 'RowType';
            rowFields?: Array<
              | {
                  __typename?: 'Field_Agree';
                  defaultState?: boolean | null;
                  checkedValue?: string | null;
                  uncheckedValue?: string | null;
                  description?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Categories';
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  categories?: Array<
                    | {
                        __typename?: 'topics_Category';
                        id?: string | null;
                        title?: string | null;
                        slug?: string | null;
                      }
                    | {
                        __typename?: 'types_Category';
                        id?: string | null;
                        title?: string | null;
                        slug?: string | null;
                      }
                    | null
                  > | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Dropdown';
                  multi?: boolean | null;
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  options?: Array<{
                    __typename?: 'FieldOption';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Email';
                  defaultValue?: string | null;
                  blockedDomains?: Array<string | null> | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Hidden';
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_MultiLineText';
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_Phone';
                  defaultValue?: string | null;
                  countryEnabled?: boolean | null;
                  countryDefaultValue?: string | null;
                  countryShowDialCode?: boolean | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  countryOptions?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | {
                  __typename?: 'Field_SingleLineText';
                  defaultValue?: string | null;
                  id?: string | null;
                  name?: string | null;
                  handle?: string | null;
                  instructions?: string | null;
                  required?: boolean | null;
                  type?: string | null;
                  displayName?: string | null;
                  typeName?: string | null;
                  placeholder?: string | null;
                  errorMessage?: string | null;
                  labelPosition?: string | null;
                  instructionsPosition?: string | null;
                  cssClasses?: string | null;
                  enableConditions?: boolean | null;
                  conditions?: string | null;
                  enableContentEncryption?: boolean | null;
                  visibility?: string | null;
                  inputAttributes?: Array<{
                    __typename?: 'FieldAttribute';
                    label?: string | null;
                    value?: string | null;
                  } | null> | null;
                }
              | null
            > | null;
          } | null> | null;
        } | null> | null;
      }
    | null;
};

export type GetGlobalSetFooterQueryVariables = Exact<{ [key: string]: never }>;

export type GetGlobalSetFooterQuery = {
  __typename?: 'Query';
  globalSet?:
    | {
        __typename?: 'footer_GlobalSet';
        logo: Array<
          | { __typename?: 'contentImages_Asset' }
          | { __typename?: 'featureImages_Asset' }
          | { __typename?: 'largeImages_Asset' }
          | {
              __typename?: 'logos_Asset';
              title?: string | null;
              alt?: string | null;
              width?: number | null;
              height?: number | null;
              src?: string | null;
            }
          | { __typename?: 'svgIcons_Asset' }
          | { __typename?: 'videos_Asset' }
          | null
        >;
        socialLinks: Array<{
          __typename?: 'socialLinks_BlockType';
          linkedin?: string | null;
          twitter?: string | null;
          facebook?: string | null;
          github?: string | null;
          youtube?: string | null;
        } | null>;
      }
    | { __typename?: 'header_GlobalSet' }
    | null;
};

export type GetGlobalSetHeaderQueryVariables = Exact<{ [key: string]: never }>;

export type GetGlobalSetHeaderQuery = {
  __typename?: 'Query';
  globalSet?:
    | { __typename?: 'footer_GlobalSet' }
    | {
        __typename: 'header_GlobalSet';
        navigationType?: string | null;
        logo: Array<
          | { __typename?: 'contentImages_Asset' }
          | { __typename?: 'featureImages_Asset' }
          | { __typename?: 'largeImages_Asset' }
          | {
              __typename?: 'logos_Asset';
              title?: string | null;
              alt?: string | null;
              width?: number | null;
              height?: number | null;
              src?: string | null;
            }
          | { __typename?: 'svgIcons_Asset' }
          | { __typename?: 'videos_Asset' }
          | null
        >;
      }
    | null;
};

export type GetHomepageContentQueryVariables = Exact<{ [key: string]: never }>;

export type GetHomepageContentQuery = {
  __typename?: 'Query';
  entry?:
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | {
        __typename?: 'homepage_homepage_Entry';
        title?: string | null;
        hero: Array<{
          __typename?: 'hero_hero_BlockType';
          sectionBackground?: string | null;
          label?: string | null;
          title?: string | null;
          redactor?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset'; id?: string | null }
            | { __typename?: 'featureImages_Asset'; id?: string | null }
            | { __typename?: 'largeImages_Asset'; id?: string | null }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                id?: string | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset'; id?: string | null }
            | { __typename?: 'videos_Asset'; id?: string | null }
            | null
          >;
          buttons: Array<{
            __typename?: 'heroButtons_BlockType';
            button?: {
              __typename?: 'linkField_Link';
              ariaLabel?: string | null;
              target?: string | null;
              title?: string | null;
              type?: string | null;
              label?: string | null;
              href?: string | null;
            } | null;
          } | null>;
          contentImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          image: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | {
                __typename?: 'largeImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                focalPoint?: Array<number | null> | null;
                src?: string | null;
              }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | {
                __typename?: 'videos_Asset';
                title?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | null
          >;
          mobileImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'featureImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'largeImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'svgIcons_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'videos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | null
          >;
        } | null>;
        contentBlocks: Array<
          | {
              __typename?: 'contentBlocks_calculator_BlockType';
              id?: string | null;
              inputText?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_columnLayout_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              columnSectionLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | {
                    __typename?: 'columnSectionLayouts_default_Entry';
                    id?: string | null;
                    columnRatio?: string | null;
                    columnNumber?: string | null;
                    columnAlignment?: string | null;
                    columnBlocks: Array<
                      | {
                          __typename?: 'columnBlocks_asset_BlockType';
                          id?: string | null;
                          image: Array<
                            | {
                                __typename?: 'contentImages_Asset';
                                title?: string | null;
                                alt?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | { __typename?: 'featureImages_Asset' }
                            | { __typename?: 'largeImages_Asset' }
                            | { __typename?: 'logos_Asset' }
                            | { __typename?: 'svgIcons_Asset' }
                            | {
                                __typename?: 'videos_Asset';
                                title?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_data_BlockType';
                          id?: string | null;
                          dataValue?: string | null;
                          indicatorWidth?: any | null;
                          statistic?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_faqs_BlockType';
                          id?: string | null;
                          items: Array<
                            | { __typename?: 'articles_default_Entry' }
                            | { __typename?: 'caseStudies_default_Entry' }
                            | {
                                __typename?: 'columnSectionLayouts_default_Entry';
                              }
                            | {
                                __typename?: 'faqs_default_Entry';
                                title?: string | null;
                                content?: string | null;
                              }
                            | { __typename?: 'homepage_homepage_Entry' }
                            | {
                                __typename?: 'informationGridLayouts_default_Entry';
                              }
                            | { __typename?: 'linkList_default_Entry' }
                            | { __typename?: 'navigationBlocks_default_Entry' }
                            | { __typename?: 'pages_default_Entry' }
                            | { __typename?: 'resources_resources_Entry' }
                            | { __typename?: 'testimonials_default_Entry' }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_form_BlockType';
                          id?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          form?: Array<
                            | {
                                __typename?: 'enquiryForm_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'productGuide_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'resourcesSearchForm_Form';
                                handle?: string | null;
                              }
                            | null
                          > | null;
                        }
                      | {
                          __typename?: 'columnBlocks_quote_BlockType';
                          id?: string | null;
                          quote?: string | null;
                          reference?: string | null;
                          size?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_redactor_BlockType';
                          id?: string | null;
                          label?: string | null;
                          redactor?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          buttons: Array<{
                            __typename?: 'buttons_BlockType';
                            button?: {
                              __typename?: 'linkField_Link';
                              ariaLabel?: string | null;
                              target?: string | null;
                              title?: string | null;
                              type?: string | null;
                              label?: string | null;
                              href?: string | null;
                            } | null;
                          } | null>;
                        }
                      | null
                    >;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        label?: string | null;
                        href?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_entriesCarousel_BlockType';
              id?: string | null;
              sectionType?: Array<string | null> | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              categories: Array<
                | { __typename?: 'topics_Category'; id?: string | null }
                | { __typename?: 'types_Category'; id?: string | null }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_faqs_BlockType';
              id?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              items: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | {
                    __typename?: 'faqs_default_Entry';
                    title?: string | null;
                    content?: string | null;
                  }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_form_BlockType';
              id?: string | null;
              sectionBackground?: string | null;
              redactor?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              form?: Array<
                | { __typename?: 'enquiryForm_Form'; handle?: string | null }
                | { __typename?: 'productGuide_Form'; handle?: string | null }
                | {
                    __typename?: 'resourcesSearchForm_Form';
                    handle?: string | null;
                  }
                | null
              > | null;
            }
          | {
              __typename?: 'contentBlocks_fullWidthSection_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              content: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | {
                    __typename?: 'linkList_default_Entry';
                    id?: string | null;
                    linkList: Array<{
                      __typename?: 'linkList_BlockType';
                      link?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_informationGridLayout_BlockType';
              id?: string | null;
              asCards?: boolean | null;
              asSlider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              informationGridLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | {
                    __typename?: 'informationGridLayouts_default_Entry';
                    id?: string | null;
                    informationGridBlocks: Array<{
                      __typename?: 'informationGridBlocks_block_BlockType';
                      id?: string | null;
                      blockTitle?: string | null;
                      blockSubtitle?: string | null;
                      blockContent?: string | null;
                      icon: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | { __typename?: 'logos_Asset' }
                        | {
                            __typename?: 'svgIcons_Asset';
                            title?: string | null;
                            url?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            ariaHidden?: boolean | null;
                          }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      blockLink?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_largeImage_BlockType';
              id?: string | null;
              image: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | {
                    __typename?: 'largeImages_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'logos_Asset' }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_logoCarousel_BlockType';
              id?: string | null;
              title?: string | null;
              images: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    id?: string | null;
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    ariaHidden?: boolean | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_quote_BlockType';
              id?: string | null;
              quote?: string | null;
              reference?: string | null;
              size?: string | null;
            }
          | {
              __typename?: 'contentBlocks_redactor_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              contentWidth?: string | null;
              sectionBackground?: string | null;
              label?: string | null;
              redactor?: string | null;
              logo: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_tabbedContent_BlockType';
              id?: string | null;
              tabs: Array<{
                __typename?: 'tabs_BlockType';
                id?: string | null;
                tabLabel?: string | null;
                title?: string | null;
                content?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
                button?: {
                  __typename?: 'linkField_Link';
                  ariaLabel?: string | null;
                  target?: string | null;
                  text?: string | null;
                  title?: string | null;
                  type?: string | null;
                  href?: string | null;
                } | null;
                image: Array<
                  | {
                      __typename?: 'contentImages_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | { __typename?: 'logos_Asset' }
                  | { __typename?: 'svgIcons_Asset' }
                  | {
                      __typename?: 'videos_Asset';
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
              id?: string | null;
              testimonials: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | {
                    __typename?: 'testimonials_default_Entry';
                    testimonial: Array<{
                      __typename?: 'testimonial_BlockType';
                      id?: string | null;
                      quote?: string | null;
                      reference?: string | null;
                      logo: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | {
                            __typename?: 'logos_Asset';
                            title?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            src?: string | null;
                          }
                        | { __typename?: 'svgIcons_Asset' }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        href?: string | null;
                        label?: string | null;
                      } | null;
                    } | null>;
                  }
                | null
              >;
            }
          | null
        >;
      }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null;
};

export type GetMainNavigationQueryVariables = Exact<{ [key: string]: never }>;

export type GetMainNavigationQuery = {
  __typename?: 'Query';
  navigationNodes?: Array<
    | { __typename?: 'footerNavigation_Node' }
    | { __typename?: 'footerSubNavigation_Node' }
    | {
        __typename?: 'mainNavigation_Node';
        id?: string | null;
        title?: string | null;
        url?: string | null;
        newWindow?: string | null;
        typeLabel?: string | null;
        plainText?: string | null;
        element?:
          | { __typename?: 'Address'; uri?: string | null }
          | { __typename?: 'Element'; uri?: string | null }
          | { __typename?: 'User'; uri?: string | null }
          | { __typename?: 'articleHero_hero_BlockType'; uri?: string | null }
          | { __typename?: 'articleTags_Tag'; uri?: string | null }
          | { __typename?: 'articles_default_Entry'; uri?: string | null }
          | { __typename?: 'buttonGroup_BlockType'; uri?: string | null }
          | { __typename?: 'buttons_BlockType'; uri?: string | null }
          | { __typename?: 'caseStudies_default_Entry'; uri?: string | null }
          | { __typename?: 'columnBlocks_asset_BlockType'; uri?: string | null }
          | { __typename?: 'columnBlocks_data_BlockType'; uri?: string | null }
          | { __typename?: 'columnBlocks_faqs_BlockType'; uri?: string | null }
          | { __typename?: 'columnBlocks_form_BlockType'; uri?: string | null }
          | { __typename?: 'columnBlocks_quote_BlockType'; uri?: string | null }
          | {
              __typename?: 'columnBlocks_redactor_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'columnSectionLayouts_default_Entry';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_calculator_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_columnLayout_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_entriesCarousel_BlockType';
              uri?: string | null;
            }
          | { __typename?: 'contentBlocks_faqs_BlockType'; uri?: string | null }
          | { __typename?: 'contentBlocks_form_BlockType'; uri?: string | null }
          | {
              __typename?: 'contentBlocks_fullWidthSection_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_informationGridLayout_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_largeImage_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_logoCarousel_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_quote_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_redactor_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_tabbedContent_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
              uri?: string | null;
            }
          | { __typename?: 'contentImages_Asset'; uri?: string | null }
          | { __typename?: 'enquiryForm_Form'; uri?: string | null }
          | { __typename?: 'enquiryForm_Submission'; uri?: string | null }
          | { __typename?: 'faqs_default_Entry'; uri?: string | null }
          | { __typename?: 'featureImages_Asset'; uri?: string | null }
          | { __typename?: 'footerNavigation_Node'; uri?: string | null }
          | { __typename?: 'footerSubNavigation_Node'; uri?: string | null }
          | { __typename?: 'footer_GlobalSet'; uri?: string | null }
          | { __typename?: 'header_GlobalSet'; uri?: string | null }
          | { __typename?: 'heroButtons_BlockType'; uri?: string | null }
          | { __typename?: 'hero_hero_BlockType'; uri?: string | null }
          | { __typename?: 'homepage_homepage_Entry'; uri?: string | null }
          | {
              __typename?: 'informationGridBlocks_block_BlockType';
              uri?: string | null;
            }
          | {
              __typename?: 'informationGridLayouts_default_Entry';
              uri?: string | null;
            }
          | { __typename?: 'largeImages_Asset'; uri?: string | null }
          | { __typename?: 'linkList_BlockType'; uri?: string | null }
          | { __typename?: 'linkList_default_Entry'; uri?: string | null }
          | { __typename?: 'logos_Asset'; uri?: string | null }
          | { __typename?: 'mainNavigation_Node'; uri?: string | null }
          | {
              __typename?: 'navigationBlocks_default_Entry';
              uri?: string | null;
            }
          | { __typename?: 'pages_default_Entry'; uri?: string | null }
          | { __typename?: 'productGuide_Form'; uri?: string | null }
          | { __typename?: 'productGuide_Submission'; uri?: string | null }
          | { __typename?: 'resourcesSearchForm_Form'; uri?: string | null }
          | {
              __typename?: 'resourcesSearchForm_Submission';
              uri?: string | null;
            }
          | { __typename?: 'resources_resources_Entry'; uri?: string | null }
          | { __typename?: 'sectionTitles_BlockType'; uri?: string | null }
          | { __typename?: 'socialLinks_BlockType'; uri?: string | null }
          | { __typename?: 'socialSharing_BlockType'; uri?: string | null }
          | { __typename?: 'svgIcons_Asset'; uri?: string | null }
          | { __typename?: 'tabs_BlockType'; uri?: string | null }
          | { __typename?: 'testimonial_BlockType'; uri?: string | null }
          | { __typename?: 'testimonials_default_Entry'; uri?: string | null }
          | { __typename?: 'topics_Category'; uri?: string | null }
          | { __typename?: 'types_Category'; uri?: string | null }
          | { __typename?: 'videos_Asset'; uri?: string | null }
          | null;
        children?: Array<
          | { __typename?: 'footerNavigation_Node' }
          | { __typename?: 'footerSubNavigation_Node' }
          | {
              __typename?: 'mainNavigation_Node';
              id?: string | null;
              title?: string | null;
              url?: string | null;
              newWindow?: string | null;
              plainText?: string | null;
              element?:
                | { __typename: 'Address'; uri?: string | null }
                | { __typename: 'Element'; uri?: string | null }
                | { __typename: 'User'; uri?: string | null }
                | {
                    __typename: 'articleHero_hero_BlockType';
                    uri?: string | null;
                  }
                | { __typename: 'articleTags_Tag'; uri?: string | null }
                | { __typename: 'articles_default_Entry'; uri?: string | null }
                | { __typename: 'buttonGroup_BlockType'; uri?: string | null }
                | { __typename: 'buttons_BlockType'; uri?: string | null }
                | {
                    __typename: 'caseStudies_default_Entry';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnBlocks_asset_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnBlocks_data_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnBlocks_faqs_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnBlocks_form_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnBlocks_quote_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnBlocks_redactor_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'columnSectionLayouts_default_Entry';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_calculator_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_columnLayout_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_entriesCarousel_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_faqs_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_form_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_fullWidthSection_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_informationGridLayout_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_largeImage_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_logoCarousel_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_quote_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_redactor_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_tabbedContent_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'contentBlocks_testimonialsCarousel_BlockType';
                    uri?: string | null;
                  }
                | { __typename: 'contentImages_Asset'; uri?: string | null }
                | { __typename: 'enquiryForm_Form'; uri?: string | null }
                | { __typename: 'enquiryForm_Submission'; uri?: string | null }
                | { __typename: 'faqs_default_Entry'; uri?: string | null }
                | { __typename: 'featureImages_Asset'; uri?: string | null }
                | { __typename: 'footerNavigation_Node'; uri?: string | null }
                | {
                    __typename: 'footerSubNavigation_Node';
                    uri?: string | null;
                  }
                | { __typename: 'footer_GlobalSet'; uri?: string | null }
                | { __typename: 'header_GlobalSet'; uri?: string | null }
                | { __typename: 'heroButtons_BlockType'; uri?: string | null }
                | { __typename: 'hero_hero_BlockType'; uri?: string | null }
                | { __typename: 'homepage_homepage_Entry'; uri?: string | null }
                | {
                    __typename: 'informationGridBlocks_block_BlockType';
                    uri?: string | null;
                  }
                | {
                    __typename: 'informationGridLayouts_default_Entry';
                    uri?: string | null;
                  }
                | { __typename: 'largeImages_Asset'; uri?: string | null }
                | { __typename: 'linkList_BlockType'; uri?: string | null }
                | { __typename: 'linkList_default_Entry'; uri?: string | null }
                | { __typename: 'logos_Asset'; uri?: string | null }
                | { __typename: 'mainNavigation_Node'; uri?: string | null }
                | {
                    __typename: 'navigationBlocks_default_Entry';
                    plainText?: string | null;
                    uri?: string | null;
                    linkType?: {
                      __typename?: 'linkField_Link';
                      url?: string | null;
                      text?: string | null;
                    } | null;
                  }
                | { __typename: 'pages_default_Entry'; uri?: string | null }
                | { __typename: 'productGuide_Form'; uri?: string | null }
                | { __typename: 'productGuide_Submission'; uri?: string | null }
                | {
                    __typename: 'resourcesSearchForm_Form';
                    uri?: string | null;
                  }
                | {
                    __typename: 'resourcesSearchForm_Submission';
                    uri?: string | null;
                  }
                | {
                    __typename: 'resources_resources_Entry';
                    uri?: string | null;
                  }
                | { __typename: 'sectionTitles_BlockType'; uri?: string | null }
                | { __typename: 'socialLinks_BlockType'; uri?: string | null }
                | { __typename: 'socialSharing_BlockType'; uri?: string | null }
                | { __typename: 'svgIcons_Asset'; uri?: string | null }
                | { __typename: 'tabs_BlockType'; uri?: string | null }
                | { __typename: 'testimonial_BlockType'; uri?: string | null }
                | {
                    __typename: 'testimonials_default_Entry';
                    uri?: string | null;
                  }
                | { __typename: 'topics_Category'; uri?: string | null }
                | { __typename: 'types_Category'; uri?: string | null }
                | { __typename: 'videos_Asset'; uri?: string | null }
                | null;
              children?: Array<
                | { __typename?: 'footerNavigation_Node' }
                | { __typename?: 'footerSubNavigation_Node' }
                | {
                    __typename?: 'mainNavigation_Node';
                    id?: string | null;
                    title?: string | null;
                    url?: string | null;
                    newWindow?: string | null;
                    plainText?: string | null;
                    element?:
                      | { __typename?: 'Address'; uri?: string | null }
                      | { __typename?: 'Element'; uri?: string | null }
                      | { __typename?: 'User'; uri?: string | null }
                      | {
                          __typename?: 'articleHero_hero_BlockType';
                          uri?: string | null;
                        }
                      | { __typename?: 'articleTags_Tag'; uri?: string | null }
                      | {
                          __typename?: 'articles_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'buttonGroup_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'buttons_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'caseStudies_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_asset_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_data_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_faqs_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_form_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_quote_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_redactor_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'columnSectionLayouts_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_calculator_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_columnLayout_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_entriesCarousel_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_faqs_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_form_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_fullWidthSection_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_informationGridLayout_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_largeImage_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_logoCarousel_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_quote_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_redactor_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_tabbedContent_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'contentImages_Asset';
                          uri?: string | null;
                        }
                      | { __typename?: 'enquiryForm_Form'; uri?: string | null }
                      | {
                          __typename?: 'enquiryForm_Submission';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'faqs_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'featureImages_Asset';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'footerNavigation_Node';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'footerSubNavigation_Node';
                          uri?: string | null;
                        }
                      | { __typename?: 'footer_GlobalSet'; uri?: string | null }
                      | { __typename?: 'header_GlobalSet'; uri?: string | null }
                      | {
                          __typename?: 'heroButtons_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'hero_hero_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'homepage_homepage_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'informationGridBlocks_block_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'informationGridLayouts_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'largeImages_Asset';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'linkList_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'linkList_default_Entry';
                          uri?: string | null;
                        }
                      | { __typename?: 'logos_Asset'; uri?: string | null }
                      | {
                          __typename?: 'mainNavigation_Node';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'navigationBlocks_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'pages_default_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'productGuide_Form';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'productGuide_Submission';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'resourcesSearchForm_Form';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'resourcesSearchForm_Submission';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'resources_resources_Entry';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'sectionTitles_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'socialLinks_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'socialSharing_BlockType';
                          uri?: string | null;
                        }
                      | { __typename?: 'svgIcons_Asset'; uri?: string | null }
                      | { __typename?: 'tabs_BlockType'; uri?: string | null }
                      | {
                          __typename?: 'testimonial_BlockType';
                          uri?: string | null;
                        }
                      | {
                          __typename?: 'testimonials_default_Entry';
                          uri?: string | null;
                        }
                      | { __typename?: 'topics_Category'; uri?: string | null }
                      | { __typename?: 'types_Category'; uri?: string | null }
                      | { __typename?: 'videos_Asset'; uri?: string | null }
                      | null;
                  }
                | null
              > | null;
            }
          | null
        > | null;
      }
    | null
  > | null;
};

export type GetPageContentBySectionQueryVariables = Exact<{
  section?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
}>;

export type GetPageContentBySectionQuery = {
  __typename?: 'Query';
  entries?: Array<
    | { __typename?: 'articles_default_Entry'; title?: string | null }
    | { __typename?: 'caseStudies_default_Entry'; title?: string | null }
    | {
        __typename?: 'columnSectionLayouts_default_Entry';
        title?: string | null;
      }
    | { __typename?: 'faqs_default_Entry'; title?: string | null }
    | { __typename?: 'homepage_homepage_Entry'; title?: string | null }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        title?: string | null;
      }
    | { __typename?: 'linkList_default_Entry'; title?: string | null }
    | { __typename?: 'navigationBlocks_default_Entry'; title?: string | null }
    | { __typename?: 'pages_default_Entry'; title?: string | null }
    | { __typename?: 'resources_resources_Entry'; title?: string | null }
    | { __typename?: 'testimonials_default_Entry'; title?: string | null }
    | null
  > | null;
};

export type GetPageContentByUriQueryVariables = Exact<{
  uri?: InputMaybe<Array<Scalars['String']> | Scalars['String']>;
}>;

export type GetPageContentByUriQuery = {
  __typename?: 'Query';
  entry?:
    | { __typename?: 'articles_default_Entry' }
    | {
        __typename?: 'caseStudies_default_Entry';
        title?: string | null;
        hero: Array<{
          __typename?: 'hero_hero_BlockType';
          sectionBackground?: string | null;
          label?: string | null;
          title?: string | null;
          redactor?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset'; id?: string | null }
            | { __typename?: 'featureImages_Asset'; id?: string | null }
            | { __typename?: 'largeImages_Asset'; id?: string | null }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                id?: string | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset'; id?: string | null }
            | { __typename?: 'videos_Asset'; id?: string | null }
            | null
          >;
          buttons: Array<{
            __typename?: 'heroButtons_BlockType';
            button?: {
              __typename?: 'linkField_Link';
              ariaLabel?: string | null;
              target?: string | null;
              title?: string | null;
              type?: string | null;
              label?: string | null;
              href?: string | null;
            } | null;
          } | null>;
          contentImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          image: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | {
                __typename?: 'largeImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                focalPoint?: Array<number | null> | null;
                src?: string | null;
              }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | {
                __typename?: 'videos_Asset';
                title?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | null
          >;
          mobileImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'featureImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'largeImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'svgIcons_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'videos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | null
          >;
        } | null>;
        contentBlocks: Array<
          | {
              __typename?: 'contentBlocks_calculator_BlockType';
              id?: string | null;
              inputText?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_columnLayout_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              columnSectionLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | {
                    __typename?: 'columnSectionLayouts_default_Entry';
                    id?: string | null;
                    columnRatio?: string | null;
                    columnNumber?: string | null;
                    columnAlignment?: string | null;
                    columnBlocks: Array<
                      | {
                          __typename?: 'columnBlocks_asset_BlockType';
                          id?: string | null;
                          image: Array<
                            | {
                                __typename?: 'contentImages_Asset';
                                title?: string | null;
                                alt?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | { __typename?: 'featureImages_Asset' }
                            | { __typename?: 'largeImages_Asset' }
                            | { __typename?: 'logos_Asset' }
                            | { __typename?: 'svgIcons_Asset' }
                            | {
                                __typename?: 'videos_Asset';
                                title?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_data_BlockType';
                          id?: string | null;
                          dataValue?: string | null;
                          indicatorWidth?: any | null;
                          statistic?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_faqs_BlockType';
                          id?: string | null;
                          items: Array<
                            | { __typename?: 'articles_default_Entry' }
                            | { __typename?: 'caseStudies_default_Entry' }
                            | {
                                __typename?: 'columnSectionLayouts_default_Entry';
                              }
                            | {
                                __typename?: 'faqs_default_Entry';
                                title?: string | null;
                                content?: string | null;
                              }
                            | { __typename?: 'homepage_homepage_Entry' }
                            | {
                                __typename?: 'informationGridLayouts_default_Entry';
                              }
                            | { __typename?: 'linkList_default_Entry' }
                            | { __typename?: 'navigationBlocks_default_Entry' }
                            | { __typename?: 'pages_default_Entry' }
                            | { __typename?: 'resources_resources_Entry' }
                            | { __typename?: 'testimonials_default_Entry' }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_form_BlockType';
                          id?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          form?: Array<
                            | {
                                __typename?: 'enquiryForm_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'productGuide_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'resourcesSearchForm_Form';
                                handle?: string | null;
                              }
                            | null
                          > | null;
                        }
                      | {
                          __typename?: 'columnBlocks_quote_BlockType';
                          id?: string | null;
                          quote?: string | null;
                          reference?: string | null;
                          size?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_redactor_BlockType';
                          id?: string | null;
                          label?: string | null;
                          redactor?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          buttons: Array<{
                            __typename?: 'buttons_BlockType';
                            button?: {
                              __typename?: 'linkField_Link';
                              ariaLabel?: string | null;
                              target?: string | null;
                              title?: string | null;
                              type?: string | null;
                              label?: string | null;
                              href?: string | null;
                            } | null;
                          } | null>;
                        }
                      | null
                    >;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        label?: string | null;
                        href?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_entriesCarousel_BlockType';
              id?: string | null;
              sectionType?: Array<string | null> | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              categories: Array<
                | { __typename?: 'topics_Category'; id?: string | null }
                | { __typename?: 'types_Category'; id?: string | null }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_faqs_BlockType';
              id?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              items: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | {
                    __typename?: 'faqs_default_Entry';
                    title?: string | null;
                    content?: string | null;
                  }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_form_BlockType';
              id?: string | null;
              sectionBackground?: string | null;
              redactor?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              form?: Array<
                | { __typename?: 'enquiryForm_Form'; handle?: string | null }
                | { __typename?: 'productGuide_Form'; handle?: string | null }
                | {
                    __typename?: 'resourcesSearchForm_Form';
                    handle?: string | null;
                  }
                | null
              > | null;
            }
          | {
              __typename?: 'contentBlocks_fullWidthSection_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              content: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | {
                    __typename?: 'linkList_default_Entry';
                    id?: string | null;
                    linkList: Array<{
                      __typename?: 'linkList_BlockType';
                      link?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_informationGridLayout_BlockType';
              id?: string | null;
              asCards?: boolean | null;
              asSlider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              informationGridLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | {
                    __typename?: 'informationGridLayouts_default_Entry';
                    id?: string | null;
                    informationGridBlocks: Array<{
                      __typename?: 'informationGridBlocks_block_BlockType';
                      id?: string | null;
                      blockTitle?: string | null;
                      blockSubtitle?: string | null;
                      blockContent?: string | null;
                      icon: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | { __typename?: 'logos_Asset' }
                        | {
                            __typename?: 'svgIcons_Asset';
                            title?: string | null;
                            url?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            ariaHidden?: boolean | null;
                          }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      blockLink?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_largeImage_BlockType';
              id?: string | null;
              image: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | {
                    __typename?: 'largeImages_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'logos_Asset' }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_logoCarousel_BlockType';
              id?: string | null;
              title?: string | null;
              images: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    id?: string | null;
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    ariaHidden?: boolean | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_quote_BlockType';
              id?: string | null;
              quote?: string | null;
              reference?: string | null;
              size?: string | null;
            }
          | {
              __typename?: 'contentBlocks_redactor_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              contentWidth?: string | null;
              sectionBackground?: string | null;
              label?: string | null;
              redactor?: string | null;
              logo: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_tabbedContent_BlockType';
              id?: string | null;
              tabs: Array<{
                __typename?: 'tabs_BlockType';
                id?: string | null;
                tabLabel?: string | null;
                title?: string | null;
                content?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
                button?: {
                  __typename?: 'linkField_Link';
                  ariaLabel?: string | null;
                  target?: string | null;
                  text?: string | null;
                  title?: string | null;
                  type?: string | null;
                  href?: string | null;
                } | null;
                image: Array<
                  | {
                      __typename?: 'contentImages_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | { __typename?: 'logos_Asset' }
                  | { __typename?: 'svgIcons_Asset' }
                  | {
                      __typename?: 'videos_Asset';
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
              id?: string | null;
              testimonials: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | {
                    __typename?: 'testimonials_default_Entry';
                    testimonial: Array<{
                      __typename?: 'testimonial_BlockType';
                      id?: string | null;
                      quote?: string | null;
                      reference?: string | null;
                      logo: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | {
                            __typename?: 'logos_Asset';
                            title?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            src?: string | null;
                          }
                        | { __typename?: 'svgIcons_Asset' }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        href?: string | null;
                        label?: string | null;
                      } | null;
                    } | null>;
                  }
                | null
              >;
            }
          | null
        >;
      }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | {
        __typename?: 'pages_default_Entry';
        title?: string | null;
        hero: Array<{
          __typename?: 'hero_hero_BlockType';
          sectionBackground?: string | null;
          label?: string | null;
          title?: string | null;
          redactor?: string | null;
          logo: Array<
            | { __typename?: 'contentImages_Asset'; id?: string | null }
            | { __typename?: 'featureImages_Asset'; id?: string | null }
            | { __typename?: 'largeImages_Asset'; id?: string | null }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                id?: string | null;
                src?: string | null;
              }
            | { __typename?: 'svgIcons_Asset'; id?: string | null }
            | { __typename?: 'videos_Asset'; id?: string | null }
            | null
          >;
          buttons: Array<{
            __typename?: 'heroButtons_BlockType';
            button?: {
              __typename?: 'linkField_Link';
              ariaLabel?: string | null;
              target?: string | null;
              title?: string | null;
              type?: string | null;
              label?: string | null;
              href?: string | null;
            } | null;
          } | null>;
          contentImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
          image: Array<
            | { __typename?: 'contentImages_Asset' }
            | { __typename?: 'featureImages_Asset' }
            | {
                __typename?: 'largeImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                focalPoint?: Array<number | null> | null;
                src?: string | null;
              }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | {
                __typename?: 'videos_Asset';
                title?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | null
          >;
          mobileImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'featureImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'largeImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'logos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'svgIcons_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | {
                __typename?: 'videos_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | null
          >;
        } | null>;
        contentBlocks: Array<
          | {
              __typename?: 'contentBlocks_calculator_BlockType';
              id?: string | null;
              inputText?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_columnLayout_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              columnSectionLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | {
                    __typename?: 'columnSectionLayouts_default_Entry';
                    id?: string | null;
                    columnRatio?: string | null;
                    columnNumber?: string | null;
                    columnAlignment?: string | null;
                    columnBlocks: Array<
                      | {
                          __typename?: 'columnBlocks_asset_BlockType';
                          id?: string | null;
                          image: Array<
                            | {
                                __typename?: 'contentImages_Asset';
                                title?: string | null;
                                alt?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | { __typename?: 'featureImages_Asset' }
                            | { __typename?: 'largeImages_Asset' }
                            | { __typename?: 'logos_Asset' }
                            | { __typename?: 'svgIcons_Asset' }
                            | {
                                __typename?: 'videos_Asset';
                                title?: string | null;
                                width?: number | null;
                                height?: number | null;
                                src?: string | null;
                              }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_data_BlockType';
                          id?: string | null;
                          dataValue?: string | null;
                          indicatorWidth?: any | null;
                          statistic?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_faqs_BlockType';
                          id?: string | null;
                          items: Array<
                            | { __typename?: 'articles_default_Entry' }
                            | { __typename?: 'caseStudies_default_Entry' }
                            | {
                                __typename?: 'columnSectionLayouts_default_Entry';
                              }
                            | {
                                __typename?: 'faqs_default_Entry';
                                title?: string | null;
                                content?: string | null;
                              }
                            | { __typename?: 'homepage_homepage_Entry' }
                            | {
                                __typename?: 'informationGridLayouts_default_Entry';
                              }
                            | { __typename?: 'linkList_default_Entry' }
                            | { __typename?: 'navigationBlocks_default_Entry' }
                            | { __typename?: 'pages_default_Entry' }
                            | { __typename?: 'resources_resources_Entry' }
                            | { __typename?: 'testimonials_default_Entry' }
                            | null
                          >;
                        }
                      | {
                          __typename?: 'columnBlocks_form_BlockType';
                          id?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          form?: Array<
                            | {
                                __typename?: 'enquiryForm_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'productGuide_Form';
                                handle?: string | null;
                              }
                            | {
                                __typename?: 'resourcesSearchForm_Form';
                                handle?: string | null;
                              }
                            | null
                          > | null;
                        }
                      | {
                          __typename?: 'columnBlocks_quote_BlockType';
                          id?: string | null;
                          quote?: string | null;
                          reference?: string | null;
                          size?: string | null;
                        }
                      | {
                          __typename?: 'columnBlocks_redactor_BlockType';
                          id?: string | null;
                          label?: string | null;
                          redactor?: string | null;
                          sectionTitles: Array<{
                            __typename?: 'sectionTitles_BlockType';
                            label?: string | null;
                            title?: string | null;
                            subtitle?: string | null;
                            logo: Array<
                              | { __typename?: 'contentImages_Asset' }
                              | { __typename?: 'featureImages_Asset' }
                              | { __typename?: 'largeImages_Asset' }
                              | {
                                  __typename?: 'logos_Asset';
                                  title?: string | null;
                                  alt?: string | null;
                                  width?: number | null;
                                  height?: number | null;
                                  src?: string | null;
                                }
                              | { __typename?: 'svgIcons_Asset' }
                              | { __typename?: 'videos_Asset' }
                              | null
                            >;
                          } | null>;
                          buttons: Array<{
                            __typename?: 'buttons_BlockType';
                            button?: {
                              __typename?: 'linkField_Link';
                              ariaLabel?: string | null;
                              target?: string | null;
                              title?: string | null;
                              type?: string | null;
                              label?: string | null;
                              href?: string | null;
                            } | null;
                          } | null>;
                        }
                      | null
                    >;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        label?: string | null;
                        href?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_entriesCarousel_BlockType';
              id?: string | null;
              sectionType?: Array<string | null> | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              categories: Array<
                | { __typename?: 'topics_Category'; id?: string | null }
                | { __typename?: 'types_Category'; id?: string | null }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_faqs_BlockType';
              id?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              items: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | {
                    __typename?: 'faqs_default_Entry';
                    title?: string | null;
                    content?: string | null;
                  }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_form_BlockType';
              id?: string | null;
              sectionBackground?: string | null;
              redactor?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              form?: Array<
                | { __typename?: 'enquiryForm_Form'; handle?: string | null }
                | { __typename?: 'productGuide_Form'; handle?: string | null }
                | {
                    __typename?: 'resourcesSearchForm_Form';
                    handle?: string | null;
                  }
                | null
              > | null;
            }
          | {
              __typename?: 'contentBlocks_fullWidthSection_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              content: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | {
                    __typename?: 'linkList_default_Entry';
                    id?: string | null;
                    linkList: Array<{
                      __typename?: 'linkList_BlockType';
                      link?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_informationGridLayout_BlockType';
              id?: string | null;
              asCards?: boolean | null;
              asSlider?: boolean | null;
              sectionBackground?: string | null;
              sectionTitles: Array<{
                __typename?: 'sectionTitles_BlockType';
                label?: string | null;
                title?: string | null;
                subtitle?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      title?: string | null;
                      alt?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
              } | null>;
              informationGridLayout: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | {
                    __typename?: 'informationGridLayouts_default_Entry';
                    id?: string | null;
                    informationGridBlocks: Array<{
                      __typename?: 'informationGridBlocks_block_BlockType';
                      id?: string | null;
                      blockTitle?: string | null;
                      blockSubtitle?: string | null;
                      blockContent?: string | null;
                      icon: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | { __typename?: 'logos_Asset' }
                        | {
                            __typename?: 'svgIcons_Asset';
                            title?: string | null;
                            url?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            ariaHidden?: boolean | null;
                          }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      blockLink?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                    buttonGroup: Array<{
                      __typename?: 'buttonGroup_BlockType';
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        text?: string | null;
                        title?: string | null;
                        type?: string | null;
                        url?: string | null;
                      } | null;
                    } | null>;
                  }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | { __typename?: 'testimonials_default_Entry' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_largeImage_BlockType';
              id?: string | null;
              image: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | {
                    __typename?: 'largeImages_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'logos_Asset' }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_logoCarousel_BlockType';
              id?: string | null;
              title?: string | null;
              images: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    id?: string | null;
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    ariaHidden?: boolean | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_quote_BlockType';
              id?: string | null;
              quote?: string | null;
              reference?: string | null;
              size?: string | null;
            }
          | {
              __typename?: 'contentBlocks_redactor_BlockType';
              id?: string | null;
              showDivider?: boolean | null;
              contentWidth?: string | null;
              sectionBackground?: string | null;
              label?: string | null;
              redactor?: string | null;
              logo: Array<
                | { __typename?: 'contentImages_Asset' }
                | { __typename?: 'featureImages_Asset' }
                | { __typename?: 'largeImages_Asset' }
                | {
                    __typename?: 'logos_Asset';
                    title?: string | null;
                    alt?: string | null;
                    width?: number | null;
                    height?: number | null;
                    src?: string | null;
                  }
                | { __typename?: 'svgIcons_Asset' }
                | { __typename?: 'videos_Asset' }
                | null
              >;
            }
          | {
              __typename?: 'contentBlocks_tabbedContent_BlockType';
              id?: string | null;
              tabs: Array<{
                __typename?: 'tabs_BlockType';
                id?: string | null;
                tabLabel?: string | null;
                title?: string | null;
                content?: string | null;
                logo: Array<
                  | { __typename?: 'contentImages_Asset' }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | {
                      __typename?: 'logos_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'svgIcons_Asset' }
                  | { __typename?: 'videos_Asset' }
                  | null
                >;
                button?: {
                  __typename?: 'linkField_Link';
                  ariaLabel?: string | null;
                  target?: string | null;
                  text?: string | null;
                  title?: string | null;
                  type?: string | null;
                  href?: string | null;
                } | null;
                image: Array<
                  | {
                      __typename?: 'contentImages_Asset';
                      alt?: string | null;
                      title?: string | null;
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | { __typename?: 'featureImages_Asset' }
                  | { __typename?: 'largeImages_Asset' }
                  | { __typename?: 'logos_Asset' }
                  | { __typename?: 'svgIcons_Asset' }
                  | {
                      __typename?: 'videos_Asset';
                      width?: number | null;
                      height?: number | null;
                      src?: string | null;
                    }
                  | null
                >;
              } | null>;
            }
          | {
              __typename?: 'contentBlocks_testimonialsCarousel_BlockType';
              id?: string | null;
              testimonials: Array<
                | { __typename?: 'articles_default_Entry' }
                | { __typename?: 'caseStudies_default_Entry' }
                | { __typename?: 'columnSectionLayouts_default_Entry' }
                | { __typename?: 'faqs_default_Entry' }
                | { __typename?: 'homepage_homepage_Entry' }
                | { __typename?: 'informationGridLayouts_default_Entry' }
                | { __typename?: 'linkList_default_Entry' }
                | { __typename?: 'navigationBlocks_default_Entry' }
                | { __typename?: 'pages_default_Entry' }
                | { __typename?: 'resources_resources_Entry' }
                | {
                    __typename?: 'testimonials_default_Entry';
                    testimonial: Array<{
                      __typename?: 'testimonial_BlockType';
                      id?: string | null;
                      quote?: string | null;
                      reference?: string | null;
                      logo: Array<
                        | { __typename?: 'contentImages_Asset' }
                        | { __typename?: 'featureImages_Asset' }
                        | { __typename?: 'largeImages_Asset' }
                        | {
                            __typename?: 'logos_Asset';
                            title?: string | null;
                            alt?: string | null;
                            width?: number | null;
                            height?: number | null;
                            src?: string | null;
                          }
                        | { __typename?: 'svgIcons_Asset' }
                        | { __typename?: 'videos_Asset' }
                        | null
                      >;
                      button?: {
                        __typename?: 'linkField_Link';
                        ariaLabel?: string | null;
                        target?: string | null;
                        title?: string | null;
                        type?: string | null;
                        href?: string | null;
                        label?: string | null;
                      } | null;
                    } | null>;
                  }
                | null
              >;
            }
          | null
        >;
      }
    | { __typename?: 'resources_resources_Entry' }
    | { __typename?: 'testimonials_default_Entry' }
    | null;
};

export type GetPageRoutesQueryVariables = Exact<{ [key: string]: never }>;

export type GetPageRoutesQuery = {
  __typename?: 'Query';
  entries?: Array<
    | { __typename?: 'articles_default_Entry'; uri?: string | null }
    | { __typename?: 'caseStudies_default_Entry'; uri?: string | null }
    | { __typename?: 'columnSectionLayouts_default_Entry'; uri?: string | null }
    | { __typename?: 'faqs_default_Entry'; uri?: string | null }
    | { __typename?: 'homepage_homepage_Entry'; uri?: string | null }
    | {
        __typename?: 'informationGridLayouts_default_Entry';
        uri?: string | null;
      }
    | { __typename?: 'linkList_default_Entry'; uri?: string | null }
    | { __typename?: 'navigationBlocks_default_Entry'; uri?: string | null }
    | { __typename?: 'pages_default_Entry'; uri?: string | null }
    | { __typename?: 'resources_resources_Entry'; uri?: string | null }
    | { __typename?: 'testimonials_default_Entry'; uri?: string | null }
    | null
  > | null;
};


export type GetCaseStudiesQuery = {
  __typename?: 'Query';
  entries?: Array<
    | { __typename?: 'caseStudies_default_Entry'; uri?: string | null }
    | null
  > | null;
};

export type GetResourcesContentQueryVariables = Exact<{ [key: string]: never }>;

export type GetResourcesContentQuery = {
  __typename?: 'Query';
  entry?:
    | { __typename?: 'articles_default_Entry' }
    | { __typename?: 'caseStudies_default_Entry' }
    | { __typename?: 'columnSectionLayouts_default_Entry' }
    | { __typename?: 'faqs_default_Entry' }
    | { __typename?: 'homepage_homepage_Entry' }
    | { __typename?: 'informationGridLayouts_default_Entry' }
    | { __typename?: 'linkList_default_Entry' }
    | { __typename?: 'navigationBlocks_default_Entry' }
    | { __typename?: 'pages_default_Entry' }
    | {
        __typename?: 'resources_resources_Entry';
        articleHero: Array<{
          __typename?: 'articleHero_hero_BlockType';
          label?: string | null;
          title?: string | null;
          redactor?: string | null;
          contentImage: Array<
            | {
                __typename?: 'contentImages_Asset';
                title?: string | null;
                alt?: string | null;
                width?: number | null;
                height?: number | null;
                src?: string | null;
              }
            | { __typename?: 'featureImages_Asset' }
            | { __typename?: 'largeImages_Asset' }
            | { __typename?: 'logos_Asset' }
            | { __typename?: 'svgIcons_Asset' }
            | { __typename?: 'videos_Asset' }
            | null
          >;
        } | null>;
      }
    | { __typename?: 'testimonials_default_Entry' }
    | null;
  topics?: Array<
    | {
        __typename?: 'topics_Category';
        id?: string | null;
        slug?: string | null;
        title?: string | null;
      }
    | {
        __typename?: 'types_Category';
        id?: string | null;
        slug?: string | null;
        title?: string | null;
      }
    | null
  > | null;
  types?: Array<
    | {
        __typename?: 'topics_Category';
        id?: string | null;
        slug?: string | null;
        title?: string | null;
      }
    | {
        __typename?: 'types_Category';
        id?: string | null;
        slug?: string | null;
        title?: string | null;
      }
    | null
  > | null;
};

export type GetSeomaticQueryVariables = Exact<{
  uri?: InputMaybe<Scalars['String']>;
}>;

export type GetSeomaticQuery = {
  __typename?: 'Query';
  seomatic?: {
    __typename?: 'SeomaticType';
    metaTitleContainer?: string | null;
    metaTagContainer?: string | null;
    metaLinkContainer?: string | null;
    metaScriptContainer?: string | null;
    metaJsonLdContainer?: string | null;
    metaSiteVarsContainer?: string | null;
  } | null;
};

export const ArticleHeroFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ArticleHero' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'articleHero_hero_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'label' },
            name: { kind: 'Name', value: 'heroLabel' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'title' },
            name: { kind: 'Name', value: 'heroTitle' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'redactor' },
            name: { kind: 'Name', value: 'heroContent' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'contentImage' },
            name: { kind: 'Name', value: 'heroContentImage' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'contentImages_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ArticleHeroFragment, unknown>;
export const FieldFragmentFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FieldFragment' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FieldInterface' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'name' } },
          { kind: 'Field', name: { kind: 'Name', value: 'handle' } },
          { kind: 'Field', name: { kind: 'Name', value: 'instructions' } },
          { kind: 'Field', name: { kind: 'Name', value: 'required' } },
          { kind: 'Field', name: { kind: 'Name', value: 'type' } },
          { kind: 'Field', name: { kind: 'Name', value: 'displayName' } },
          { kind: 'Field', name: { kind: 'Name', value: 'typeName' } },
          { kind: 'Field', name: { kind: 'Name', value: 'placeholder' } },
          { kind: 'Field', name: { kind: 'Name', value: 'errorMessage' } },
          { kind: 'Field', name: { kind: 'Name', value: 'labelPosition' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'instructionsPosition' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'cssClasses' } },
          { kind: 'Field', name: { kind: 'Name', value: 'enableConditions' } },
          { kind: 'Field', name: { kind: 'Name', value: 'conditions' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'enableContentEncryption' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'visibility' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'inputAttributes' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'label' } },
                { kind: 'Field', name: { kind: 'Name', value: 'value' } },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_Agree' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'defaultState' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'checkedValue' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'uncheckedValue' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'description' } },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_Categories' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'categories' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'slug' } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_Dropdown' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'multi' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'defaultValue' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'options' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'label' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'value' } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_Email' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'defaultValue' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'blockedDomains' },
                },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_MultiLineText' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'defaultValue' },
                },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_Phone' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'defaultValue' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'countryEnabled' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'countryDefaultValue' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'countryShowDialCode' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'countryOptions' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'label' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'value' } },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'InlineFragment',
            typeCondition: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'Field_SingleLineText' },
            },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'defaultValue' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FieldFragmentFragment, unknown>;
export const FormFragmentFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FormFragment' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'FormInterface' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'title' } },
          { kind: 'Field', name: { kind: 'Name', value: 'handle' } },
          { kind: 'Field', name: { kind: 'Name', value: 'siteId' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'csrfToken' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                { kind: 'Field', name: { kind: 'Name', value: 'value' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'captchas' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'handle' } },
                { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                { kind: 'Field', name: { kind: 'Name', value: 'value' } },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'settings' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'submitAction' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'submitActionTab' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'submitActionMessageHtml' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'redirectUrl' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'errorMessageHtml' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'redirectEntry' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'uri' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'slug' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'sectionHandle' },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'pages' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'settings' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'submitButtonLabel' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'backButtonLabel' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'showBackButton' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'buttonsPosition' },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'rows' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'rowFields' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'FieldFragment' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FormFragmentFragment, unknown>;
export const HeroFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Hero' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'hero_hero_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'label' },
            name: { kind: 'Name', value: 'heroLabel' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'logo' },
            name: { kind: 'Name', value: 'heroLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'logos_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'title' },
            name: { kind: 'Name', value: 'heroTitle' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'redactor' },
            name: { kind: 'Name', value: 'heroContent' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'buttons' },
            name: { kind: 'Name', value: 'heroButtons' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'heroButtons_BlockType' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'button' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'ariaLabel' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'target' },
                            },
                            {
                              kind: 'Field',
                              alias: { kind: 'Name', value: 'label' },
                              name: { kind: 'Name', value: 'text' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'type' },
                            },
                            {
                              kind: 'Field',
                              alias: { kind: 'Name', value: 'href' },
                              name: { kind: 'Name', value: 'url' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'contentImage' },
            name: { kind: 'Name', value: 'heroContentImage' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'contentImages_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'image' },
            name: { kind: 'Name', value: 'heroImage' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'largeImages_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'focalPoint' },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'videos_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'mobileImage' },
            name: { kind: 'Name', value: 'heroMobileImage' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                {
                  kind: 'Field',
                  alias: { kind: 'Name', value: 'src' },
                  name: { kind: 'Name', value: 'url' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                { kind: 'Field', name: { kind: 'Name', value: 'height' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<HeroFragment, unknown>;
export const SectionTitlesFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'SectionTitles' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'sectionTitles_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'label' },
            name: { kind: 'Name', value: 'sectionLabel' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'logo' },
            name: { kind: 'Name', value: 'sectionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'logos_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'title' },
            name: { kind: 'Name', value: 'sectionTitle' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'subtitle' },
            name: { kind: 'Name', value: 'sectionSubtitle' },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<SectionTitlesFragment, unknown>;
export const LinkListFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'LinkList' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'linkList_default_Entry' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'linkList' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'linkList_BlockType' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'link' },
                        name: { kind: 'Name', value: 'links' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'ariaLabel' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'target' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'text' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'type' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LinkListFragment, unknown>;
export const FullWidthSectionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FullWidthSection' },
      typeCondition: {
        kind: 'NamedType',
        name: {
          kind: 'Name',
          value: 'contentBlocks_fullWidthSection_BlockType',
        },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'content' },
            name: { kind: 'Name', value: 'fullWidthContent' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'LinkList' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'showDivider' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FullWidthSectionFragment, unknown>;
export const ColumnQuoteFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ColumnQuote' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnBlocks_quote_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'quote' } },
          { kind: 'Field', name: { kind: 'Name', value: 'reference' } },
          { kind: 'Field', name: { kind: 'Name', value: 'size' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ColumnQuoteFragment, unknown>;
export const AssetFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Asset' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnBlocks_asset_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'image' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'contentImages_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'videos_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<AssetFragment, unknown>;
export const RedactorFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Redactor' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnBlocks_redactor_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'label' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'redactor' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'buttons' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'buttons_BlockType' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'button' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'ariaLabel' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'target' },
                            },
                            {
                              kind: 'Field',
                              alias: { kind: 'Name', value: 'label' },
                              name: { kind: 'Name', value: 'text' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'type' },
                            },
                            {
                              kind: 'Field',
                              alias: { kind: 'Name', value: 'href' },
                              name: { kind: 'Name', value: 'url' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<RedactorFragment, unknown>;
export const ColumnFormFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ColumnForm' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnBlocks_form_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'form' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'handle' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ColumnFormFragment, unknown>;
export const FaqsFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Faqs' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnBlocks_faqs_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'items' },
            name: { kind: 'Name', value: 'faqs' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'faqs_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'title' },
                        name: { kind: 'Name', value: 'plainText' },
                      },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'content' },
                        name: { kind: 'Name', value: 'redactor' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FaqsFragment, unknown>;
export const DataFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Data' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnBlocks_data_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'dataValue' } },
          { kind: 'Field', name: { kind: 'Name', value: 'indicatorWidth' } },
          { kind: 'Field', name: { kind: 'Name', value: 'statistic' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<DataFragment, unknown>;
export const ColumnSectionLayoutsFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ColumnSectionLayouts' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'columnSectionLayouts_default_Entry' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'columnBlocks' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'ColumnQuote' },
                },
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Asset' },
                },
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Redactor' },
                },
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'ColumnForm' },
                },
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Faqs' },
                },
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'Data' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'columnRatio' } },
          { kind: 'Field', name: { kind: 'Name', value: 'columnNumber' } },
          { kind: 'Field', name: { kind: 'Name', value: 'columnAlignment' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'buttonGroup' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'buttonGroup_BlockType' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'button' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'linkField_Link' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'ariaLabel' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'target' },
                                  },
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'label' },
                                    name: { kind: 'Name', value: 'text' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'type' },
                                  },
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'href' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ColumnSectionLayoutsFragment, unknown>;
export const ColumnLayoutFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'ColumnLayout' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_columnLayout_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'columnSectionLayout' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'ColumnSectionLayouts' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'showDivider' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<ColumnLayoutFragment, unknown>;
export const InformationGridLayoutsFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'InformationGridLayouts' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'informationGridLayouts_default_Entry' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'informationGridBlocks' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: {
                      kind: 'Name',
                      value: 'informationGridBlocks_block_BlockType',
                    },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'icon' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'svgIcons_Asset' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'alt' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'width' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'height' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'ariaHidden' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'blockTitle' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'blockSubtitle' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'blockContent' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'blockLink' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'ariaLabel' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'target' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'text' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'type' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'buttonGroup' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'buttonGroup_BlockType' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'button' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'linkField_Link' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'ariaLabel' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'target' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'text' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'type' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<InformationGridLayoutsFragment, unknown>;
export const InformationGridLayoutFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'InformationGridLayout' },
      typeCondition: {
        kind: 'NamedType',
        name: {
          kind: 'Name',
          value: 'contentBlocks_informationGridLayout_BlockType',
        },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'informationGridLayout' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'InformationGridLayouts' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'asCards' } },
          { kind: 'Field', name: { kind: 'Name', value: 'asSlider' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<InformationGridLayoutFragment, unknown>;
export const TabbedContentFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'TabbedContent' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_tabbedContent_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'tabs' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'tabs_BlockType' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'tabLabel' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'logo' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'logos_Asset' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'src' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'alt' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'width' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'height' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'title' },
                        name: { kind: 'Name', value: 'tabTitle' },
                      },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'content' },
                        name: { kind: 'Name', value: 'tabContent' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'button' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'linkField_Link' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'ariaLabel' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'target' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'text' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'type' },
                                  },
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'href' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'image' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: {
                                  kind: 'Name',
                                  value: 'contentImages_Asset',
                                },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'src' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'alt' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'width' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'height' },
                                  },
                                ],
                              },
                            },
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'videos_Asset' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'src' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'width' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'height' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<TabbedContentFragment, unknown>;
export const FormFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Form' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_form_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'form' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'handle' } },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'redactor' },
            name: { kind: 'Name', value: 'sectionContent' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FormFragment, unknown>;
export const TestimonialsCarouselFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'TestimonialsCarousel' },
      typeCondition: {
        kind: 'NamedType',
        name: {
          kind: 'Name',
          value: 'contentBlocks_testimonialsCarousel_BlockType',
        },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'testimonials' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'testimonials_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'testimonial' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: {
                                  kind: 'Name',
                                  value: 'testimonial_BlockType',
                                },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'id' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'logo' },
                                    selectionSet: {
                                      kind: 'SelectionSet',
                                      selections: [
                                        {
                                          kind: 'InlineFragment',
                                          typeCondition: {
                                            kind: 'NamedType',
                                            name: {
                                              kind: 'Name',
                                              value: 'logos_Asset',
                                            },
                                          },
                                          selectionSet: {
                                            kind: 'SelectionSet',
                                            selections: [
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'title',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                alias: {
                                                  kind: 'Name',
                                                  value: 'src',
                                                },
                                                name: {
                                                  kind: 'Name',
                                                  value: 'url',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'alt',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'width',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'height',
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'quote' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'reference' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'button' },
                                    selectionSet: {
                                      kind: 'SelectionSet',
                                      selections: [
                                        {
                                          kind: 'Field',
                                          alias: {
                                            kind: 'Name',
                                            value: 'href',
                                          },
                                          name: { kind: 'Name', value: 'url' },
                                        },
                                        {
                                          kind: 'Field',
                                          alias: {
                                            kind: 'Name',
                                            value: 'label',
                                          },
                                          name: { kind: 'Name', value: 'text' },
                                        },
                                        {
                                          kind: 'Field',
                                          name: {
                                            kind: 'Name',
                                            value: 'ariaLabel',
                                          },
                                        },
                                        {
                                          kind: 'Field',
                                          name: {
                                            kind: 'Name',
                                            value: 'target',
                                          },
                                        },
                                        {
                                          kind: 'Field',
                                          name: {
                                            kind: 'Name',
                                            value: 'title',
                                          },
                                        },
                                        {
                                          kind: 'Field',
                                          name: { kind: 'Name', value: 'type' },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<TestimonialsCarouselFragment, unknown>;
export const FaqsSectionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'FaqsSection' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_faqs_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'items' },
            name: { kind: 'Name', value: 'faqs' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'faqs_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'title' },
                        name: { kind: 'Name', value: 'plainText' },
                      },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'content' },
                        name: { kind: 'Name', value: 'redactor' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<FaqsSectionFragment, unknown>;
export const EntriesCarouselFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'EntriesCarousel' },
      typeCondition: {
        kind: 'NamedType',
        name: {
          kind: 'Name',
          value: 'contentBlocks_entriesCarousel_BlockType',
        },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionType' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'categories' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
              ],
            },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<EntriesCarouselFragment, unknown>;
export const LogoCarouselSectionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'LogoCarouselSection' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_logoCarousel_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'title' },
            name: { kind: 'Name', value: 'sectionTitle' },
          },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'images' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'logos_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'ariaHidden' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LogoCarouselSectionFragment, unknown>;
export const RedactorSectionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'RedactorSection' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_redactor_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'label' },
            name: { kind: 'Name', value: 'sectionLabel' },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'logo' },
            name: { kind: 'Name', value: 'sectionLogo' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'logos_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'redactor' },
            name: { kind: 'Name', value: 'redactorContent' },
          },
          { kind: 'Field', name: { kind: 'Name', value: 'showDivider' } },
          { kind: 'Field', name: { kind: 'Name', value: 'contentWidth' } },
          { kind: 'Field', name: { kind: 'Name', value: 'sectionBackground' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<RedactorSectionFragment, unknown>;
export const QuoteSectionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'QuoteSection' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_quote_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'quote' } },
          { kind: 'Field', name: { kind: 'Name', value: 'reference' } },
          { kind: 'Field', name: { kind: 'Name', value: 'size' } },
        ],
      },
    },
  ],
} as unknown as DocumentNode<QuoteSectionFragment, unknown>;
export const LargeImageSectionFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'LargeImageSection' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_largeImage_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'image' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'largeImages_Asset' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'src' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'alt' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'width' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'height' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<LargeImageSectionFragment, unknown>;
export const CalculatorFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'Calculator' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'contentBlocks_calculator_BlockType' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          { kind: 'Field', name: { kind: 'Name', value: 'id' } },
          { kind: 'Field', name: { kind: 'Name', value: 'inputText' } },
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'sectionTitles' },
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'FragmentSpread',
                  name: { kind: 'Name', value: 'SectionTitles' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<CalculatorFragment, unknown>;
export const MatrixBlocksFragmentDoc = {
  kind: 'Document',
  definitions: [
    {
      kind: 'FragmentDefinition',
      name: { kind: 'Name', value: 'MatrixBlocks' },
      typeCondition: {
        kind: 'NamedType',
        name: { kind: 'Name', value: 'MatrixBlockInterface' },
      },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'FullWidthSection' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'ColumnLayout' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'InformationGridLayout' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'TabbedContent' },
          },
          { kind: 'FragmentSpread', name: { kind: 'Name', value: 'Form' } },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'TestimonialsCarousel' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'FaqsSection' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'EntriesCarousel' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'LogoCarouselSection' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'RedactorSection' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'QuoteSection' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'LargeImageSection' },
          },
          {
            kind: 'FragmentSpread',
            name: { kind: 'Name', value: 'Calculator' },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<MatrixBlocksFragment, unknown>;
export const EnquiryFormSubmissionDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'mutation',
      name: { kind: 'Name', value: 'enquiryFormSubmission' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'fullName' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'officialEmail' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'companyName' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'phoneNumber' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'iAmInterestedIn' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'iWorkIn' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'message' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'termsAndConditions' },
          },
          type: {
            kind: 'NonNullType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'save_enquiryForm_Submission' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'fullName' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'fullName' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'officialEmail' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'officialEmail' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'companyName' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'companyName' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'phoneNumber' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'phoneNumber' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'iAmInterestedIn' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'iAmInterestedIn' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'iWorkIn' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'iWorkIn' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'message' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'message' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'termsAndConditions' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'termsAndConditions' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'fullName' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'officialEmail' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'companyName' } },
                { kind: 'Field', name: { kind: 'Name', value: 'phoneNumber' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'iAmInterestedIn' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'iWorkIn' } },
                { kind: 'Field', name: { kind: 'Name', value: 'message' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'termsAndConditions' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  EnquiryFormSubmissionMutation,
  EnquiryFormSubmissionMutationVariables
>;
export const GetArticleContentDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'getArticleContent' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'uri' } },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'String' },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entry' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: { kind: 'StringValue', value: 'articles', block: false },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'uri' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'uri' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'articles_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'postDate' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'articleAuthor' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'articleTags' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'types' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'articleHero' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'ArticleHero' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'contentBlocks' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'MatrixBlocks' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...ArticleHeroFragmentDoc.definitions,
    ...MatrixBlocksFragmentDoc.definitions,
    ...FullWidthSectionFragmentDoc.definitions,
    ...SectionTitlesFragmentDoc.definitions,
    ...LinkListFragmentDoc.definitions,
    ...ColumnLayoutFragmentDoc.definitions,
    ...ColumnSectionLayoutsFragmentDoc.definitions,
    ...ColumnQuoteFragmentDoc.definitions,
    ...AssetFragmentDoc.definitions,
    ...RedactorFragmentDoc.definitions,
    ...ColumnFormFragmentDoc.definitions,
    ...FaqsFragmentDoc.definitions,
    ...DataFragmentDoc.definitions,
    ...InformationGridLayoutFragmentDoc.definitions,
    ...InformationGridLayoutsFragmentDoc.definitions,
    ...TabbedContentFragmentDoc.definitions,
    ...FormFragmentDoc.definitions,
    ...TestimonialsCarouselFragmentDoc.definitions,
    ...FaqsSectionFragmentDoc.definitions,
    ...EntriesCarouselFragmentDoc.definitions,
    ...LogoCarouselSectionFragmentDoc.definitions,
    ...RedactorSectionFragmentDoc.definitions,
    ...QuoteSectionFragmentDoc.definitions,
    ...LargeImageSectionFragmentDoc.definitions,
    ...CalculatorFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetArticleContentQuery,
  GetArticleContentQueryVariables
>;
export const GetEntriesBySectionDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetEntriesBySection' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'section' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'String' },
              },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entries' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'section' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'uri' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'sectionHandle' },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'caseStudies_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'featureImage' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'alt' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'width' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'height' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'shortDescription' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'topics' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'slug' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'articles_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'featureImage' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'alt' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'width' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'height' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'shortDescription' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'topics' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'slug' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'types' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'slug' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetEntriesBySectionQuery,
  GetEntriesBySectionQueryVariables
>;
export const GetEntriesBySectionAndCategoriesDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetEntriesBySectionAndCategories' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'section' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'String' },
              },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'categories' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CategoryCriteriaInput' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entries' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'section' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'relatedToCategories' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'categories' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'uri' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'sectionHandle' },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'caseStudies_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'featureImage' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'alt' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'width' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'height' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'shortDescription' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'topics' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'articles_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'featureImage' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'alt' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'width' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'height' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'shortDescription' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'topics' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'types' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'slug' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetEntriesBySectionAndCategoriesQuery,
  GetEntriesBySectionAndCategoriesQueryVariables
>;
export const GetEntriesBySectionAndCategoriesAndSearchDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: {
        kind: 'Name',
        value: 'GetEntriesBySectionAndCategoriesAndSearch',
      },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'section' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'String' },
              },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'search' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'categories' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'CategoryCriteriaInput' },
            },
          },
        },
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'limit' },
          },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'Int' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entries' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'section' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'search' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'search' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'relatedToCategories' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'categories' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'limit' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'limit' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'uri' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'sectionHandle' },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'caseStudies_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'featureImage' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'alt' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'width' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'height' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'shortDescription' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'topics' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'articles_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'featureImage' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'alt' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'url' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'width' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'height' },
                              directives: [
                                {
                                  kind: 'Directive',
                                  name: { kind: 'Name', value: 'transform' },
                                  arguments: [
                                    {
                                      kind: 'Argument',
                                      name: { kind: 'Name', value: 'handle' },
                                      value: {
                                        kind: 'StringValue',
                                        value: 'featureImage',
                                        block: false,
                                      },
                                    },
                                  ],
                                },
                              ],
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'shortDescription' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'topics' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'types' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'title' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'slug' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetEntriesBySectionAndCategoriesAndSearchQuery,
  GetEntriesBySectionAndCategoriesAndSearchQueryVariables
>;
export const GetFooterNavigationDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetFooterNavigation' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'navigationNodes' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'navHandle' },
                value: {
                  kind: 'StringValue',
                  value: 'footerNavigation',
                  block: false,
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'level' },
                value: { kind: 'IntValue', value: '1' },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'children' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      {
                        kind: 'Field',
                        alias: { kind: 'Name', value: 'href' },
                        name: { kind: 'Name', value: 'url' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'newWindow' },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetFooterNavigationQuery,
  GetFooterNavigationQueryVariables
>;
export const GetFooterSubNavigationDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetFooterSubNavigation' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'navigationNodes' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'navHandle' },
                value: {
                  kind: 'StringValue',
                  value: 'footerSubNavigation',
                  block: false,
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'level' },
                value: { kind: 'IntValue', value: '1' },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                {
                  kind: 'Field',
                  alias: { kind: 'Name', value: 'href' },
                  name: { kind: 'Name', value: 'url' },
                },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                { kind: 'Field', name: { kind: 'Name', value: 'newWindow' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetFooterSubNavigationQuery,
  GetFooterSubNavigationQueryVariables
>;
export const GetFormieDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetFormie' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'handle' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NamedType',
              name: { kind: 'Name', value: 'String' },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'form' },
            name: { kind: 'Name', value: 'formieForm' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'handle' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'handle' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                { kind: 'Field', name: { kind: 'Name', value: 'handle' } },
                { kind: 'Field', name: { kind: 'Name', value: 'siteId' } },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'csrfToken' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'value' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'captchas' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'handle' },
                      },
                      { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'value' } },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'settings' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'submitAction' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'submitActionTab' },
                      },
                      {
                        kind: 'Field',
                        name: {
                          kind: 'Name',
                          value: 'submitActionMessageHtml',
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'redirectUrl' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'errorMessageHtml' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'redirectEntry' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'id' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'uri' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'slug' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'sectionHandle' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'pages' },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'name' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'settings' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: {
                                kind: 'Name',
                                value: 'submitButtonLabel',
                              },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'backButtonLabel' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'showBackButton' },
                            },
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'buttonsPosition' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'rows' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'rowFields' },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'FragmentSpread',
                                    name: {
                                      kind: 'Name',
                                      value: 'FieldFragment',
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...FieldFragmentFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<GetFormieQuery, GetFormieQueryVariables>;
export const GetGlobalSetFooterDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetGlobalSetFooter' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'globalSet' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'handle' },
                value: { kind: 'StringValue', value: 'footer', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'footer_GlobalSet' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'logo' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'logos_Asset' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'src' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'alt' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'width' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'height' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'socialLinks' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: {
                                  kind: 'Name',
                                  value: 'socialLinks_BlockType',
                                },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'linkedin' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'twitter' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'facebook' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'github' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'youtube' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetGlobalSetFooterQuery,
  GetGlobalSetFooterQueryVariables
>;
export const GetGlobalSetHeaderDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetGlobalSetHeader' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'globalSet' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'handle' },
                value: { kind: 'StringValue', value: 'header', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'header_GlobalSet' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: '__typename' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'navigationType' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'logo' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: { kind: 'Name', value: 'logos_Asset' },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    alias: { kind: 'Name', value: 'src' },
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'alt' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'width' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'height' },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetGlobalSetHeaderQuery,
  GetGlobalSetHeaderQueryVariables
>;
export const GetHomepageContentDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'getHomepageContent' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entry' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: { kind: 'StringValue', value: 'homepage', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'homepage_homepage_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'hero' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'Hero' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'contentBlocks' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'MatrixBlocks' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...HeroFragmentDoc.definitions,
    ...MatrixBlocksFragmentDoc.definitions,
    ...FullWidthSectionFragmentDoc.definitions,
    ...SectionTitlesFragmentDoc.definitions,
    ...LinkListFragmentDoc.definitions,
    ...ColumnLayoutFragmentDoc.definitions,
    ...ColumnSectionLayoutsFragmentDoc.definitions,
    ...ColumnQuoteFragmentDoc.definitions,
    ...AssetFragmentDoc.definitions,
    ...RedactorFragmentDoc.definitions,
    ...ColumnFormFragmentDoc.definitions,
    ...FaqsFragmentDoc.definitions,
    ...DataFragmentDoc.definitions,
    ...InformationGridLayoutFragmentDoc.definitions,
    ...InformationGridLayoutsFragmentDoc.definitions,
    ...TabbedContentFragmentDoc.definitions,
    ...FormFragmentDoc.definitions,
    ...TestimonialsCarouselFragmentDoc.definitions,
    ...FaqsSectionFragmentDoc.definitions,
    ...EntriesCarouselFragmentDoc.definitions,
    ...LogoCarouselSectionFragmentDoc.definitions,
    ...RedactorSectionFragmentDoc.definitions,
    ...QuoteSectionFragmentDoc.definitions,
    ...LargeImageSectionFragmentDoc.definitions,
    ...CalculatorFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetHomepageContentQuery,
  GetHomepageContentQueryVariables
>;
export const GetMainNavigationDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetMainNavigation' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'navigationNodes' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'navHandle' },
                value: {
                  kind: 'StringValue',
                  value: 'mainNavigation',
                  block: false,
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'level' },
                value: { kind: 'IntValue', value: '1' },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'mainNavigation_Node' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      { kind: 'Field', name: { kind: 'Name', value: 'url' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'element' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'Field',
                              name: { kind: 'Name', value: 'uri' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'newWindow' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'typeLabel' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'plainText' },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'children' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'InlineFragment',
                              typeCondition: {
                                kind: 'NamedType',
                                name: {
                                  kind: 'Name',
                                  value: 'mainNavigation_Node',
                                },
                              },
                              selectionSet: {
                                kind: 'SelectionSet',
                                selections: [
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'id' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'title' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'url' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'newWindow' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'plainText' },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'element' },
                                    selectionSet: {
                                      kind: 'SelectionSet',
                                      selections: [
                                        {
                                          kind: 'Field',
                                          name: {
                                            kind: 'Name',
                                            value: '__typename',
                                          },
                                        },
                                        {
                                          kind: 'Field',
                                          name: { kind: 'Name', value: 'uri' },
                                        },
                                        {
                                          kind: 'InlineFragment',
                                          typeCondition: {
                                            kind: 'NamedType',
                                            name: {
                                              kind: 'Name',
                                              value:
                                                'navigationBlocks_default_Entry',
                                            },
                                          },
                                          selectionSet: {
                                            kind: 'SelectionSet',
                                            selections: [
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'plainText',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'linkType',
                                                },
                                                selectionSet: {
                                                  kind: 'SelectionSet',
                                                  selections: [
                                                    {
                                                      kind: 'InlineFragment',
                                                      typeCondition: {
                                                        kind: 'NamedType',
                                                        name: {
                                                          kind: 'Name',
                                                          value:
                                                            'linkField_Link',
                                                        },
                                                      },
                                                      selectionSet: {
                                                        kind: 'SelectionSet',
                                                        selections: [
                                                          {
                                                            kind: 'Field',
                                                            name: {
                                                              kind: 'Name',
                                                              value: 'url',
                                                            },
                                                          },
                                                          {
                                                            kind: 'Field',
                                                            name: {
                                                              kind: 'Name',
                                                              value: 'text',
                                                            },
                                                          },
                                                        ],
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                  {
                                    kind: 'Field',
                                    name: { kind: 'Name', value: 'children' },
                                    selectionSet: {
                                      kind: 'SelectionSet',
                                      selections: [
                                        {
                                          kind: 'InlineFragment',
                                          typeCondition: {
                                            kind: 'NamedType',
                                            name: {
                                              kind: 'Name',
                                              value: 'mainNavigation_Node',
                                            },
                                          },
                                          selectionSet: {
                                            kind: 'SelectionSet',
                                            selections: [
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'id',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'title',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'url',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'element',
                                                },
                                                selectionSet: {
                                                  kind: 'SelectionSet',
                                                  selections: [
                                                    {
                                                      kind: 'Field',
                                                      name: {
                                                        kind: 'Name',
                                                        value: 'uri',
                                                      },
                                                    },
                                                  ],
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'newWindow',
                                                },
                                              },
                                              {
                                                kind: 'Field',
                                                name: {
                                                  kind: 'Name',
                                                  value: 'plainText',
                                                },
                                              },
                                            ],
                                          },
                                        },
                                      ],
                                    },
                                  },
                                ],
                              },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetMainNavigationQuery,
  GetMainNavigationQueryVariables
>;
export const GetPageContentBySectionDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'getPageContentBySection' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: {
            kind: 'Variable',
            name: { kind: 'Name', value: 'section' },
          },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'String' },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entries' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'section' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<
  GetPageContentBySectionQuery,
  GetPageContentBySectionQueryVariables
>;
export const GetPageContentByUriDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'getPageContentByUri' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'uri' } },
          type: {
            kind: 'ListType',
            type: {
              kind: 'NonNullType',
              type: {
                kind: 'NamedType',
                name: { kind: 'Name', value: 'String' },
              },
            },
          },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entry' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'uri' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'uri' },
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'caseStudies_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'hero' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'Hero' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'contentBlocks' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'MatrixBlocks' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'pages_default_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      { kind: 'Field', name: { kind: 'Name', value: 'title' } },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'hero' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'Hero' },
                            },
                          ],
                        },
                      },
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'contentBlocks' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'MatrixBlocks' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
        ],
      },
    },
    ...HeroFragmentDoc.definitions,
    ...MatrixBlocksFragmentDoc.definitions,
    ...FullWidthSectionFragmentDoc.definitions,
    ...SectionTitlesFragmentDoc.definitions,
    ...LinkListFragmentDoc.definitions,
    ...ColumnLayoutFragmentDoc.definitions,
    ...ColumnSectionLayoutsFragmentDoc.definitions,
    ...ColumnQuoteFragmentDoc.definitions,
    ...AssetFragmentDoc.definitions,
    ...RedactorFragmentDoc.definitions,
    ...ColumnFormFragmentDoc.definitions,
    ...FaqsFragmentDoc.definitions,
    ...DataFragmentDoc.definitions,
    ...InformationGridLayoutFragmentDoc.definitions,
    ...InformationGridLayoutsFragmentDoc.definitions,
    ...TabbedContentFragmentDoc.definitions,
    ...FormFragmentDoc.definitions,
    ...TestimonialsCarouselFragmentDoc.definitions,
    ...FaqsSectionFragmentDoc.definitions,
    ...EntriesCarouselFragmentDoc.definitions,
    ...LogoCarouselSectionFragmentDoc.definitions,
    ...RedactorSectionFragmentDoc.definitions,
    ...QuoteSectionFragmentDoc.definitions,
    ...LargeImageSectionFragmentDoc.definitions,
    ...CalculatorFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetPageContentByUriQuery,
  GetPageContentByUriQueryVariables
>;
export const GetPageRoutesDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'getPageRoutes' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entries' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: { kind: 'StringValue', value: 'pages', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'uri' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetPageRoutesQuery, GetPageRoutesQueryVariables>;
export const GetCaseStudiesContentDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetCaseStudiesContent' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entries' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: { kind: 'StringValue', value: 'pages', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'uri' } },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetCaseStudiesQuery, GetPageRoutesQueryVariables>;
export const GetResourcesContentDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'getResourcesContent' },
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'entry' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'section' },
                value: {
                  kind: 'StringValue',
                  value: 'resources',
                  block: false,
                },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'InlineFragment',
                  typeCondition: {
                    kind: 'NamedType',
                    name: { kind: 'Name', value: 'resources_resources_Entry' },
                  },
                  selectionSet: {
                    kind: 'SelectionSet',
                    selections: [
                      {
                        kind: 'Field',
                        name: { kind: 'Name', value: 'articleHero' },
                        selectionSet: {
                          kind: 'SelectionSet',
                          selections: [
                            {
                              kind: 'FragmentSpread',
                              name: { kind: 'Name', value: 'ArticleHero' },
                            },
                          ],
                        },
                      },
                    ],
                  },
                },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'topics' },
            name: { kind: 'Name', value: 'categories' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'group' },
                value: { kind: 'StringValue', value: 'topics', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'slug' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
              ],
            },
          },
          {
            kind: 'Field',
            alias: { kind: 'Name', value: 'types' },
            name: { kind: 'Name', value: 'categories' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'group' },
                value: { kind: 'StringValue', value: 'types', block: false },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                { kind: 'Field', name: { kind: 'Name', value: 'id' } },
                { kind: 'Field', name: { kind: 'Name', value: 'slug' } },
                { kind: 'Field', name: { kind: 'Name', value: 'title' } },
              ],
            },
          },
        ],
      },
    },
    ...ArticleHeroFragmentDoc.definitions,
  ],
} as unknown as DocumentNode<
  GetResourcesContentQuery,
  GetResourcesContentQueryVariables
>;
export const GetSeomaticDocument = {
  kind: 'Document',
  definitions: [
    {
      kind: 'OperationDefinition',
      operation: 'query',
      name: { kind: 'Name', value: 'GetSeomatic' },
      variableDefinitions: [
        {
          kind: 'VariableDefinition',
          variable: { kind: 'Variable', name: { kind: 'Name', value: 'uri' } },
          type: { kind: 'NamedType', name: { kind: 'Name', value: 'String' } },
        },
      ],
      selectionSet: {
        kind: 'SelectionSet',
        selections: [
          {
            kind: 'Field',
            name: { kind: 'Name', value: 'seomatic' },
            arguments: [
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'uri' },
                value: {
                  kind: 'Variable',
                  name: { kind: 'Name', value: 'uri' },
                },
              },
              {
                kind: 'Argument',
                name: { kind: 'Name', value: 'asArray' },
                value: { kind: 'BooleanValue', value: true },
              },
            ],
            selectionSet: {
              kind: 'SelectionSet',
              selections: [
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'metaTitleContainer' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'metaTagContainer' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'metaLinkContainer' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'metaScriptContainer' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'metaJsonLdContainer' },
                },
                {
                  kind: 'Field',
                  name: { kind: 'Name', value: 'metaSiteVarsContainer' },
                },
              ],
            },
          },
        ],
      },
    },
  ],
} as unknown as DocumentNode<GetSeomaticQuery, GetSeomaticQueryVariables>;
